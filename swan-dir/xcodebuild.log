Command line invocation:
    /Applications/Xcode-15.0.1.app/Contents/Developer/usr/bin/xcodebuild clean build SWIFT_COMPILATION_MODE=wholemodule "CODE_SIGN_IDENTITY=\"\"" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO "OTHER_SWIFT_FLAGS=-Xfrontend -sil-based-debuginfo -Xllvm -sil-print-debuginfo -Xllvm -sil-print-before=SerializeSILPass"

User defaults from command line:
    IDEPackageSupportUseBuiltinSCM = YES

Build settings from command line:
    CODE_SIGN_IDENTITY = ""
    CODE_SIGNING_ALLOWED = NO
    CODE_SIGNING_REQUIRED = NO
    OTHER_SWIFT_FLAGS = -Xfrontend -sil-based-debuginfo -Xllvm -sil-print-debuginfo -Xllvm -sil-print-before=SerializeSILPass
    SWIFT_COMPILATION_MODE = wholemodule

note: Using codesigning identity override: ""

** CLEAN SUCCEEDED **

note: Using codesigning identity override: ""
ComputeTargetDependencyGraph
note: Building targets in dependency order
note: Target dependency graph (1 target)
    Target 'TestSwan' in project 'TestSwan' (no dependencies)

GatherProvisioningInputs

CreateBuildDescription
Build description signature: 443d73157d52fd11a1e4de0ebb4cbe96
Build description path: /Users/v/Developer/TestSwan/build/XCBuildData/443d73157d52fd11a1e4de0ebb4cbe96.xcbuilddata

CreateBuildDirectory /Users/v/Developer/TestSwan/build
    cd /Users/v/Developer/TestSwan/TestSwan.xcodeproj
    builtin-create-build-directory /Users/v/Developer/TestSwan/build

ClangStatCache /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang-stat-cache /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/com.apple.DeveloperTools/15.0.1-15A507/Xcode/SDKStatCaches.noindex/macosx14.0-23A334-a6d624f38f346a2334bec600b7c81604.sdkstatcache
    cd /Users/v/Developer/TestSwan/TestSwan.xcodeproj
    /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang-stat-cache /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk -o /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/com.apple.DeveloperTools/15.0.1-15A507/Xcode/SDKStatCaches.noindex/macosx14.0-23A334-a6d624f38f346a2334bec600b7c81604.sdkstatcache

CreateBuildDirectory /Users/v/Developer/TestSwan/build/Release
    cd /Users/v/Developer/TestSwan/TestSwan.xcodeproj
    builtin-create-build-directory /Users/v/Developer/TestSwan/build/Release

CreateBuildDirectory /Users/v/Developer/TestSwan/build/EagerLinkingTBDs/Release
    cd /Users/v/Developer/TestSwan/TestSwan.xcodeproj
    builtin-create-build-directory /Users/v/Developer/TestSwan/build/EagerLinkingTBDs/Release

MkDir /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/MacOS (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /bin/mkdir -p /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/MacOS

MkDir /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/Resources (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /bin/mkdir -p /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/Resources

MkDir /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /bin/mkdir -p /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents

MkDir /Users/v/Developer/TestSwan/build/Release/TestSwan.app (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /bin/mkdir -p /Users/v/Developer/TestSwan/build/Release/TestSwan.app

WriteAuxiliaryFile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-project-headers.hmap (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    write-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-project-headers.hmap

WriteAuxiliaryFile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-own-target-headers.hmap (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    write-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-own-target-headers.hmap

WriteAuxiliaryFile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan.hmap (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    write-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan.hmap

WriteAuxiliaryFile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/all-product-headers.yaml (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    write-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/all-product-headers.yaml

WriteAuxiliaryFile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-generated-files.hmap (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    write-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-generated-files.hmap

WriteAuxiliaryFile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-all-target-headers.hmap (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    write-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-all-target-headers.hmap

WriteAuxiliaryFile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-all-non-framework-target-headers.hmap (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    write-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-all-non-framework-target-headers.hmap

WriteAuxiliaryFile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.LinkFileList (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    write-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.LinkFileList

WriteAuxiliaryFile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/empty-TestSwan.plist (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    write-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/empty-TestSwan.plist

WriteAuxiliaryFile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.SwiftFileList (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    write-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.SwiftFileList

WriteAuxiliaryFile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan_const_extract_protocols.json (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    write-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan_const_extract_protocols.json

WriteAuxiliaryFile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.LinkFileList (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    write-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.LinkFileList

WriteAuxiliaryFile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan-OutputFileMap.json (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    write-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan-OutputFileMap.json

WriteAuxiliaryFile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan_const_extract_protocols.json (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    write-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan_const_extract_protocols.json

WriteAuxiliaryFile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.SwiftFileList (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    write-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.SwiftFileList

WriteAuxiliaryFile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan-OutputFileMap.json (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    write-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan-OutputFileMap.json

CompileStoryboard /Users/v/Developer/TestSwan/TestSwan/Base.lproj/Main.storyboard (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /Applications/Xcode-15.0.1.app/Contents/Developer/usr/bin/ibtool --errors --warnings --notices --module TestSwan --output-partial-info-plist /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Base.lproj/Main-SBPartialInfo.plist --auto-activate-custom-fonts --target-device mac --minimum-deployment-target 14.0 --output-format human-readable-text --compilation-directory /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Base.lproj /Users/v/Developer/TestSwan/TestSwan/Base.lproj/Main.storyboard

GenerateAssetSymbols /Users/v/Developer/TestSwan/TestSwan/Assets.xcassets (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /Applications/Xcode-15.0.1.app/Contents/Developer/usr/bin/actool --output-format human-readable-text --notices --warnings --export-dependency-info /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/assetcatalog_dependencies --output-partial-info-plist /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/assetcatalog_generated_info.plist --app-icon AppIcon --accent-color AccentColor --enable-on-demand-resources NO --development-region en --target-device mac --minimum-deployment-target 14.0 --platform macosx --compile /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/Resources /Users/v/Developer/TestSwan/TestSwan/Assets.xcassets --bundle-identifier com.my.TestSwan --generate-swift-asset-symbols /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift --generate-objc-asset-symbols /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.h --generate-asset-symbol-index /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols-Index.plist
/* com.apple.actool.compilation-results */
/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols-Index.plist
/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.h
/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift


CompileAssetCatalog /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/Resources /Users/v/Developer/TestSwan/TestSwan/Assets.xcassets (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /Applications/Xcode-15.0.1.app/Contents/Developer/usr/bin/actool --output-format human-readable-text --notices --warnings --export-dependency-info /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/assetcatalog_dependencies --output-partial-info-plist /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/assetcatalog_generated_info.plist --app-icon AppIcon --accent-color AccentColor --enable-on-demand-resources NO --development-region en --target-device mac --minimum-deployment-target 14.0 --platform macosx --compile /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/Resources /Users/v/Developer/TestSwan/TestSwan/Assets.xcassets
/* com.apple.actool.compilation-results */
/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/assetcatalog_generated_info.plist


SwiftDriver TestSwan normal arm64 com.apple.xcode.tools.swift.compiler (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-SwiftDriver -- /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name TestSwan -O -whole-module-optimization -enforce-exclusivity\=checked @/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.SwiftFileList -Xfrontend -sil-based-debuginfo -Xllvm -sil-print-debuginfo -Xllvm -sil-print-before\=SerializeSILPass -sdk /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk -target arm64-apple-macos14.0 -enable-bare-slash-regex -g -Xfrontend -serialize-debugging-options -swift-version 5 -I /Users/v/Developer/TestSwan/build/Release -F /Users/v/Developer/TestSwan/build/Release -emit-localized-strings -emit-localized-strings-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64 -c -num-threads 12 -Xcc -ivfsstatcache -Xcc /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/com.apple.DeveloperTools/15.0.1-15A507/Xcode/SDKStatCaches.noindex/macosx14.0-23A334-a6d624f38f346a2334bec600b7c81604.sdkstatcache -output-file-map /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan-OutputFileMap.json -use-frontend-parseable-output -save-temps -no-color-diagnostics -serialize-diagnostics -emit-dependencies -emit-module -emit-module-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.swiftmodule -validate-clang-modules-once -clang-build-session-file /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/org.llvm.clang/ModuleCache.noindex/Session.modulevalidation -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/swift-overrides.hmap -emit-const-values -Xfrontend -const-gather-protocols-file -Xfrontend /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan_const_extract_protocols.json -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-generated-files.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-own-target-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-all-target-headers.hmap -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-project-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/Release/include -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources-normal/arm64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/arm64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources -emit-objc-header -emit-objc-header-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan-Swift.h -working-directory /Users/v/Developer/TestSwan -no-emit-module-separately-wmo

SwiftDriver TestSwan normal x86_64 com.apple.xcode.tools.swift.compiler (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-SwiftDriver -- /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name TestSwan -O -whole-module-optimization -enforce-exclusivity\=checked @/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.SwiftFileList -Xfrontend -sil-based-debuginfo -Xllvm -sil-print-debuginfo -Xllvm -sil-print-before\=SerializeSILPass -sdk /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk -target x86_64-apple-macos14.0 -enable-bare-slash-regex -g -Xfrontend -serialize-debugging-options -swift-version 5 -I /Users/v/Developer/TestSwan/build/Release -F /Users/v/Developer/TestSwan/build/Release -emit-localized-strings -emit-localized-strings-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64 -c -num-threads 12 -Xcc -ivfsstatcache -Xcc /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/com.apple.DeveloperTools/15.0.1-15A507/Xcode/SDKStatCaches.noindex/macosx14.0-23A334-a6d624f38f346a2334bec600b7c81604.sdkstatcache -output-file-map /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan-OutputFileMap.json -use-frontend-parseable-output -save-temps -no-color-diagnostics -serialize-diagnostics -emit-dependencies -emit-module -emit-module-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.swiftmodule -validate-clang-modules-once -clang-build-session-file /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/org.llvm.clang/ModuleCache.noindex/Session.modulevalidation -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/swift-overrides.hmap -emit-const-values -Xfrontend -const-gather-protocols-file -Xfrontend /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan_const_extract_protocols.json -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-generated-files.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-own-target-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-all-target-headers.hmap -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-project-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/Release/include -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources-normal/x86_64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/x86_64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources -emit-objc-header -emit-objc-header-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan-Swift.h -working-directory /Users/v/Developer/TestSwan -no-emit-module-separately-wmo

SwiftDriver\ Compilation TestSwan normal x86_64 com.apple.xcode.tools.swift.compiler (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-Swift-Compilation -- /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name TestSwan -O -whole-module-optimization -enforce-exclusivity\=checked @/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.SwiftFileList -Xfrontend -sil-based-debuginfo -Xllvm -sil-print-debuginfo -Xllvm -sil-print-before\=SerializeSILPass -sdk /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk -target x86_64-apple-macos14.0 -enable-bare-slash-regex -g -Xfrontend -serialize-debugging-options -swift-version 5 -I /Users/v/Developer/TestSwan/build/Release -F /Users/v/Developer/TestSwan/build/Release -emit-localized-strings -emit-localized-strings-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64 -c -num-threads 12 -Xcc -ivfsstatcache -Xcc /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/com.apple.DeveloperTools/15.0.1-15A507/Xcode/SDKStatCaches.noindex/macosx14.0-23A334-a6d624f38f346a2334bec600b7c81604.sdkstatcache -output-file-map /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan-OutputFileMap.json -use-frontend-parseable-output -save-temps -no-color-diagnostics -serialize-diagnostics -emit-dependencies -emit-module -emit-module-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.swiftmodule -validate-clang-modules-once -clang-build-session-file /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/org.llvm.clang/ModuleCache.noindex/Session.modulevalidation -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/swift-overrides.hmap -emit-const-values -Xfrontend -const-gather-protocols-file -Xfrontend /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan_const_extract_protocols.json -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-generated-files.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-own-target-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-all-target-headers.hmap -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-project-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/Release/include -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources-normal/x86_64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/x86_64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources -emit-objc-header -emit-objc-header-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan-Swift.h -working-directory /Users/v/Developer/TestSwan -no-emit-module-separately-wmo

SwiftDriver\ Compilation TestSwan normal arm64 com.apple.xcode.tools.swift.compiler (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-Swift-Compilation -- /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name TestSwan -O -whole-module-optimization -enforce-exclusivity\=checked @/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.SwiftFileList -Xfrontend -sil-based-debuginfo -Xllvm -sil-print-debuginfo -Xllvm -sil-print-before\=SerializeSILPass -sdk /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk -target arm64-apple-macos14.0 -enable-bare-slash-regex -g -Xfrontend -serialize-debugging-options -swift-version 5 -I /Users/v/Developer/TestSwan/build/Release -F /Users/v/Developer/TestSwan/build/Release -emit-localized-strings -emit-localized-strings-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64 -c -num-threads 12 -Xcc -ivfsstatcache -Xcc /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/com.apple.DeveloperTools/15.0.1-15A507/Xcode/SDKStatCaches.noindex/macosx14.0-23A334-a6d624f38f346a2334bec600b7c81604.sdkstatcache -output-file-map /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan-OutputFileMap.json -use-frontend-parseable-output -save-temps -no-color-diagnostics -serialize-diagnostics -emit-dependencies -emit-module -emit-module-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.swiftmodule -validate-clang-modules-once -clang-build-session-file /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/org.llvm.clang/ModuleCache.noindex/Session.modulevalidation -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/swift-overrides.hmap -emit-const-values -Xfrontend -const-gather-protocols-file -Xfrontend /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan_const_extract_protocols.json -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-generated-files.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-own-target-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-all-target-headers.hmap -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-project-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/Release/include -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources-normal/arm64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/arm64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources -emit-objc-header -emit-objc-header-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan-Swift.h -working-directory /Users/v/Developer/TestSwan -no-emit-module-separately-wmo

SwiftCompile normal x86_64 Compiling\ NSTextField+Extension.swift,\ ViewController.swift,\ AppDelegate.swift,\ GeneratedAssetSymbols.swift /Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift /Users/v/Developer/TestSwan/TestSwan/ViewController.swift /Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-swiftTaskExecution -- /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c /Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift /Users/v/Developer/TestSwan/TestSwan/ViewController.swift /Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift -supplementary-output-file-map /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/supplementaryOutputs-2 -emit-localized-strings -emit-localized-strings-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64 -target x86_64-apple-macos14.0 -enable-objc-interop -stack-check -sdk /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk -I /Users/v/Developer/TestSwan/build/Release -F /Users/v/Developer/TestSwan/build/Release -no-color-diagnostics -g -swift-version 5 -enforce-exclusivity\=checked -O -sil-based-debuginfo -serialize-debugging-options -const-gather-protocols-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan_const_extract_protocols.json -enable-bare-slash-regex -empty-abi-descriptor -validate-clang-modules-once -clang-build-session-file /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/org.llvm.clang/ModuleCache.noindex/Session.modulevalidation -Xcc -working-directory -Xcc /Users/v/Developer/TestSwan -resource-dir /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -Xllvm -sil-print-debuginfo -Xllvm -sil-print-before\=SerializeSILPass -Xcc -ivfsstatcache -Xcc /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/com.apple.DeveloperTools/15.0.1-15A507/Xcode/SDKStatCaches.noindex/macosx14.0-23A334-a6d624f38f346a2334bec600b7c81604.sdkstatcache -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-generated-files.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-own-target-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-all-target-headers.hmap -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-project-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/Release/include -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources-normal/x86_64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/x86_64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources -module-name TestSwan -frontend-parseable-output -disable-clang-spi -target-sdk-version 14.0 -target-sdk-name macosx14.0 -external-plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/lib/swift/host/plugins\#/Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/local/lib/swift/host/plugins\#/Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins\#/Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins\#/Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -enable-default-cmo -num-threads 12 -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/NSTextField+Extension.o -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/ViewController.o -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/AppDelegate.o -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/GeneratedAssetSymbols.o -index-unit-output-path /TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/NSTextField+Extension.o -index-unit-output-path /TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/ViewController.o -index-unit-output-path /TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/AppDelegate.o -index-unit-output-path /TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/GeneratedAssetSymbols.o
  *** SIL module before #2766, stage HighLevel,Module+StackPromote, pass 10: SerializeSILPass (serialize-sil)
sil_stage canonical

import Builtin
import Swift
import SwiftShims

// _swiftEmptyArrayStorage
// clang name: _swiftEmptyArrayStorage
sil_global public_external @_swiftEmptyArrayStorage : $_SwiftEmptyArrayStorage

sil_scope 1 { loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":13:17 parent @$s8TestSwan14ViewControllerC11viewDidLoadyyFTo : $@convention(objc_method) (ViewController) -> () }
sil_scope 2 { loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":13:17 parent 1 }
sil_scope 3 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":13:17 parent @$s8TestSwan14ViewControllerC11viewDidLoadyyF : $@convention(method) (@guaranteed ViewController) -> () inlined_at 2 }

// @objc ViewController.viewDidLoad(), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":13:17, scope 1
sil private [thunk] @$s8TestSwan14ViewControllerC11viewDidLoadyyFTo : $@convention(objc_method) (ViewController) -> () {
[%0: read c*.v**, write c*.v**, copy c*.v**, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %3, %2, %1
bb0(%0 : $ViewController):
  debug_value %0 : $ViewController, let, name "self", argno 1, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":13:17, scope 3 // id: %1
  %2 = upcast %0 : $ViewController to $NSViewController, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":14:5, scope 3 // user: %4
  %3 = objc_super_method %0 : $ViewController, #NSViewController.viewDidLoad!foreign : (NSViewController) -> () -> (), $@convention(objc_method) (NSViewController) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":14:11, scope 3 // user: %4
  %4 = apply %3(%2) : $@convention(objc_method) (NSViewController) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":14:11, scope 3
  %5 = tuple (), loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":17:3, scope 3 // user: %6
  return %5 : $(), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":13:17, scope 1 // id: %6
} // end sil function '$s8TestSwan14ViewControllerC11viewDidLoadyyFTo'

sil_scope 4 { loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16 parent @$s8TestSwan14ViewControllerC17representedObjectypSgvgTo : $@convention(objc_method) (ViewController) -> @autoreleased Optional<AnyObject> }
sil_scope 5 { loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16 parent 4 }
sil_scope 6 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16 parent @$s8TestSwan14ViewControllerC17representedObjectypSgvg : $@convention(method) (@guaranteed ViewController) -> @out Optional<Any> inlined_at 5 }

// @objc ViewController.representedObject.getter, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4
sil private [thunk] @$s8TestSwan14ViewControllerC17representedObjectypSgvgTo : $@convention(objc_method) (ViewController) -> @autoreleased Optional<AnyObject> {
[%0: read c*.v**, write c*.v**, copy **, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %18, %15, %5, %4, %3, %2
bb0(%0 : $ViewController):
  %1 = alloc_stack $Optional<Any>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // users: %17, %14, %11, %35, %21, %20
  debug_value %0 : $ViewController, let, name "self", argno 1, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 6 // id: %2
  %3 = upcast %0 : $ViewController to $NSViewController, scope 6 // user: %6
  %4 = objc_super_method %0 : $ViewController, #NSViewController.representedObject!getter.foreign : (NSViewController) -> () -> Any?, $@convention(objc_method) (NSViewController) -> @autoreleased Optional<AnyObject>, scope 6 // user: %6
  strong_retain %0 : $ViewController, loc * "<compiler-generated>":0:0, scope 4 // id: %5
  %6 = apply %4(%3) : $@convention(objc_method) (NSViewController) -> @autoreleased Optional<AnyObject>, scope 6 // users: %13, %7
  switch_enum %6 : $Optional<AnyObject>, case #Optional.some!enumelt: bb1, case #Optional.none!enumelt: bb2, scope 6 // id: %7

// %8                                             // user: %9
bb1(%8 : $AnyObject):                             // Preds: bb0
  %9 = unchecked_ref_cast %8 : $AnyObject to $Optional<AnyObject>, scope 6 // user: %12
  // function_ref _bridgeAnyObjectToAny(_:)
  %10 = function_ref @$ss018_bridgeAnyObjectToB0yypyXlSgF : $@convention(thin) (@guaranteed Optional<AnyObject>) -> @out Any, scope 6 // user: %12
  %11 = init_enum_data_addr %1 : $*Optional<Any>, #Optional.some!enumelt, scope 6 // user: %12
  %12 = apply %10(%11, %9) : $@convention(thin) (@guaranteed Optional<AnyObject>) -> @out Any, scope 6
  release_value %6 : $Optional<AnyObject>, loc * "<compiler-generated>":0:0, scope 4 // id: %13
  inject_enum_addr %1 : $*Optional<Any>, #Optional.some!enumelt, scope 6 // id: %14
  strong_release %0 : $ViewController, loc * "<compiler-generated>":0:0, scope 4 // id: %15
  br bb3, scope 6                                 // id: %16

bb2:                                              // Preds: bb0
  inject_enum_addr %1 : $*Optional<Any>, #Optional.none!enumelt, scope 6 // id: %17
  strong_release %0 : $ViewController, loc * "<compiler-generated>":0:0, scope 4 // id: %18
  br bb3, scope 6                                 // id: %19

bb3:                                              // Preds: bb2 bb1
  switch_enum_addr %1 : $*Optional<Any>, case #Optional.some!enumelt: bb4, case #Optional.none!enumelt: bb5, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // id: %20

bb4:                                              // Preds: bb3
  %21 = unchecked_take_enum_data_addr %1 : $*Optional<Any>, #Optional.some!enumelt, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // users: %30, %22
  %22 = open_existential_addr immutable_access %21 : $*Any to $*@opened("2DF2D87E-8BDA-11EE-BBC3-86803A041461", Any) Self, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // users: %26, %24, %23
  %23 = alloc_stack $@opened("2DF2D87E-8BDA-11EE-BBC3-86803A041461", Any) Self, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // type-defs: %22; users: %27, %29, %26, %24
  copy_addr %22 to [init] %23 : $*@opened("2DF2D87E-8BDA-11EE-BBC3-86803A041461", Any) Self, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // id: %24
  // function_ref _bridgeAnythingToObjectiveC<A>(_:)
  %25 = function_ref @$ss27_bridgeAnythingToObjectiveCyyXlxlF : $@convention(thin) <τ_0_0> (@in_guaranteed τ_0_0) -> @owned AnyObject, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // user: %26
  %26 = apply %25<@opened("2DF2D87E-8BDA-11EE-BBC3-86803A041461", Any) Self>(%23) : $@convention(thin) <τ_0_0> (@in_guaranteed τ_0_0) -> @owned AnyObject, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // type-defs: %22; user: %28
  destroy_addr %23 : $*@opened("2DF2D87E-8BDA-11EE-BBC3-86803A041461", Any) Self, loc * "<compiler-generated>":0:0, scope 4 // id: %27
  %28 = enum $Optional<AnyObject>, #Optional.some!enumelt, %26 : $AnyObject, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // user: %31
  dealloc_stack %23 : $*@opened("2DF2D87E-8BDA-11EE-BBC3-86803A041461", Any) Self, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // id: %29
  destroy_addr %21 : $*Any, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // id: %30
  br bb6(%28 : $Optional<AnyObject>), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // id: %31

bb5:                                              // Preds: bb3
  %32 = enum $Optional<AnyObject>, #Optional.none!enumelt, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // user: %33
  br bb6(%32 : $Optional<AnyObject>), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // id: %33

// %34                                            // user: %36
bb6(%34 : $Optional<AnyObject>):                  // Preds: bb5 bb4
  dealloc_stack %1 : $*Optional<Any>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // id: %35
  return %34 : $Optional<AnyObject>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // id: %36
} // end sil function '$s8TestSwan14ViewControllerC17representedObjectypSgvgTo'

sil_scope 7 {  parent @$ss27_bridgeAnythingToObjectiveCyyXlxlF : $@convention(thin) <τ_0_0> (@in_guaranteed τ_0_0) -> @owned AnyObject }

// _bridgeAnythingToObjectiveC<A>(_:), scope 7
sil public_external [serialized] @$ss27_bridgeAnythingToObjectiveCyyXlxlF : $@convention(thin) <T> (@in_guaranteed T) -> @owned AnyObject {
// %0                                             // users: %32, %26
bb0(%0 : $*T):
  %1 = metatype $@thick T.Type, scope 7           // users: %10, %2
  %2 = builtin "canBeClass"<T>(%1 : $@thick T.Type) : $Builtin.Int8, scope 7 // users: %7, %4
  %3 = integer_literal $Builtin.Int8, 0, scope 7  // user: %4
  %4 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %3 : $Builtin.Int8) : $Builtin.Int1, scope 7 // user: %5
  cond_br %4, bb7, bb1, scope 7                   // id: %5

bb1:                                              // Preds: bb0
  %6 = integer_literal $Builtin.Int8, 1, scope 7  // user: %7
  %7 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %6 : $Builtin.Int8) : $Builtin.Int1, scope 7 // user: %8
  cond_br %7, bb5, bb2, scope 7                   // id: %8

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %9 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 7 // user: %10
  %10 = apply %9<T>(%1) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 7 // user: %11
  %11 = struct_extract %10 : $Bool, #Bool._value, scope 7 // user: %13
  %12 = integer_literal $Builtin.Int1, -1, scope 7 // user: %13
  %13 = builtin "int_expect_Int1"(%11 : $Builtin.Int1, %12 : $Builtin.Int1) : $Builtin.Int1, scope 7 // user: %14
  cond_br %13, bb4, bb3, scope 7                  // id: %14

bb3:                                              // Preds: bb2
  br bb8, scope 7                                 // id: %15

bb4:                                              // Preds: bb2
  br bb6, scope 7                                 // id: %16

bb5:                                              // Preds: bb1
  br bb6, scope 7                                 // id: %17

bb6:                                              // Preds: bb5 bb4
  %18 = builtin "sizeof"<T>() : $Builtin.Word, scope 7 // user: %19
  %19 = builtin "sextOrBitCast_Word_Int64"(%18 : $Builtin.Word) : $Builtin.Int64, scope 7 // user: %22
  %20 = builtin "sizeof"<AnyObject>() : $Builtin.Word, scope 7 // user: %21
  %21 = builtin "sextOrBitCast_Word_Int64"(%20 : $Builtin.Word) : $Builtin.Int64, scope 7 // user: %22
  %22 = builtin "cmp_eq_Int64"(%19 : $Builtin.Int64, %21 : $Builtin.Int64) : $Builtin.Int1, scope 7 // user: %24
  %23 = integer_literal $Builtin.Int1, -1, scope 7 // user: %24
  %24 = builtin "xor_Int1"(%22 : $Builtin.Int1, %23 : $Builtin.Int1) : $Builtin.Int1, scope 7 // user: %25
  cond_fail %24 : $Builtin.Int1, "Can't unsafeBitCast between types of different sizes", scope 7 // id: %25
  %26 = unchecked_addr_cast %0 : $*T to $*AnyObject, scope 7 // user: %27
  %27 = load %26 : $*AnyObject, scope 7           // users: %29, %28
  strong_retain %27 : $AnyObject, scope 7         // id: %28
  br bb9(%27 : $AnyObject), scope 7               // id: %29

bb7:                                              // Preds: bb0
  br bb8, scope 7                                 // id: %30

bb8:                                              // Preds: bb7 bb3
  %31 = alloc_stack $T, scope 7                   // users: %35, %34, %32
  copy_addr %0 to [init] %31 : $*T, scope 7       // id: %32
  // function_ref _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)
  %33 = function_ref @$ss38_bridgeAnythingNonVerbatimToObjectiveCyyXlxnlF : $@convention(thin) <τ_0_0> (@in τ_0_0) -> @owned AnyObject, scope 7 // user: %34
  %34 = apply %33<T>(%31) : $@convention(thin) <τ_0_0> (@in τ_0_0) -> @owned AnyObject, scope 7 // user: %36
  dealloc_stack %31 : $*T, scope 7                // id: %35
  br bb9(%34 : $AnyObject), scope 7               // id: %36

// %37                                            // user: %38
bb9(%37 : $AnyObject):                            // Preds: bb8 bb6
  return %37 : $AnyObject, scope 7                // id: %38
} // end sil function '$ss27_bridgeAnythingToObjectiveCyyXlxlF'

sil_scope 8 { loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16 parent @$s8TestSwan14ViewControllerC17representedObjectypSgvsTo : $@convention(objc_method) (Optional<AnyObject>, ViewController) -> () }

// @objc ViewController.representedObject.setter, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8
sil private [thunk] @$s8TestSwan14ViewControllerC17representedObjectypSgvsTo : $@convention(objc_method) (Optional<AnyObject>, ViewController) -> () {
[%0: read v**.c*.v**, write v**.c*.v**, copy **, destroy v**.c*.v**]
[%1: read c*.v**, write c*.v**, copy **, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %11, %9, %3
// %1                                             // users: %19, %8, %15, %18
bb0(%0 : $Optional<AnyObject>, %1 : $ViewController):
  %2 = alloc_stack $Optional<Any>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // users: %20, %18, %14, %12, %7
  switch_enum %0 : $Optional<AnyObject>, case #Optional.some!enumelt: bb1, case #Optional.none!enumelt: bb2, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // id: %3

// %4                                             // user: %5
bb1(%4 : $AnyObject):                             // Preds: bb0
  %5 = unchecked_ref_cast %4 : $AnyObject to $Optional<AnyObject>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // user: %10
  // function_ref _bridgeAnyObjectToAny(_:)
  %6 = function_ref @$ss018_bridgeAnyObjectToB0yypyXlSgF : $@convention(thin) (@guaranteed Optional<AnyObject>) -> @out Any, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // user: %10
  %7 = init_enum_data_addr %2 : $*Optional<Any>, #Optional.some!enumelt, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // user: %10
  strong_retain %1 : $ViewController, loc * "<compiler-generated>":0:0, scope 8 // id: %8
  retain_value %0 : $Optional<AnyObject>, loc * "<compiler-generated>":0:0, scope 8 // id: %9
  %10 = apply %6(%7, %5) : $@convention(thin) (@guaranteed Optional<AnyObject>) -> @out Any, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8
  release_value %0 : $Optional<AnyObject>, loc * "<compiler-generated>":0:0, scope 8 // id: %11
  inject_enum_addr %2 : $*Optional<Any>, #Optional.some!enumelt, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // id: %12
  br bb3, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // id: %13

bb2:                                              // Preds: bb0
  inject_enum_addr %2 : $*Optional<Any>, #Optional.none!enumelt, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // id: %14
  strong_retain %1 : $ViewController, loc * "<compiler-generated>":0:0, scope 8 // id: %15
  br bb3, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // id: %16

bb3:                                              // Preds: bb2 bb1
  // function_ref ViewController.representedObject.setter
  %17 = function_ref @$s8TestSwan14ViewControllerC17representedObjectypSgvs : $@convention(method) (@in Optional<Any>, @guaranteed ViewController) -> (), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // user: %18
  %18 = apply %17(%2, %1) : $@convention(method) (@in Optional<Any>, @guaranteed ViewController) -> (), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // user: %21
  strong_release %1 : $ViewController, loc * "<compiler-generated>":0:0, scope 8 // id: %19
  dealloc_stack %2 : $*Optional<Any>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // id: %20
  return %18 : $(), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // id: %21
} // end sil function '$s8TestSwan14ViewControllerC17representedObjectypSgvsTo'


// _bridgeAnyObjectToAny(_:), scope 0
sil @$ss018_bridgeAnyObjectToB0yypyXlSgF : $@convention(thin) (@guaranteed Optional<AnyObject>) -> @out Any

sil_scope 9 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16 parent @$s8TestSwan14ViewControllerC17representedObjectypSgvs : $@convention(method) (@in Optional<Any>, @guaranteed ViewController) -> () }
sil_scope 10 {  parent 9 }
sil_scope 11 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":20:5 parent @$s8TestSwan14ViewControllerC17representedObjectypSgvW : $@convention(method) (@guaranteed ViewController) -> () inlined_at 10 }

// ViewController.representedObject.setter, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 9
sil hidden @$s8TestSwan14ViewControllerC17representedObjectypSgvs : $@convention(method) (@in Optional<Any>, @guaranteed ViewController) -> () {
[%0: read v**, write v**, copy v**, destroy v**]
[%1: read c*.v**, write c*.v**, copy c*.v**, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0 "value"                                     // users: %25, %6, %2
// %1 "self"                                      // users: %27, %23, %4, %3
bb0(%0 : $*Optional<Any>, %1 : $ViewController):
  debug_value %0 : $*Optional<Any>, let, name "value", argno 1, implicit, expr op_deref, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 9 // id: %2
  debug_value %1 : $ViewController, let, name "self", argno 2, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 9 // id: %3
  %4 = upcast %1 : $ViewController to $NSViewController, scope 9 // user: %24
  %5 = alloc_stack $Optional<Any>, scope 9        // users: %22, %8, %7, %6
  copy_addr %0 to [init] %5 : $*Optional<Any>, scope 9 // id: %6
  switch_enum_addr %5 : $*Optional<Any>, case #Optional.some!enumelt: bb1, case #Optional.none!enumelt: bb2, scope 9 // id: %7

bb1:                                              // Preds: bb0
  %8 = unchecked_take_enum_data_addr %5 : $*Optional<Any>, #Optional.some!enumelt, scope 9 // users: %17, %9
  %9 = open_existential_addr immutable_access %8 : $*Any to $*@opened("2DF2DDBA-8BDA-11EE-BBC3-86803A041461", Any) Self, scope 9 // users: %13, %11, %10
  %10 = alloc_stack $@opened("2DF2DDBA-8BDA-11EE-BBC3-86803A041461", Any) Self, scope 9 // type-defs: %9; users: %14, %16, %13, %11
  copy_addr %9 to [init] %10 : $*@opened("2DF2DDBA-8BDA-11EE-BBC3-86803A041461", Any) Self, scope 9 // id: %11
  // function_ref _bridgeAnythingToObjectiveC<A>(_:)
  %12 = function_ref @$ss27_bridgeAnythingToObjectiveCyyXlxlF : $@convention(thin) <τ_0_0> (@in_guaranteed τ_0_0) -> @owned AnyObject, scope 9 // user: %13
  %13 = apply %12<@opened("2DF2DDBA-8BDA-11EE-BBC3-86803A041461", Any) Self>(%10) : $@convention(thin) <τ_0_0> (@in_guaranteed τ_0_0) -> @owned AnyObject, scope 9 // type-defs: %9; user: %15
  destroy_addr %10 : $*@opened("2DF2DDBA-8BDA-11EE-BBC3-86803A041461", Any) Self, loc * "<compiler-generated>":0:0, scope 9 // id: %14
  %15 = enum $Optional<AnyObject>, #Optional.some!enumelt, %13 : $AnyObject, scope 9 // user: %18
  dealloc_stack %10 : $*@opened("2DF2DDBA-8BDA-11EE-BBC3-86803A041461", Any) Self, scope 9 // id: %16
  destroy_addr %8 : $*Any, scope 9                // id: %17
  br bb3(%15 : $Optional<AnyObject>), scope 9     // id: %18

bb2:                                              // Preds: bb0
  %19 = enum $Optional<AnyObject>, #Optional.none!enumelt, scope 9 // user: %20
  br bb3(%19 : $Optional<AnyObject>), scope 9     // id: %20

// %21                                            // users: %26, %24
bb3(%21 : $Optional<AnyObject>):                  // Preds: bb2 bb1
  dealloc_stack %5 : $*Optional<Any>, scope 9     // id: %22
  %23 = objc_super_method %1 : $ViewController, #NSViewController.representedObject!setter.foreign : (NSViewController) -> (Any?) -> (), $@convention(objc_method) (Optional<AnyObject>, NSViewController) -> (), scope 9 // user: %24
  %24 = apply %23(%21, %4) : $@convention(objc_method) (Optional<AnyObject>, NSViewController) -> (), scope 9
  destroy_addr %0 : $*Optional<Any>, loc * "<compiler-generated>":0:0, scope 9 // id: %25
  release_value %21 : $Optional<AnyObject>, loc * "<compiler-generated>":0:0, scope 9 // id: %26
  debug_value %1 : $ViewController, let, name "self", argno 1, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":20:5, scope 11 // id: %27
  %28 = tuple (), loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 9 // user: %29
  return %28 : $(), loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 9 // id: %29
} // end sil function '$s8TestSwan14ViewControllerC17representedObjectypSgvs'

sil_scope 12 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40 parent @$s8TestSwan14ViewControllerC7nibName6bundleACSSSg_So8NSBundleCSgtcfc : $@convention(method) (@owned Optional<String>, @owned Optional<Bundle>, @owned ViewController) -> @owned ViewController }
sil_scope 13 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:7 parent 12 }
sil_scope 14 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:28 parent 12 }
sil_scope 15 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:40 parent 14 }
sil_scope 16 { loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":12:15 parent @$sSo11NSTextFieldC8TestSwanE5labelAByFZ : $@convention(method) (@thick NSTextField.Type) -> @owned NSTextField inlined_at 15 }
sil_scope 17 { loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":13:17 parent 16 inlined_at 15 }
sil_scope 18 { loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":13:17 parent 17 inlined_at 15 }
sil_scope 19 {  parent @$sSo11NSTextFieldCABycfC : $@convention(method) (@thick NSTextField.Type) -> @owned NSTextField inlined_at 18 }
sil_scope 20 {  parent 19 inlined_at 18 }
sil_scope 21 {  parent @$sSo11NSTextFieldCABycfcTO : $@convention(method) (@owned NSTextField) -> @owned NSTextField inlined_at 20 }
sil_scope 22 { loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":13:9 parent 16 inlined_at 15 }

// ViewController.init(nibName:bundle:), loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 12
sil hidden @$s8TestSwan14ViewControllerC7nibName6bundleACSSSg_So8NSBundleCSgtcfc : $@convention(method) (@owned Optional<String>, @owned Optional<Bundle>, @owned ViewController) -> @owned ViewController {
[%0: read v**.c*.v**, write v**.c*.v**, copy **, destroy v**.c*.v**]
[%1: read v**.c*.v**, write v**.c*.v**, copy v**.c*.v**, destroy v**.c*.v**]
[%2: read c*.v**, write c*.v**, copy **, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0 "nibNameOrNil"                              // users: %47, %38, %36, %33, %3
// %1 "nibBundleOrNil"                            // users: %46, %45, %4
// %2 "self"                                      // users: %31, %9, %44, %6, %32, %5
bb0(%0 : $Optional<String>, %1 : $Optional<Bundle>, %2 : $ViewController):
  debug_value %0 : $Optional<String>, let, name "nibNameOrNil", argno 1, implicit, scope 12 // id: %3
  debug_value %1 : $Optional<Bundle>, let, name "nibBundleOrNil", argno 2, implicit, scope 12 // id: %4
  debug_value %2 : $ViewController, let, name "self", implicit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 12 // id: %5
  %6 = ref_element_addr %2 : $ViewController, #ViewController.label, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:7, scope 13 // user: %30
  %7 = alloc_ref [objc] $NSTextField, scope 19    // users: %10, %8
  %8 = objc_method %7 : $NSTextField, #NSTextField.init!initializer.foreign : (NSTextField.Type) -> () -> NSTextField, $@convention(objc_method) (@owned NSTextField) -> @owned NSTextField, scope 21 // user: %10
  strong_retain %2 : $ViewController, loc * "<compiler-generated>":0:0, scope 12 // id: %9
  %10 = apply %8(%7) : $@convention(objc_method) (@owned NSTextField) -> @owned NSTextField, scope 21 // users: %30, %28, %27, %22, %21, %20, %19, %18, %17, %16, %15, %11
  debug_value %10 : $NSTextField, let, name "label", loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":13:9, scope 22 // id: %11
  %12 = integer_literal $Builtin.Int8, 0, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:23, scope 22 // user: %13
  %13 = struct $Int8 (%12 : $Builtin.Int8), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:23, scope 22 // user: %14
  %14 = struct $ObjCBool (%13 : $Int8), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:23, scope 22 // users: %22, %20, %18, %16
  %15 = objc_method %10 : $NSTextField, #NSTextField.isBezeled!setter.foreign : (NSTextField) -> (Bool) -> (), $@convention(objc_method) (ObjCBool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:21, scope 22 // user: %16
  %16 = apply %15(%14, %10) : $@convention(objc_method) (ObjCBool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:21, scope 22
  %17 = objc_method %10 : $NSTextField, #NSTextField.isBordered!setter.foreign : (NSTextField) -> (Bool) -> (), $@convention(objc_method) (ObjCBool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":15:22, scope 22 // user: %18
  %18 = apply %17(%14, %10) : $@convention(objc_method) (ObjCBool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":15:22, scope 22
  %19 = objc_method %10 : $NSTextField, #NSTextField.isEditable!setter.foreign : (NSTextField) -> (Bool) -> (), $@convention(objc_method) (ObjCBool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":16:22, scope 22 // user: %20
  %20 = apply %19(%14, %10) : $@convention(objc_method) (ObjCBool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":16:22, scope 22
  %21 = objc_method %10 : $NSTextField, #NSTextField.isSelectable!setter.foreign : (NSTextField) -> (Bool) -> (), $@convention(objc_method) (ObjCBool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":17:24, scope 22 // user: %22
  %22 = apply %21(%14, %10) : $@convention(objc_method) (ObjCBool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":17:24, scope 22
  %23 = metatype $@objc_metatype NSColor.Type, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:29, scope 22 // users: %25, %24
  %24 = objc_method %23 : $@objc_metatype NSColor.Type, #NSColor.clear!getter.foreign : (NSColor.Type) -> () -> NSColor, $@convention(objc_method) (@objc_metatype NSColor.Type) -> @autoreleased NSColor, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:30, scope 22 // user: %25
  %25 = apply %24(%23) : $@convention(objc_method) (@objc_metatype NSColor.Type) -> @autoreleased NSColor, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:30, scope 22 // users: %29, %26
  %26 = unchecked_ref_cast %25 : $NSColor to $Optional<NSColor>, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:30, scope 22 // user: %28
  %27 = objc_method %10 : $NSTextField, #NSTextField.backgroundColor!setter.foreign : (NSTextField) -> (NSColor?) -> (), $@convention(objc_method) (Optional<NSColor>, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:27, scope 22 // user: %28
  %28 = apply %27(%26, %10) : $@convention(objc_method) (Optional<NSColor>, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:27, scope 22
  strong_release %25 : $NSColor, loc * "<compiler-generated>":0:0, scope 12 // id: %29
  store %10 to %6 : $*NSTextField, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:40, scope 14 // id: %30
  strong_release %2 : $ViewController, loc * "<compiler-generated>":0:0, scope 12 // id: %31
  %32 = upcast %2 : $ViewController to $NSViewController, scope 14 // user: %45
  switch_enum %0 : $Optional<String>, case #Optional.some!enumelt: bb1, case #Optional.none!enumelt: bb2, scope 14 // id: %33

// %34                                            // user: %37
bb1(%34 : $String):                               // Preds: bb0
  // function_ref String._bridgeToObjectiveC()
  %35 = function_ref @$sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF : $@convention(method) (@guaranteed String) -> @owned NSString, scope 14 // user: %37
  retain_value %0 : $Optional<String>, loc * "<compiler-generated>":0:0, scope 12 // id: %36
  %37 = apply %35(%34) : $@convention(method) (@guaranteed String) -> @owned NSString, scope 14 // user: %39
  release_value %0 : $Optional<String>, loc * "<compiler-generated>":0:0, scope 12 // id: %38
  %39 = enum $Optional<NSString>, #Optional.some!enumelt, %37 : $NSString, scope 14 // user: %40
  br bb3(%39 : $Optional<NSString>), scope 14     // id: %40

bb2:                                              // Preds: bb0
  %41 = enum $Optional<NSString>, #Optional.none!enumelt, scope 14 // user: %42
  br bb3(%41 : $Optional<NSString>), scope 14     // id: %42

// %43                                            // users: %48, %45
bb3(%43 : $Optional<NSString>):                   // Preds: bb2 bb1
  %44 = objc_super_method %2 : $ViewController, #NSViewController.init!initializer.foreign : (NSViewController.Type) -> (String?, Bundle?) -> NSViewController, $@convention(objc_method) (Optional<NSString>, Optional<Bundle>, @owned NSViewController) -> @owned NSViewController, scope 14 // user: %45
  %45 = apply %44(%43, %1, %32) : $@convention(objc_method) (Optional<NSString>, Optional<Bundle>, @owned NSViewController) -> @owned NSViewController, scope 14 // user: %49
  release_value %1 : $Optional<Bundle>, loc * "<compiler-generated>":0:0, scope 12 // id: %46
  release_value %0 : $Optional<String>, loc * "<compiler-generated>":0:0, scope 12 // id: %47
  release_value %43 : $Optional<NSString>, loc * "<compiler-generated>":0:0, scope 12 // id: %48
  %49 = unchecked_ref_cast %45 : $NSViewController to $ViewController, scope 14 // user: %50
  return %49 : $ViewController, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 14 // id: %50
} // end sil function '$s8TestSwan14ViewControllerC7nibName6bundleACSSSg_So8NSBundleCSgtcfc'

sil_scope 23 { loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40 parent @$s8TestSwan14ViewControllerC7nibName6bundleACSSSg_So8NSBundleCSgtcfcTo : $@convention(objc_method) (Optional<NSString>, Optional<Bundle>, @owned ViewController) -> @owned ViewController }

// @objc ViewController.init(nibName:bundle:), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23
sil private [thunk] @$s8TestSwan14ViewControllerC7nibName6bundleACSSSg_So8NSBundleCSgtcfcTo : $@convention(objc_method) (Optional<NSString>, Optional<Bundle>, @owned ViewController) -> @owned ViewController {
[%0: read v**.c*.v**, copy v**.c*.v**]
[%1: read v**.c*.v**, write v**.c*.v**, copy v**.**, destroy v**.c*.v**]
[%2: read c*.v**, write c*.v**, copy **, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %7, %3
// %1                                             // users: %14, %15
// %2                                             // user: %15
bb0(%0 : $Optional<NSString>, %1 : $Optional<Bundle>, %2 : $ViewController):
  switch_enum %0 : $Optional<NSString>, case #Optional.some!enumelt: bb1, case #Optional.none!enumelt: bb2, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // id: %3

bb1(%4 : $NSString):                              // Preds: bb0
  // function_ref static String._unconditionallyBridgeFromObjectiveC(_:)
  %5 = function_ref @$sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ : $@convention(method) (@guaranteed Optional<NSString>, @thin String.Type) -> @owned String, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // user: %7
  %6 = metatype $@thin String.Type, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // user: %7
  %7 = apply %5(%0, %6) : $@convention(method) (@guaranteed Optional<NSString>, @thin String.Type) -> @owned String, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // user: %8
  %8 = enum $Optional<String>, #Optional.some!enumelt, %7 : $String, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // user: %9
  br bb3(%8 : $Optional<String>), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // id: %9

bb2:                                              // Preds: bb0
  %10 = enum $Optional<String>, #Optional.none!enumelt, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // user: %11
  br bb3(%10 : $Optional<String>), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // id: %11

// %12                                            // user: %15
bb3(%12 : $Optional<String>):                     // Preds: bb2 bb1
  // function_ref ViewController.init(nibName:bundle:)
  %13 = function_ref @$s8TestSwan14ViewControllerC7nibName6bundleACSSSg_So8NSBundleCSgtcfc : $@convention(method) (@owned Optional<String>, @owned Optional<Bundle>, @owned ViewController) -> @owned ViewController, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // user: %15
  retain_value %1 : $Optional<Bundle>, loc * "<compiler-generated>":0:0, scope 23 // id: %14
  %15 = apply %13(%12, %1, %2) : $@convention(method) (@owned Optional<String>, @owned Optional<Bundle>, @owned ViewController) -> @owned ViewController, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // user: %16
  return %15 : $ViewController, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // id: %16
} // end sil function '$s8TestSwan14ViewControllerC7nibName6bundleACSSSg_So8NSBundleCSgtcfcTo'


// static String._unconditionallyBridgeFromObjectiveC(_:), scope 0
sil [available 10.10] [readonly] @$sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ : $@convention(method) (@guaranteed Optional<NSString>, @thin String.Type) -> @owned String

sil_scope 24 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40 parent @$s8TestSwan14ViewControllerC5coderACSgSo7NSCoderC_tcfc : $@convention(method) (@owned NSCoder, @owned ViewController) -> @owned Optional<ViewController> }
sil_scope 25 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:7 parent 24 }
sil_scope 26 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:28 parent 24 }
sil_scope 27 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:40 parent 26 }
sil_scope 28 { loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":12:15 parent @$sSo11NSTextFieldC8TestSwanE5labelAByFZ : $@convention(method) (@thick NSTextField.Type) -> @owned NSTextField inlined_at 27 }
sil_scope 29 { loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":13:17 parent 28 inlined_at 27 }
sil_scope 30 { loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":13:17 parent 29 inlined_at 27 }
sil_scope 31 {  parent @$sSo11NSTextFieldCABycfC : $@convention(method) (@thick NSTextField.Type) -> @owned NSTextField inlined_at 30 }
sil_scope 32 {  parent 31 inlined_at 30 }
sil_scope 33 {  parent @$sSo11NSTextFieldCABycfcTO : $@convention(method) (@owned NSTextField) -> @owned NSTextField inlined_at 32 }
sil_scope 34 { loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":13:9 parent 28 inlined_at 27 }

// ViewController.init(coder:), loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 24
sil hidden @$s8TestSwan14ViewControllerC5coderACSgSo7NSCoderC_tcfc : $@convention(method) (@owned NSCoder, @owned ViewController) -> @owned Optional<ViewController> {
[%0: read c*.v**, write c*.v**, copy c*.v**, destroy c*.v**]
[%1: read c*.v**, write c*.v**, copy **, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0 "coder"                                     // users: %33, %32, %2
// %1 "self"                                      // users: %29, %7, %31, %4, %30, %3
bb0(%0 : $NSCoder, %1 : $ViewController):
  debug_value %0 : $NSCoder, let, name "coder", argno 1, implicit, scope 24 // id: %2
  debug_value %1 : $ViewController, let, name "self", implicit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 24 // id: %3
  %4 = ref_element_addr %1 : $ViewController, #ViewController.label, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:7, scope 25 // user: %28
  %5 = alloc_ref [objc] $NSTextField, scope 31    // users: %8, %6
  %6 = objc_method %5 : $NSTextField, #NSTextField.init!initializer.foreign : (NSTextField.Type) -> () -> NSTextField, $@convention(objc_method) (@owned NSTextField) -> @owned NSTextField, scope 33 // user: %8
  strong_retain %1 : $ViewController, loc * "<compiler-generated>":0:0, scope 24 // id: %7
  %8 = apply %6(%5) : $@convention(objc_method) (@owned NSTextField) -> @owned NSTextField, scope 33 // users: %28, %26, %25, %20, %19, %18, %17, %16, %15, %14, %13, %9
  debug_value %8 : $NSTextField, let, name "label", loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":13:9, scope 34 // id: %9
  %10 = integer_literal $Builtin.Int8, 0, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:23, scope 34 // user: %11
  %11 = struct $Int8 (%10 : $Builtin.Int8), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:23, scope 34 // user: %12
  %12 = struct $ObjCBool (%11 : $Int8), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:23, scope 34 // users: %20, %18, %16, %14
  %13 = objc_method %8 : $NSTextField, #NSTextField.isBezeled!setter.foreign : (NSTextField) -> (Bool) -> (), $@convention(objc_method) (ObjCBool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:21, scope 34 // user: %14
  %14 = apply %13(%12, %8) : $@convention(objc_method) (ObjCBool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:21, scope 34
  %15 = objc_method %8 : $NSTextField, #NSTextField.isBordered!setter.foreign : (NSTextField) -> (Bool) -> (), $@convention(objc_method) (ObjCBool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":15:22, scope 34 // user: %16
  %16 = apply %15(%12, %8) : $@convention(objc_method) (ObjCBool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":15:22, scope 34
  %17 = objc_method %8 : $NSTextField, #NSTextField.isEditable!setter.foreign : (NSTextField) -> (Bool) -> (), $@convention(objc_method) (ObjCBool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":16:22, scope 34 // user: %18
  %18 = apply %17(%12, %8) : $@convention(objc_method) (ObjCBool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":16:22, scope 34
  %19 = objc_method %8 : $NSTextField, #NSTextField.isSelectable!setter.foreign : (NSTextField) -> (Bool) -> (), $@convention(objc_method) (ObjCBool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":17:24, scope 34 // user: %20
  %20 = apply %19(%12, %8) : $@convention(objc_method) (ObjCBool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":17:24, scope 34
  %21 = metatype $@objc_metatype NSColor.Type, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:29, scope 34 // users: %23, %22
  %22 = objc_method %21 : $@objc_metatype NSColor.Type, #NSColor.clear!getter.foreign : (NSColor.Type) -> () -> NSColor, $@convention(objc_method) (@objc_metatype NSColor.Type) -> @autoreleased NSColor, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:30, scope 34 // user: %23
  %23 = apply %22(%21) : $@convention(objc_method) (@objc_metatype NSColor.Type) -> @autoreleased NSColor, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:30, scope 34 // users: %27, %24
  %24 = unchecked_ref_cast %23 : $NSColor to $Optional<NSColor>, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:30, scope 34 // user: %26
  %25 = objc_method %8 : $NSTextField, #NSTextField.backgroundColor!setter.foreign : (NSTextField) -> (NSColor?) -> (), $@convention(objc_method) (Optional<NSColor>, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:27, scope 34 // user: %26
  %26 = apply %25(%24, %8) : $@convention(objc_method) (Optional<NSColor>, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:27, scope 34
  strong_release %23 : $NSColor, loc * "<compiler-generated>":0:0, scope 24 // id: %27
  store %8 to %4 : $*NSTextField, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:40, scope 26 // id: %28
  strong_release %1 : $ViewController, loc * "<compiler-generated>":0:0, scope 24 // id: %29
  %30 = upcast %1 : $ViewController to $NSViewController, scope 26 // user: %32
  %31 = objc_super_method %1 : $ViewController, #NSViewController.init!initializer.foreign : (NSViewController.Type) -> (NSCoder) -> NSViewController?, $@convention(objc_method) (NSCoder, @owned NSViewController) -> @owned Optional<NSViewController>, scope 26 // user: %32
  %32 = apply %31(%0, %30) : $@convention(objc_method) (NSCoder, @owned NSViewController) -> @owned Optional<NSViewController>, scope 26 // users: %34, %37
  strong_release %0 : $NSCoder, loc * "<compiler-generated>":0:0, scope 24 // id: %33
  switch_enum %32 : $Optional<NSViewController>, case #Optional.some!enumelt: bb2, case #Optional.none!enumelt: bb1, forwarding: @owned, scope 26 // id: %34

bb1:                                              // Preds: bb0
  %35 = enum $Optional<ViewController>, #Optional.none!enumelt, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 24 // user: %36
  br bb3(%35 : $Optional<ViewController>), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 24 // id: %36

bb2:                                              // Preds: bb0
  %37 = unchecked_enum_data %32 : $Optional<NSViewController>, #Optional.some!enumelt, scope 26 // user: %38
  %38 = unchecked_ref_cast %37 : $NSViewController to $ViewController, scope 26 // user: %39
  %39 = enum $Optional<ViewController>, #Optional.some!enumelt, %38 : $ViewController, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 26 // user: %40
  br bb3(%39 : $Optional<ViewController>), loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 26 // id: %40

// %41                                            // user: %42
bb3(%41 : $Optional<ViewController>):             // Preds: bb2 bb1
  return %41 : $Optional<ViewController>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 24 // id: %42
} // end sil function '$s8TestSwan14ViewControllerC5coderACSgSo7NSCoderC_tcfc'

sil_scope 35 { loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40 parent @$s8TestSwan14ViewControllerC5coderACSgSo7NSCoderC_tcfcTo : $@convention(objc_method) (NSCoder, @owned ViewController) -> @owned Optional<ViewController> }

// @objc ViewController.init(coder:), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 35
sil private [thunk] @$s8TestSwan14ViewControllerC5coderACSgSo7NSCoderC_tcfcTo : $@convention(objc_method) (NSCoder, @owned ViewController) -> @owned Optional<ViewController> {
[%0: read c*.v**, write c*.v**, copy **, destroy c*.v**]
[%1: read c*.v**, write c*.v**, copy **, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %3, %4
// %1                                             // user: %4
bb0(%0 : $NSCoder, %1 : $ViewController):
  // function_ref ViewController.init(coder:)
  %2 = function_ref @$s8TestSwan14ViewControllerC5coderACSgSo7NSCoderC_tcfc : $@convention(method) (@owned NSCoder, @owned ViewController) -> @owned Optional<ViewController>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 35 // user: %4
  strong_retain %0 : $NSCoder, loc * "<compiler-generated>":0:0, scope 35 // id: %3
  %4 = apply %2(%0, %1) : $@convention(method) (@owned NSCoder, @owned ViewController) -> @owned Optional<ViewController>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 35 // user: %5
  return %4 : $Optional<ViewController>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 35 // id: %5
} // end sil function '$s8TestSwan14ViewControllerC5coderACSgSo7NSCoderC_tcfcTo'

sil_scope 36 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7 parent @$s8TestSwan14ViewControllerCfD : $@convention(method) (@owned ViewController) -> () }

// ViewController.__deallocating_deinit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 36
sil hidden @$s8TestSwan14ViewControllerCfD : $@convention(method) (@owned ViewController) -> () {
[%0: read c*.v**, write c*.v**, copy c*.v**, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0 "self"                                      // users: %3, %2, %1
bb0(%0 : $ViewController):
  debug_value %0 : $ViewController, let, name "self", argno 1, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 36 // id: %1
  %2 = objc_super_method %0 : $ViewController, #NSViewController.deinit!deallocator.foreign : (NSViewController) -> () -> (), $@convention(objc_method) (NSViewController) -> (), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 36 // user: %4
  %3 = upcast %0 : $ViewController to $NSViewController, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 36 // user: %4
  %4 = apply %2(%3) : $@convention(objc_method) (NSViewController) -> (), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 36
  %5 = tuple (), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 36 // user: %6
  return %5 : $(), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 36 // id: %6
} // end sil function '$s8TestSwan14ViewControllerCfD'

sil_scope 37 { loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7 parent @$s8TestSwan14ViewControllerCfETo : $@convention(objc_method) (ViewController) -> () }

// @objc ViewController.__ivar_destroyer, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 37
sil hidden @$s8TestSwan14ViewControllerCfETo : $@convention(objc_method) (ViewController) -> () {
[%0: noescape, noescape c*.v**, read c0.v**, copy c*.v**, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0 "self"                                      // users: %2, %1
bb0(%0 : $ViewController):
  debug_value %0 : $ViewController, let, name "self", argno 1, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 37 // id: %1
  %2 = ref_element_addr %0 : $ViewController, #ViewController.label, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":26:1, scope 37 // user: %3
  %3 = load %2 : $*NSTextField, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":26:1, scope 37 // user: %4
  strong_release %3 : $NSTextField, loc * "<compiler-generated>":0:0, scope 37 // id: %4
  %5 = tuple (), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 37 // user: %6
  return %5 : $(), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 37 // id: %6
} // end sil function '$s8TestSwan14ViewControllerCfETo'

sil_scope 38 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8 parent @$s8TestSwan11AppDelegateC29applicationDidFinishLaunchingyy10Foundation12NotificationVFTo : $@convention(objc_method) (NSNotification, AppDelegate) -> () }
sil_scope 39 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8 parent 38 }
sil_scope 40 { loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8 parent @$s8TestSwan11AppDelegateC29applicationDidFinishLaunchingyy10Foundation12NotificationVF : $@convention(method) (@in_guaranteed Notification, @guaranteed AppDelegate) -> () inlined_at 39 }

// @objc AppDelegate.applicationDidFinishLaunching(_:), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8, scope 38
sil private [thunk] @$s8TestSwan11AppDelegateC29applicationDidFinishLaunchingyy10Foundation12NotificationVFTo : $@convention(objc_method) (NSNotification, AppDelegate) -> () {
[%0: read v**.c*.v**, copy v**.c*.v**]
[%1: noescape **]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // user: %3
// %1                                             // user: %8
bb0(%0 : $NSNotification, %1 : $AppDelegate):
  // function_ref static Notification._unconditionallyBridgeFromObjectiveC(_:)
  %2 = function_ref @$s10Foundation12NotificationV36_unconditionallyBridgeFromObjectiveCyACSo14NSNotificationCSgFZ : $@convention(method) (@guaranteed Optional<NSNotification>, @thin Notification.Type) -> @out Notification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8, scope 38 // user: %6
  %3 = enum $Optional<NSNotification>, #Optional.some!enumelt, %0 : $NSNotification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8, scope 38 // user: %6
  %4 = metatype $@thin Notification.Type, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8, scope 38 // user: %6
  %5 = alloc_stack $Notification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8, scope 38 // users: %7, %10, %11, %6
  %6 = apply %2(%5, %3, %4) : $@convention(method) (@guaranteed Optional<NSNotification>, @thin Notification.Type) -> @out Notification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8, scope 38
  debug_value %5 : $*Notification, let, name "aNotification", argno 1, expr op_deref, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:40, scope 40 // id: %7
  debug_value %1 : $AppDelegate, let, name "self", argno 2, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8, scope 40 // id: %8
  %9 = tuple (), loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":18:3, scope 40 // user: %12
  destroy_addr %5 : $*Notification, loc * "<compiler-generated>":0:0, scope 38 // id: %10
  dealloc_stack %5 : $*Notification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":18:3, scope 38 // id: %11
  return %9 : $(), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8, scope 38 // id: %12
} // end sil function '$s8TestSwan11AppDelegateC29applicationDidFinishLaunchingyy10Foundation12NotificationVFTo'


// static Notification._unconditionallyBridgeFromObjectiveC(_:), scope 0
sil [available 10.10] [readonly] @$s10Foundation12NotificationV36_unconditionallyBridgeFromObjectiveCyACSo14NSNotificationCSgFZ : $@convention(method) (@guaranteed Optional<NSNotification>, @thin Notification.Type) -> @out Notification

sil_scope 41 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8 parent @$s8TestSwan11AppDelegateC24applicationWillTerminateyy10Foundation12NotificationVFTo : $@convention(objc_method) (NSNotification, AppDelegate) -> () }
sil_scope 42 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8 parent 41 }
sil_scope 43 { loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8 parent @$s8TestSwan11AppDelegateC24applicationWillTerminateyy10Foundation12NotificationVF : $@convention(method) (@in_guaranteed Notification, @guaranteed AppDelegate) -> () inlined_at 42 }

// @objc AppDelegate.applicationWillTerminate(_:), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8, scope 41
sil private [thunk] @$s8TestSwan11AppDelegateC24applicationWillTerminateyy10Foundation12NotificationVFTo : $@convention(objc_method) (NSNotification, AppDelegate) -> () {
[%0: read v**.c*.v**, copy v**.c*.v**]
[%1: noescape **]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // user: %3
// %1                                             // user: %8
bb0(%0 : $NSNotification, %1 : $AppDelegate):
  // function_ref static Notification._unconditionallyBridgeFromObjectiveC(_:)
  %2 = function_ref @$s10Foundation12NotificationV36_unconditionallyBridgeFromObjectiveCyACSo14NSNotificationCSgFZ : $@convention(method) (@guaranteed Optional<NSNotification>, @thin Notification.Type) -> @out Notification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8, scope 41 // user: %6
  %3 = enum $Optional<NSNotification>, #Optional.some!enumelt, %0 : $NSNotification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8, scope 41 // user: %6
  %4 = metatype $@thin Notification.Type, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8, scope 41 // user: %6
  %5 = alloc_stack $Notification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8, scope 41 // users: %7, %10, %11, %6
  %6 = apply %2(%5, %3, %4) : $@convention(method) (@guaranteed Optional<NSNotification>, @thin Notification.Type) -> @out Notification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8, scope 41
  debug_value %5 : $*Notification, let, name "aNotification", argno 1, expr op_deref, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:35, scope 43 // id: %7
  debug_value %1 : $AppDelegate, let, name "self", argno 2, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8, scope 43 // id: %8
  %9 = tuple (), loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":22:3, scope 43 // user: %12
  destroy_addr %5 : $*Notification, loc * "<compiler-generated>":0:0, scope 41 // id: %10
  dealloc_stack %5 : $*Notification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":22:3, scope 41 // id: %11
  return %9 : $(), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8, scope 41 // id: %12
} // end sil function '$s8TestSwan11AppDelegateC24applicationWillTerminateyy10Foundation12NotificationVFTo'

sil_scope 44 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":24:8 parent @$s8TestSwan11AppDelegateC40applicationSupportsSecureRestorableStateySbSo13NSApplicationCFTo : $@convention(objc_method) (NSApplication, AppDelegate) -> ObjCBool }
sil_scope 45 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":24:8 parent 44 }
sil_scope 46 { loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":24:8 parent @$s8TestSwan11AppDelegateC40applicationSupportsSecureRestorableStateySbSo13NSApplicationCF : $@convention(method) (@guaranteed NSApplication, @guaranteed AppDelegate) -> Bool inlined_at 45 }
sil_scope 47 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":24:8 parent 44 }
sil_scope 48 {  parent @$s10ObjectiveC22_convertBoolToObjCBoolyAA0eF0VSbF : $@convention(thin) (Bool) -> ObjCBool inlined_at 47 }

// @objc AppDelegate.applicationSupportsSecureRestorableState(_:), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":24:8, scope 44
sil private [thunk] @$s8TestSwan11AppDelegateC40applicationSupportsSecureRestorableStateySbSo13NSApplicationCFTo : $@convention(objc_method) (NSApplication, AppDelegate) -> ObjCBool {
[%0: noescape **]
[%1: noescape **]
[global: ]
// %0                                             // user: %2
// %1                                             // user: %3
bb0(%0 : $NSApplication, %1 : $AppDelegate):
  debug_value %0 : $NSApplication, let, name "app", argno 1, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":24:51, scope 46 // id: %2
  debug_value %1 : $AppDelegate, let, name "self", argno 2, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":24:8, scope 46 // id: %3
  %4 = integer_literal $Builtin.Int8, 1, scope 48 // user: %5
  %5 = struct $Int8 (%4 : $Builtin.Int8), scope 48 // user: %6
  %6 = struct $ObjCBool (%5 : $Int8), scope 48    // user: %7
  return %6 : $ObjCBool, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":24:8, scope 44 // id: %7
} // end sil function '$s8TestSwan11AppDelegateC40applicationSupportsSecureRestorableStateySbSo13NSApplicationCFTo'

sil_scope 49 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:52 parent @$s8TestSwan11AppDelegateCACycfcTo : $@convention(objc_method) (@owned AppDelegate) -> @owned AppDelegate }
sil_scope 50 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:52 parent 49 }
sil_scope 51 { loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:52 parent @$s8TestSwan11AppDelegateCACycfc : $@convention(method) (@owned AppDelegate) -> @owned AppDelegate inlined_at 50 }

// @objc AppDelegate.init(), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:52, scope 49
sil private [thunk] @$s8TestSwan11AppDelegateCACycfcTo : $@convention(objc_method) (@owned AppDelegate) -> @owned AppDelegate {
[%0: read c*.v**, write c*.v**, copy c*.v**, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %3, %2, %1
bb0(%0 : $AppDelegate):
  debug_value %0 : $AppDelegate, let, name "self", implicit, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:52, scope 51 // id: %1
  %2 = upcast %0 : $AppDelegate to $NSObject, scope 51 // user: %4
  %3 = objc_super_method %0 : $AppDelegate, #NSObject.init!initializer.foreign : (NSObject.Type) -> () -> NSObject, $@convention(objc_method) (@owned NSObject) -> @owned NSObject, scope 51 // user: %4
  %4 = apply %3(%2) : $@convention(objc_method) (@owned NSObject) -> @owned NSObject, scope 51 // user: %5
  %5 = unchecked_ref_cast %4 : $NSObject to $AppDelegate, scope 51 // user: %6
  return %5 : $AppDelegate, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:52, scope 49 // id: %6
} // end sil function '$s8TestSwan11AppDelegateCACycfcTo'

sil_scope 52 { loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:7 parent @$s8TestSwan11AppDelegateCfD : $@convention(method) (@owned AppDelegate) -> () }

// AppDelegate.__deallocating_deinit, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:7, scope 52
sil hidden @$s8TestSwan11AppDelegateCfD : $@convention(method) (@owned AppDelegate) -> () {
[%0: read c*.v**, write c*.v**, copy c*.v**, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0 "self"                                      // users: %3, %2, %1
bb0(%0 : $AppDelegate):
  debug_value %0 : $AppDelegate, let, name "self", argno 1, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:7, scope 52 // id: %1
  %2 = objc_super_method %0 : $AppDelegate, #NSObject.deinit!deallocator.foreign : (NSObject) -> () -> (), $@convention(objc_method) (NSObject) -> (), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:7, scope 52 // user: %4
  %3 = upcast %0 : $AppDelegate to $NSObject, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:7, scope 52 // user: %4
  %4 = apply %2(%3) : $@convention(objc_method) (NSObject) -> (), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:7, scope 52
  %5 = tuple (), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:7, scope 52 // user: %6
  return %5 : $(), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:7, scope 52 // id: %6
} // end sil function '$s8TestSwan11AppDelegateCfD'

sil_scope 53 {  parent @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 }
sil_scope 54 { loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":10:1 parent 53 }
sil_scope 55 {  parent 54 }
sil_scope 56 {  parent @$s8TestSwan11AppDelegateC5$mainyyFZ : $@convention(method) (@thick AppDelegate.Type) -> () inlined_at 55 }
sil_scope 57 { loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":10:1 parent 56 inlined_at 55 }
sil_scope 58 {  parent @$sSo21NSApplicationDelegateP6AppKitE4mainyyFZ8TestSwan0cB0C_Tg5 : $@convention(method) (@thick AppDelegate.Type) -> () inlined_at 57 }

// main, scope 53
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
[%1: noescape **]
[global: read,write,copy,destroy,allocate,deinit_barrier]
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = metatype $@thin CommandLine.Type, scope 58 // users: %6, %4
  // function_ref static CommandLine.argc.getter
  %3 = function_ref @$ss11CommandLineO4argcs5Int32VvgZ : $@convention(method) (@thin CommandLine.Type) -> Int32, scope 58 // user: %4
  %4 = apply %3(%2) : $@convention(method) (@thin CommandLine.Type) -> Int32, scope 58 // user: %8
  // function_ref static CommandLine.unsafeArgv.getter
  %5 = function_ref @$ss11CommandLineO10unsafeArgvSpySpys4Int8VGSgGvgZ : $@convention(method) (@thin CommandLine.Type) -> UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>, scope 58 // user: %6
  %6 = apply %5(%2) : $@convention(method) (@thin CommandLine.Type) -> UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>, scope 58 // user: %8
  // function_ref NSApplicationMain(_:_:)
  %7 = function_ref @$s6AppKit17NSApplicationMainys5Int32VAD_SpySpys4Int8VGSgGtF : $@convention(thin) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32, scope 58 // user: %8
  %8 = apply %7(%4, %6) : $@convention(thin) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32, scope 58 // user: %10
  // function_ref exit
  %9 = function_ref @exit : $@convention(c) (Int32) -> Never, scope 58 // user: %10
  %10 = apply %9(%8) : $@convention(c) (Int32) -> Never, scope 58
  unreachable , scope 58                          // id: %11
} // end sil function 'main'

sil_scope 59 { loc * "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15 parent @$s8TestSwan19ResourceBundleClass33_7E57A1E4A3086DE18043CF46058E5058LLCfD : $@convention(method) (@owned ResourceBundleClass) -> () }
sil_scope 60 { loc * "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15 parent 59 }
sil_scope 61 { loc "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15 parent @$s8TestSwan19ResourceBundleClass33_7E57A1E4A3086DE18043CF46058E5058LLCfd : $@convention(method) (@guaranteed ResourceBundleClass) -> @owned Builtin.NativeObject inlined_at 60 }

// ResourceBundleClass.__deallocating_deinit, loc * "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15, scope 59
sil private @$s8TestSwan19ResourceBundleClass33_7E57A1E4A3086DE18043CF46058E5058LLCfD : $@convention(method) (@owned ResourceBundleClass) -> () {
[%0: noescape **, read c*.v**, write c*.v**, copy c*.v**]
[global: read,write,copy]
// %0 "self"                                      // users: %3, %2, %1
bb0(%0 : $ResourceBundleClass):
  debug_value %0 : $ResourceBundleClass, let, name "self", argno 1, implicit, loc "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15, scope 59 // id: %1
  debug_value %0 : $ResourceBundleClass, let, name "self", argno 1, implicit, loc "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15, scope 61 // id: %2
  dealloc_ref %0 : $ResourceBundleClass, loc * "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15, scope 59 // id: %3
  %4 = tuple (), loc * "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15, scope 59 // user: %5
  return %4 : $(), loc * "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15, scope 59 // id: %5
} // end sil function '$s8TestSwan19ResourceBundleClass33_7E57A1E4A3086DE18043CF46058E5058LLCfD'


// String._bridgeToObjectiveC(), scope 0
sil [available 10.10] [_semantics "convertToObjectiveC"] @$sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF : $@convention(method) (@guaranteed String) -> @owned NSString


// static CommandLine.argc.getter, loc * "<compiler-generated>":0:0, scope 0
sil @$ss11CommandLineO4argcs5Int32VvgZ : $@convention(method) (@thin CommandLine.Type) -> Int32


// static CommandLine.unsafeArgv.getter, loc * "<compiler-generated>":0:0, scope 0
sil @$ss11CommandLineO10unsafeArgvSpySpys4Int8VGSgGvgZ : $@convention(method) (@thin CommandLine.Type) -> UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>


// NSApplicationMain(_:_:), loc * "<compiler-generated>":0:0, scope 0
sil [available 10.9] @$s6AppKit17NSApplicationMainys5Int32VAD_SpySpys4Int8VGSgGtF : $@convention(thin) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32


// exit, loc * "<compiler-generated>":0:0, scope 0
// clang name: exit
sil [serialized] [clang exit] @exit : $@convention(c) (Int32) -> Never


// _swift_isClassOrObjCExistentialType, loc * "<compiler-generated>":0:0, scope 0
sil @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool


// _bridgeAnythingNonVerbatimToObjectiveC<A>(_:), loc * "<compiler-generated>":0:0, scope 0
sil @$ss38_bridgeAnythingNonVerbatimToObjectiveCyyXlxnlF : $@convention(thin) <τ_0_0> (@in τ_0_0) -> @owned AnyObject

sil_scope 62 {  parent @$sSa12_endMutationyyF : $@convention(method) <τ_0_0> (@inout Array<τ_0_0>) -> () }

// Array._endMutation(), scope 62
sil shared [serialized] [_semantics "array.end_mutation"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$sSa12_endMutationyyF : $@convention(method) <Element> (@inout Array<Element>) -> () {
[%0: noescape! **, read s0.s0.s0.v**, write v**]
[global: ]
// %0                                             // users: %9, %1
bb0(%0 : $*Array<Element>):
  %1 = struct_element_addr %0 : $*Array<Element>, #Array._buffer, scope 62 // user: %2
  %2 = struct_element_addr %1 : $*_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 62 // user: %3
  %3 = struct_element_addr %2 : $*_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 62 // user: %4
  %4 = load %3 : $*Builtin.BridgeObject, scope 62 // user: %5
  %5 = end_cow_mutation %4 : $Builtin.BridgeObject, scope 62 // user: %6
  %6 = struct $_BridgeStorage<__ContiguousArrayStorageBase> (%5 : $Builtin.BridgeObject), scope 62 // user: %7
  %7 = struct $_ArrayBuffer<Element> (%6 : $_BridgeStorage<__ContiguousArrayStorageBase>), scope 62 // user: %8
  %8 = struct $Array<Element> (%7 : $_ArrayBuffer<Element>), scope 62 // user: %9
  store %8 to %0 : $*Array<Element>, scope 62     // id: %9
  %10 = tuple (), scope 62                        // user: %11
  return %10 : $(), scope 62                      // id: %11
} // end sil function '$sSa12_endMutationyyF'

sil_scope 63 {  parent @$sSa16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout Array<τ_0_0>) -> () }

// Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:), scope 63
sil shared [serialized] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$sSa16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF : $@convention(method) <Element> (Bool, Int, Bool, @inout Array<Element>) -> () {
[%3: read s0.v**, write v**, copy v**, destroy v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // user: %7
// %1                                             // user: %7
// %2                                             // user: %7
// %3                                             // users: %9, %4
bb0(%0 : $Bool, %1 : $Int, %2 : $Bool, %3 : $*Array<Element>):
  %4 = struct_element_addr %3 : $*Array<Element>, #Array._buffer, scope 63 // user: %5
  %5 = load %4 : $*_ArrayBuffer<Element>, scope 63 // user: %7
  // function_ref _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)
  %6 = function_ref @$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @owned _ArrayBuffer<τ_0_0>) -> @owned _ArrayBuffer<τ_0_0>, scope 63 // user: %7
  %7 = apply %6<Element>(%0, %1, %2, %5) : $@convention(method) <τ_0_0> (Bool, Int, Bool, @owned _ArrayBuffer<τ_0_0>) -> @owned _ArrayBuffer<τ_0_0>, scope 63 // user: %8
  %8 = struct $Array<Element> (%7 : $_ArrayBuffer<Element>), scope 63 // user: %9
  store %8 to %3 : $*Array<Element>, scope 63     // id: %9
  %10 = tuple (), scope 63                        // user: %11
  return %10 : $(), scope 63                      // id: %11
} // end sil function '$sSa16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF'

sil_scope 64 {  parent @$sSa034_makeUniqueAndReserveCapacityIfNotB0yyF : $@convention(method) <τ_0_0> (@inout Array<τ_0_0>) -> () }

// Array._makeUniqueAndReserveCapacityIfNotUnique(), scope 64
sil public_external [serialized] [_semantics "array.make_mutable"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$sSa034_makeUniqueAndReserveCapacityIfNotB0yyF : $@convention(method) <Element> (@inout Array<Element>) -> () {
[%0: noescape! **]
// %0                                             // users: %20, %10, %1
bb0(%0 : $*Array<Element>):
  %1 = struct_element_addr %0 : $*Array<Element>, #Array._buffer, scope 64 // user: %3
  // function_ref _ArrayBuffer.beginCOWMutation()
  %2 = function_ref @$ss12_ArrayBufferV16beginCOWMutationSbyF : $@convention(method) <τ_0_0> (@inout _ArrayBuffer<τ_0_0>) -> Bool, scope 64 // user: %3
  %3 = apply %2<Element>(%1) : $@convention(method) <τ_0_0> (@inout _ArrayBuffer<τ_0_0>) -> Bool, scope 64 // user: %4
  %4 = struct_extract %3 : $Bool, #Bool._value, scope 64 // user: %6
  %5 = integer_literal $Builtin.Int1, -1, scope 64 // users: %18, %6
  %6 = builtin "int_expect_Int1"(%4 : $Builtin.Int1, %5 : $Builtin.Int1) : $Builtin.Int1, scope 64 // user: %7
  cond_br %6, bb2, bb1, scope 64                  // id: %7

bb1:                                              // Preds: bb0
  %8 = integer_literal $Builtin.Int1, 0, scope 64 // users: %15, %9
  %9 = struct $Bool (%8 : $Builtin.Int1), scope 64 // user: %20
  %10 = load %0 : $*Array<Element>, scope 64      // user: %12
  // function_ref Array.count.getter
  %11 = function_ref @$sSa5countSivg : $@convention(method) <τ_0_0> (@guaranteed Array<τ_0_0>) -> Int, scope 64 // user: %12
  %12 = apply %11<Element>(%10) : $@convention(method) <τ_0_0> (@guaranteed Array<τ_0_0>) -> Int, scope 64 // user: %14
  %13 = integer_literal $Builtin.Int64, 1, scope 64 // user: %15
  %14 = struct_extract %12 : $Int, #Int._value, scope 64 // user: %15
  %15 = builtin "sadd_with_overflow_Int64"(%14 : $Builtin.Int64, %13 : $Builtin.Int64, %8 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 64 // user: %16
  %16 = tuple_extract %15 : $(Builtin.Int64, Builtin.Int1), 0, scope 64 // user: %17
  %17 = struct $Int (%16 : $Builtin.Int64), scope 64 // user: %20
  %18 = struct $Bool (%5 : $Builtin.Int1), scope 64 // user: %20
  // function_ref Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)
  %19 = function_ref @$sSa16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout Array<τ_0_0>) -> (), scope 64 // user: %20
  %20 = apply %19<Element>(%9, %17, %18, %0) : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout Array<τ_0_0>) -> (), scope 64
  br bb3, scope 64                                // id: %21

bb2:                                              // Preds: bb0
  br bb3, scope 64                                // id: %22

bb3:                                              // Preds: bb2 bb1
  %23 = tuple (), scope 64                        // user: %24
  return %23 : $(), scope 64                      // id: %24
} // end sil function '$sSa034_makeUniqueAndReserveCapacityIfNotB0yyF'

sil_scope 65 {  parent @$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntF : $@convention(method) <τ_0_0> (Int, @in τ_0_0, @inout Array<τ_0_0>) -> () }

// Array._appendElementAssumeUniqueAndCapacity(_:newElement:), scope 65
sil public_external [serialized] [_semantics "array.mutate_unknown"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntF : $@convention(method) <Element> (Int, @in Element, @inout Array<Element>) -> () {
[%2: noescape! **]
// %0                                             // user: %4
// %1                                             // users: %35, %34
// %2                                             // user: %9
bb0(%0 : $Int, %1 : $*Element, %2 : $*Array<Element>):
  %3 = integer_literal $Builtin.Int64, 1, scope 65 // user: %6
  %4 = struct_extract %0 : $Int, #Int._value, scope 65 // users: %28, %6
  %5 = integer_literal $Builtin.Int1, 0, scope 65 // user: %6
  %6 = builtin "sadd_with_overflow_Int64"(%4 : $Builtin.Int64, %3 : $Builtin.Int64, %5 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 65 // user: %7
  %7 = tuple_extract %6 : $(Builtin.Int64, Builtin.Int1), 0, scope 65 // user: %8
  %8 = struct $Int (%7 : $Builtin.Int64), scope 65 // user: %21
  %9 = struct_element_addr %2 : $*Array<Element>, #Array._buffer, scope 65 // user: %10
  %10 = load %9 : $*_ArrayBuffer<Element>, scope 65 // users: %25, %15, %12
  // function_ref _ArrayBuffer._native.getter
  %11 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 65 // user: %15
  %12 = struct_extract %10 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 65 // user: %13
  %13 = struct_extract %12 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 65 // users: %26, %24, %16, %14
  strong_retain %13 : $Builtin.BridgeObject, scope 65 // id: %14
  %15 = apply %11<Element>(%10) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 65 // user: %17
  strong_release %13 : $Builtin.BridgeObject, scope 65 // id: %16
  %17 = struct_extract %15 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 65 // users: %22, %18
  %18 = ref_element_addr %17 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 65 // user: %19
  %19 = struct_element_addr %18 : $*_ArrayBody, #_ArrayBody._storage, scope 65 // user: %20
  %20 = struct_element_addr %19 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 65 // user: %21
  store %8 to %20 : $*Int, scope 65               // id: %21
  strong_release %17 : $__ContiguousArrayStorageBase, scope 65 // id: %22
  // function_ref _ArrayBuffer.mutableFirstElementAddress.getter
  %23 = function_ref @$ss12_ArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 65 // user: %25
  strong_retain %13 : $Builtin.BridgeObject, scope 65 // id: %24
  %25 = apply %23<Element>(%10) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 65 // user: %27
  strong_release %13 : $Builtin.BridgeObject, scope 65 // id: %26
  %27 = struct_extract %25 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 65 // user: %29
  %28 = builtin "truncOrBitCast_Int64_Word"(%4 : $Builtin.Int64) : $Builtin.Word, scope 65 // user: %30
  %29 = pointer_to_address %27 : $Builtin.RawPointer to [strict] $*Element, scope 65 // user: %30
  %30 = index_addr [stack_protection] %29 : $*Element, %28 : $Builtin.Word, scope 65 // user: %31
  %31 = address_to_pointer [stack_protection] %30 : $*Element to $Builtin.RawPointer, scope 65 // user: %32
  %32 = struct $UnsafeMutablePointer<Element> (%31 : $Builtin.RawPointer), scope 65 // user: %34
  // function_ref UnsafeMutablePointer.initialize(to:)
  %33 = function_ref @$sSp10initialize2toyx_tF : $@convention(method) <τ_0_0> (@in_guaranteed τ_0_0, UnsafeMutablePointer<τ_0_0>) -> (), scope 65 // user: %34
  %34 = apply %33<Element>(%1, %32) : $@convention(method) <τ_0_0> (@in_guaranteed τ_0_0, UnsafeMutablePointer<τ_0_0>) -> (), scope 65
  destroy_addr %1 : $*Element, scope 65           // id: %35
  %36 = tuple (), scope 65                        // user: %37
  return %36 : $(), scope 65                      // id: %37
} // end sil function '$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntF'

sil_scope 66 {  parent @$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @owned _ArrayBuffer<τ_0_0>) -> @owned _ArrayBuffer<τ_0_0> }

// _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:), scope 66
sil shared [serialized] [noinline] [_semantics "optimize.sil.specialize.owned2guarantee.never"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF : $@convention(method) <Element> (Bool, Int, Bool, @owned _ArrayBuffer<Element>) -> @owned _ArrayBuffer<Element> {
[%3: read v**.c*.v**, write v**.c*.v**, copy **, destroy v**.c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // user: %50
// %1                                             // users: %24, %10, %8
// %2                                             // user: %6
// %3                                             // users: %121, %106, %102, %88, %85, %40, %33, %27, %5
bb0(%0 : $Bool, %1 : $Int, %2 : $Bool, %3 : $_ArrayBuffer<Element>):
  // function_ref _ArrayBuffer.capacity.getter
  %4 = function_ref @$ss12_ArrayBufferV8capacitySivg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 66 // user: %5
  %5 = apply %4<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 66 // users: %13, %9
  %6 = struct_extract %2 : $Bool, #Bool._value, scope 66 // user: %7
  cond_br %6, bb2, bb1, scope 66                  // id: %7

bb1:                                              // Preds: bb0
  br bb7(%1 : $Int), scope 66                     // id: %8

bb2:                                              // Preds: bb0
  %9 = struct_extract %5 : $Int, #Int._value, scope 66 // users: %16, %11
  %10 = struct_extract %1 : $Int, #Int._value, scope 66 // users: %21, %11
  %11 = builtin "cmp_slt_Int64"(%9 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 66 // user: %12
  cond_br %11, bb4, bb3, scope 66                 // id: %12

bb3:                                              // Preds: bb2
  br bb7(%5 : $Int), scope 66                     // id: %13

bb4:                                              // Preds: bb2
  %14 = integer_literal $Builtin.Int64, 2, scope 66 // user: %16
  %15 = integer_literal $Builtin.Int1, -1, scope 66 // user: %16
  %16 = builtin "smul_with_overflow_Int64"(%9 : $Builtin.Int64, %14 : $Builtin.Int64, %15 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 66 // users: %18, %17
  %17 = tuple_extract %16 : $(Builtin.Int64, Builtin.Int1), 0, scope 66 // users: %21, %20
  %18 = tuple_extract %16 : $(Builtin.Int64, Builtin.Int1), 1, scope 66 // user: %19
  cond_fail %18 : $Builtin.Int1, "arithmetic overflow", scope 66 // id: %19
  %20 = struct $Int (%17 : $Builtin.Int64), scope 66 // user: %23
  %21 = builtin "cmp_slt_Int64"(%17 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 66 // user: %22
  cond_br %21, bb6, bb5, scope 66                 // id: %22

bb5:                                              // Preds: bb4
  br bb7(%20 : $Int), scope 66                    // id: %23

bb6:                                              // Preds: bb4
  br bb7(%1 : $Int), scope 66                     // id: %24

// %25                                            // user: %49
bb7(%25 : $Int):                                  // Preds: bb6 bb5 bb3 bb1
  // function_ref _ArrayBuffer._isNative.getter
  %26 = function_ref @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 66 // user: %27
  %27 = apply %26<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 66 // user: %28
  %28 = struct_extract %27 : $Bool, #Bool._value, scope 66 // user: %30
  %29 = integer_literal $Builtin.Int1, -1, scope 66 // user: %30
  %30 = builtin "int_expect_Int1"(%28 : $Builtin.Int1, %29 : $Builtin.Int1) : $Builtin.Int1, scope 66 // user: %31
  cond_br %30, bb9, bb8, scope 66                 // id: %31

bb8:                                              // Preds: bb7
  // function_ref _ArrayBuffer._nonNative.getter
  %32 = function_ref @$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 66 // user: %33
  %33 = apply %32<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 66 // users: %36, %35
  // function_ref _CocoaArrayWrapper.endIndex.getter
  %34 = function_ref @$ss18_CocoaArrayWrapperV8endIndexSivg : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 66 // user: %35
  %35 = apply %34(%33) : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 66 // user: %38
  %36 = struct_extract %33 : $_CocoaArrayWrapper, #_CocoaArrayWrapper.buffer, scope 66 // user: %37
  strong_release %36 : $AnyObject, scope 66       // id: %37
  br bb10(%35 : $Int), scope 66                   // id: %38

bb9:                                              // Preds: bb7
  // function_ref _ArrayBuffer._native.getter
  %39 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 66 // user: %40
  %40 = apply %39<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 66 // users: %43, %42
  // function_ref _ContiguousArrayBuffer.count.getter
  %41 = function_ref @$ss22_ContiguousArrayBufferV5countSivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 66 // user: %42
  %42 = apply %41<Element>(%40) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 66 // user: %45
  %43 = struct_extract %40 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 66 // user: %44
  strong_release %43 : $__ContiguousArrayStorageBase, scope 66 // id: %44
  br bb10(%42 : $Int), scope 66                   // id: %45

// %46                                            // users: %104, %81, %53, %49
bb10(%46 : $Int):                                 // Preds: bb9 bb8
  %47 = metatype $@thin _ContiguousArrayBuffer<Element>.Type, scope 66 // user: %49
  // function_ref _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)
  %48 = function_ref @$ss22_ContiguousArrayBufferV19_uninitializedCount15minimumCapacityAByxGSi_SitcfC : $@convention(method) <τ_0_0> (Int, Int, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 66 // user: %49
  %49 = apply %48<Element>(%46, %25, %47) : $@convention(method) <τ_0_0> (Int, Int, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 66 // users: %120, %100, %83
  %50 = struct_extract %0 : $Bool, #Bool._value, scope 66 // user: %51
  cond_br %50, bb19, bb11, scope 66               // id: %51

bb11:                                             // Preds: bb10
  %52 = integer_literal $Builtin.Int64, 0, scope 66 // users: %80, %75, %72
  %53 = struct_extract %46 : $Int, #Int._value, scope 66 // users: %75, %72
  %54 = string_literal utf8 "Range requires lowerBound <= upperBound", scope 66 // user: %56
  %55 = integer_literal $Builtin.Word, 39, scope 66 // users: %61, %58
  %56 = builtin "ptrtoint_Word"(%54 : $Builtin.RawPointer) : $Builtin.Word, scope 66 // user: %58
  %57 = integer_literal $Builtin.Int8, 2, scope 66 // users: %93, %61, %58
  %58 = struct $StaticString (%56 : $Builtin.Word, %55 : $Builtin.Word, %57 : $Builtin.Int8), scope 66 // user: %97
  %59 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface", scope 66 // user: %60
  %60 = builtin "ptrtoint_Word"(%59 : $Builtin.RawPointer) : $Builtin.Word, scope 66 // user: %61
  %61 = struct $StaticString (%60 : $Builtin.Word, %55 : $Builtin.Word, %57 : $Builtin.Int8), scope 66 // user: %97
  %62 = integer_literal $Builtin.Int64, 16142, scope 66 // user: %63
  %63 = struct $UInt (%62 : $Builtin.Int64), scope 66 // user: %97
  %64 = builtin "assert_configuration"() : $Builtin.Int32, scope 66 // users: %69, %66
  %65 = integer_literal $Builtin.Int32, 0, scope 66 // user: %66
  %66 = builtin "cmp_eq_Int32"(%64 : $Builtin.Int32, %65 : $Builtin.Int32) : $Builtin.Int1, scope 66 // user: %67
  cond_br %66, bb15, bb12, scope 66               // id: %67

bb12:                                             // Preds: bb11
  %68 = integer_literal $Builtin.Int32, 1, scope 66 // user: %69
  %69 = builtin "cmp_eq_Int32"(%64 : $Builtin.Int32, %68 : $Builtin.Int32) : $Builtin.Int1, scope 66 // user: %70
  cond_br %69, bb14, bb13, scope 66               // id: %70

bb13:                                             // Preds: bb12
  br bb17, scope 66                               // id: %71

bb14:                                             // Preds: bb12
  %72 = builtin "cmp_slt_Int64"(%53 : $Builtin.Int64, %52 : $Builtin.Int64) : $Builtin.Int1, scope 66 // user: %73
  cond_fail %72 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 66 // id: %73
  br bb17, scope 66                               // id: %74

bb15:                                             // Preds: bb11
  %75 = builtin "cmp_slt_Int64"(%53 : $Builtin.Int64, %52 : $Builtin.Int64) : $Builtin.Int1, scope 66 // user: %77
  %76 = integer_literal $Builtin.Int1, 0, scope 66 // user: %77
  %77 = builtin "int_expect_Int1"(%75 : $Builtin.Int1, %76 : $Builtin.Int1) : $Builtin.Int1, scope 66 // user: %78
  cond_br %77, bb18, bb16, scope 66               // id: %78

bb16:                                             // Preds: bb15
  br bb17, scope 66                               // id: %79

bb17:                                             // Preds: bb16 bb14 bb13
  %80 = struct $Int (%52 : $Builtin.Int64), scope 66 // user: %81
  %81 = struct $Range<Int> (%80 : $Int, %46 : $Int), scope 66 // user: %88
  // function_ref _ContiguousArrayBuffer.mutableFirstElementAddress.getter
  %82 = function_ref @$ss22_ContiguousArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 66 // user: %83
  %83 = apply %82<Element>(%49) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 66 // user: %88
  // function_ref _ArrayBuffer._copyContents(subRange:initializing:)
  %84 = function_ref @$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF : $@convention(method) <τ_0_0> (Range<Int>, UnsafeMutablePointer<τ_0_0>, @owned _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 66 // user: %88
  %85 = struct_extract %3 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 66 // user: %86
  %86 = struct_extract %85 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 66 // user: %87
  strong_retain %86 : $Builtin.BridgeObject, scope 66 // id: %87
  %88 = apply %84<Element>(%81, %83, %3) : $@convention(method) <τ_0_0> (Range<Int>, UnsafeMutablePointer<τ_0_0>, @owned _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 66
  br bb20, scope 66                               // id: %89

bb18:                                             // Preds: bb15
  %90 = string_literal utf8 "Fatal error", scope 66 // user: %92
  %91 = integer_literal $Builtin.Word, 11, scope 66 // user: %93
  %92 = builtin "ptrtoint_Word"(%90 : $Builtin.RawPointer) : $Builtin.Word, scope 66 // user: %93
  %93 = struct $StaticString (%92 : $Builtin.Word, %91 : $Builtin.Word, %57 : $Builtin.Int8), scope 66 // user: %97
  %94 = integer_literal $Builtin.Int32, 1, scope 66 // user: %95
  %95 = struct $UInt32 (%94 : $Builtin.Int32), scope 66 // user: %97
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %96 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 66 // user: %97
  %97 = apply %96(%93, %58, %61, %63, %95) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 66
  unreachable , scope 66                          // id: %98

bb19:                                             // Preds: bb10
  // function_ref _ContiguousArrayBuffer.firstElementAddress.getter
  %99 = function_ref @$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 66 // user: %100
  %100 = apply %99<Element>(%49) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 66 // user: %104
  // function_ref _ArrayBuffer.mutableFirstElementAddress.getter
  %101 = function_ref @$ss12_ArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 66 // user: %102
  %102 = apply %101<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 66 // user: %104
  // function_ref UnsafeMutablePointer.moveInitialize(from:count:)
  %103 = function_ref @$sSp14moveInitialize4from5countySpyxG_SitF : $@convention(method) <τ_0_0> (UnsafeMutablePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 66 // user: %104
  %104 = apply %103<Element>(%102, %46, %100) : $@convention(method) <τ_0_0> (UnsafeMutablePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 66
  // function_ref _ArrayBuffer._native.getter
  %105 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 66 // user: %106
  %106 = apply %105<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 66 // user: %109
  %107 = integer_literal $Builtin.Int64, 0, scope 66 // user: %108
  %108 = struct $Int (%107 : $Builtin.Int64), scope 66 // user: %113
  %109 = struct_extract %106 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 66 // users: %114, %110
  %110 = ref_element_addr %109 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 66 // user: %111
  %111 = struct_element_addr %110 : $*_ArrayBody, #_ArrayBody._storage, scope 66 // user: %112
  %112 = struct_element_addr %111 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 66 // user: %113
  store %108 to %112 : $*Int, scope 66            // id: %113
  strong_release %109 : $__ContiguousArrayStorageBase, scope 66 // id: %114
  br bb20, scope 66                               // id: %115

bb20:                                             // Preds: bb19 bb17
  %116 = metatype $@thin _ArrayBuffer<Element>.Type, scope 66 // user: %120
  %117 = integer_literal $Builtin.Int64, 0, scope 66 // user: %118
  %118 = struct $Int (%117 : $Builtin.Int64), scope 66 // user: %120
  // function_ref _ArrayBuffer.init(_buffer:shiftedToStartIndex:)
  %119 = function_ref @$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfC : $@convention(method) <τ_0_0> (@owned _ContiguousArrayBuffer<τ_0_0>, Int, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0>, scope 66 // user: %120
  %120 = apply %119<Element>(%49, %118, %116) : $@convention(method) <τ_0_0> (@owned _ContiguousArrayBuffer<τ_0_0>, Int, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0>, scope 66 // user: %124
  %121 = struct_extract %3 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 66 // user: %122
  %122 = struct_extract %121 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 66 // user: %123
  strong_release %122 : $Builtin.BridgeObject, scope 66 // id: %123
  return %120 : $_ArrayBuffer<Element>, scope 66  // id: %124
} // end sil function '$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF'

sil_scope 67 {  parent @$ss12_ArrayBufferV13_copyContents12initializings16IndexingIteratorVyAByxGG_SitSryxG_tF : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>, @owned _ArrayBuffer<τ_0_0>) -> (@owned IndexingIterator<_ArrayBuffer<τ_0_0>>, Int) }

// _ArrayBuffer._copyContents(initializing:), scope 67
sil public_external [serialized] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss12_ArrayBufferV13_copyContents12initializings16IndexingIteratorVyAByxGG_SitSryxG_tF : $@convention(method) <Element> (UnsafeMutableBufferPointer<Element>, @owned _ArrayBuffer<Element>) -> (@owned IndexingIterator<_ArrayBuffer<Element>>, Int) {
// %0                                             // users: %96, %19, %8
// %1                                             // users: %102, %94, %82, %30, %15, %14, %3
bb0(%0 : $UnsafeMutableBufferPointer<Element>, %1 : $_ArrayBuffer<Element>):
  // function_ref _ArrayBuffer._isNative.getter
  %2 = function_ref @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 67 // user: %3
  %3 = apply %2<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 67 // user: %4
  %4 = struct_extract %3 : $Bool, #Bool._value, scope 67 // user: %6
  %5 = integer_literal $Builtin.Int1, -1, scope 67 // user: %6
  %6 = builtin "int_expect_Int1"(%4 : $Builtin.Int1, %5 : $Builtin.Int1) : $Builtin.Int1, scope 67 // user: %7
  cond_br %6, bb16, bb1, scope 67                 // id: %7

bb1:                                              // Preds: bb0
  %8 = struct_extract %0 : $UnsafeMutableBufferPointer<Element>, #UnsafeMutableBufferPointer.count, scope 67 // user: %10
  %9 = integer_literal $Builtin.Int64, 0, scope 67 // users: %58, %49, %16, %11
  %10 = struct_extract %8 : $Int, #Int._value, scope 67 // users: %72, %58, %49, %11
  %11 = builtin "cmp_slt_Int64"(%9 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 67 // user: %12
  cond_br %11, bb3, bb2, scope 67                 // id: %12

bb2:                                              // Preds: bb1
  // function_ref _ArrayBuffer.startIndex.getter
  %13 = function_ref @$ss12_ArrayBufferV10startIndexSivg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 67 // user: %14
  %14 = apply %13<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 67 // user: %15
  %15 = struct $IndexingIterator<_ArrayBuffer<Element>> (%1 : $_ArrayBuffer<Element>, %14 : $Int), scope 67 // user: %17
  %16 = struct $Int (%9 : $Builtin.Int64), scope 67 // user: %17
  br bb17(%15 : $IndexingIterator<_ArrayBuffer<Element>>, %16 : $Int), scope 67 // id: %17

bb3:                                              // Preds: bb1
  // function_ref UnsafeMutableBufferPointer.baseAddress.getter
  %18 = function_ref @$sSr11baseAddressSpyxGSgvg : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>) -> Optional<UnsafeMutablePointer<τ_0_0>>, scope 67 // user: %19
  %19 = apply %18<Element>(%0) : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>) -> Optional<UnsafeMutablePointer<τ_0_0>>, scope 67 // user: %20
  switch_enum %19 : $Optional<UnsafeMutablePointer<Element>>, case #Optional.some!enumelt: bb5, case #Optional.none!enumelt: bb4, scope 67 // id: %20

bb4:                                              // Preds: bb3
  %21 = enum $Optional<UnsafeMutablePointer<AnyObject>>, #Optional.none!enumelt, scope 67 // user: %22
  br bb6(%21 : $Optional<UnsafeMutablePointer<AnyObject>>), scope 67 // id: %22

// %23                                            // user: %24
bb5(%23 : $UnsafeMutablePointer<Element>):        // Preds: bb3
  %24 = struct_extract %23 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 67 // user: %25
  %25 = struct $UnsafeMutablePointer<AnyObject> (%24 : $Builtin.RawPointer), scope 67 // user: %26
  %26 = enum $Optional<UnsafeMutablePointer<AnyObject>>, #Optional.some!enumelt, %25 : $UnsafeMutablePointer<AnyObject>, scope 67 // user: %27
  br bb6(%26 : $Optional<UnsafeMutablePointer<AnyObject>>), scope 67 // id: %27

// %28                                            // users: %74, %60
bb6(%28 : $Optional<UnsafeMutablePointer<AnyObject>>): // Preds: bb5 bb4
  // function_ref _ArrayBuffer._nonNative.getter
  %29 = function_ref @$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 67 // user: %30
  %30 = apply %29<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 67 // user: %76
  %31 = string_literal utf8 "UnsafeMutableBufferPointer with negative count", scope 67 // user: %33
  %32 = integer_literal $Builtin.Word, 46, scope 67 // user: %35
  %33 = builtin "ptrtoint_Word"(%31 : $Builtin.RawPointer) : $Builtin.Word, scope 67 // user: %35
  %34 = integer_literal $Builtin.Int8, 2, scope 67 // users: %87, %64, %55, %39, %35
  %35 = struct $StaticString (%33 : $Builtin.Word, %32 : $Builtin.Word, %34 : $Builtin.Int8), scope 67 // user: %91
  %36 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface", scope 67 // user: %38
  %37 = integer_literal $Builtin.Word, 39, scope 67 // user: %39
  %38 = builtin "ptrtoint_Word"(%36 : $Builtin.RawPointer) : $Builtin.Word, scope 67 // user: %39
  %39 = struct $StaticString (%38 : $Builtin.Word, %37 : $Builtin.Word, %34 : $Builtin.Int8), scope 67 // users: %91, %68
  %40 = integer_literal $Builtin.Int64, 35004, scope 67 // user: %41
  %41 = struct $UInt (%40 : $Builtin.Int64), scope 67 // user: %91
  %42 = builtin "assert_configuration"() : $Builtin.Int32, scope 67 // user: %44
  %43 = integer_literal $Builtin.Int32, 0, scope 67 // user: %44
  %44 = builtin "cmp_eq_Int32"(%42 : $Builtin.Int32, %43 : $Builtin.Int32) : $Builtin.Int1, scope 67 // user: %46
  %45 = integer_literal $Builtin.Int1, 0, scope 67 // users: %50, %46
  %46 = builtin "int_expect_Int1"(%44 : $Builtin.Int1, %45 : $Builtin.Int1) : $Builtin.Int1, scope 67 // user: %47
  cond_br %46, bb8, bb7, scope 67                 // id: %47

bb7:                                              // Preds: bb6
  br bb14, scope 67                               // id: %48

bb8:                                              // Preds: bb6
  %49 = builtin "cmp_slt_Int64"(%10 : $Builtin.Int64, %9 : $Builtin.Int64) : $Builtin.Int1, scope 67 // user: %50
  %50 = builtin "int_expect_Int1"(%49 : $Builtin.Int1, %45 : $Builtin.Int1) : $Builtin.Int1, scope 67 // user: %51
  cond_br %50, bb15, bb9, scope 67                // id: %51

bb9:                                              // Preds: bb8
  %52 = string_literal utf8 "UnsafeMutableBufferPointer has a nil start and nonzero count", scope 67 // user: %54
  %53 = integer_literal $Builtin.Word, 60, scope 67 // user: %55
  %54 = builtin "ptrtoint_Word"(%52 : $Builtin.RawPointer) : $Builtin.Word, scope 67 // user: %55
  %55 = struct $StaticString (%54 : $Builtin.Word, %53 : $Builtin.Word, %34 : $Builtin.Int8), scope 67 // user: %68
  %56 = integer_literal $Builtin.Int64, 35006, scope 67 // user: %57
  %57 = struct $UInt (%56 : $Builtin.Int64), scope 67 // user: %68
  %58 = builtin "cmp_eq_Int64"(%10 : $Builtin.Int64, %9 : $Builtin.Int64) : $Builtin.Int1, scope 67 // user: %59
  cond_br %58, bb13, bb10, scope 67               // id: %59

bb10:                                             // Preds: bb9
  switch_enum %28 : $Optional<UnsafeMutablePointer<AnyObject>>, case #Optional.some!enumelt: bb12, case #Optional.none!enumelt: bb11, scope 67 // id: %60

bb11:                                             // Preds: bb10
  %61 = string_literal utf8 "Fatal error", scope 67 // user: %63
  %62 = integer_literal $Builtin.Word, 11, scope 67 // user: %64
  %63 = builtin "ptrtoint_Word"(%61 : $Builtin.RawPointer) : $Builtin.Word, scope 67 // user: %64
  %64 = struct $StaticString (%63 : $Builtin.Word, %62 : $Builtin.Word, %34 : $Builtin.Int8), scope 67 // user: %68
  %65 = integer_literal $Builtin.Int32, 1, scope 67 // user: %66
  %66 = struct $UInt32 (%65 : $Builtin.Int32), scope 67 // user: %68
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %67 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 67 // user: %68
  %68 = apply %67(%64, %55, %39, %57, %66) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 67
  unreachable , scope 67                          // id: %69

bb12:                                             // Preds: bb10
  br bb14, scope 67                               // id: %70

bb13:                                             // Preds: bb9
  br bb14, scope 67                               // id: %71

bb14:                                             // Preds: bb13 bb12 bb7
  %72 = builtin "assumeNonNegative_Int64"(%10 : $Builtin.Int64) : $Builtin.Int64, scope 67 // user: %73
  %73 = struct $Int (%72 : $Builtin.Int64), scope 67 // user: %74
  %74 = struct $UnsafeMutableBufferPointer<AnyObject> (%28 : $Optional<UnsafeMutablePointer<AnyObject>>, %73 : $Int), scope 67 // user: %76
  // function_ref _CocoaArrayWrapper._copyContents(initializing:)
  %75 = function_ref @$ss18_CocoaArrayWrapperV13_copyContents12initializings16IndexingIteratorVyABG_SitSryyXlG_tF : $@convention(method) (UnsafeMutableBufferPointer<AnyObject>, @owned _CocoaArrayWrapper) -> (@owned IndexingIterator<_CocoaArrayWrapper>, Int), scope 67 // user: %76
  %76 = apply %75(%74, %30) : $@convention(method) (UnsafeMutableBufferPointer<AnyObject>, @owned _CocoaArrayWrapper) -> (@owned IndexingIterator<_CocoaArrayWrapper>, Int), scope 67 // users: %81, %77
  %77 = tuple_extract %76 : $(IndexingIterator<_CocoaArrayWrapper>, Int), 0, scope 67 // user: %78
  %78 = struct_extract %77 : $IndexingIterator<_CocoaArrayWrapper>, #IndexingIterator._elements, scope 67 // user: %79
  %79 = struct_extract %78 : $_CocoaArrayWrapper, #_CocoaArrayWrapper.buffer, scope 67 // user: %80
  strong_release %79 : $AnyObject, scope 67       // id: %80
  %81 = tuple_extract %76 : $(IndexingIterator<_CocoaArrayWrapper>, Int), 1, scope 67 // users: %83, %82
  %82 = struct $IndexingIterator<_ArrayBuffer<Element>> (%1 : $_ArrayBuffer<Element>, %81 : $Int), scope 67 // user: %83
  br bb17(%82 : $IndexingIterator<_ArrayBuffer<Element>>, %81 : $Int), scope 67 // id: %83

bb15:                                             // Preds: bb8
  %84 = string_literal utf8 "Fatal error", scope 67 // user: %86
  %85 = integer_literal $Builtin.Word, 11, scope 67 // user: %87
  %86 = builtin "ptrtoint_Word"(%84 : $Builtin.RawPointer) : $Builtin.Word, scope 67 // user: %87
  %87 = struct $StaticString (%86 : $Builtin.Word, %85 : $Builtin.Word, %34 : $Builtin.Int8), scope 67 // user: %91
  %88 = integer_literal $Builtin.Int32, 1, scope 67 // user: %89
  %89 = struct $UInt32 (%88 : $Builtin.Int32), scope 67 // user: %91
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %90 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 67 // user: %91
  %91 = apply %90(%87, %35, %39, %41, %89) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 67
  unreachable , scope 67                          // id: %92

bb16:                                             // Preds: bb0
  // function_ref _ArrayBuffer._native.getter
  %93 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 67 // user: %94
  %94 = apply %93<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 67 // user: %96
  // function_ref _ContiguousArrayBuffer._copyContents(initializing:)
  %95 = function_ref @$ss22_ContiguousArrayBufferV13_copyContents12initializings16IndexingIteratorVyAByxGG_SitSryxG_tF : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>, @owned _ContiguousArrayBuffer<τ_0_0>) -> (@owned IndexingIterator<_ContiguousArrayBuffer<τ_0_0>>, Int), scope 67 // user: %96
  %96 = apply %95<Element>(%0, %94) : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>, @owned _ContiguousArrayBuffer<τ_0_0>) -> (@owned IndexingIterator<_ContiguousArrayBuffer<τ_0_0>>, Int), scope 67 // users: %101, %97
  %97 = tuple_extract %96 : $(IndexingIterator<_ContiguousArrayBuffer<Element>>, Int), 0, scope 67 // user: %98
  %98 = struct_extract %97 : $IndexingIterator<_ContiguousArrayBuffer<Element>>, #IndexingIterator._elements, scope 67 // user: %99
  %99 = struct_extract %98 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 67 // user: %100
  strong_release %99 : $__ContiguousArrayStorageBase, scope 67 // id: %100
  %101 = tuple_extract %96 : $(IndexingIterator<_ContiguousArrayBuffer<Element>>, Int), 1, scope 67 // users: %103, %102
  %102 = struct $IndexingIterator<_ArrayBuffer<Element>> (%1 : $_ArrayBuffer<Element>, %101 : $Int), scope 67 // user: %103
  br bb17(%102 : $IndexingIterator<_ArrayBuffer<Element>>, %101 : $Int), scope 67 // id: %103

// %104                                           // user: %106
// %105                                           // user: %106
bb17(%104 : $IndexingIterator<_ArrayBuffer<Element>>, %105 : $Int): // Preds: bb16 bb14 bb2
  %106 = tuple (%104 : $IndexingIterator<_ArrayBuffer<Element>>, %105 : $Int), scope 67 // user: %107
  return %106 : $(IndexingIterator<_ArrayBuffer<Element>>, Int), scope 67 // id: %107
} // end sil function '$ss12_ArrayBufferV13_copyContents12initializings16IndexingIteratorVyAByxGG_SitSryxG_tF'

sil_scope 68 {  parent @$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF : $@convention(method) <τ_0_0> (Range<Int>, UnsafeMutablePointer<τ_0_0>, @owned _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0> }

// _ArrayBuffer._copyContents(subRange:initializing:), scope 68
sil public_external [serialized] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF : $@convention(method) <Element> (Range<Int>, UnsafeMutablePointer<Element>, @owned _ArrayBuffer<Element>) -> UnsafeMutablePointer<Element> {
// %0                                             // users: %23, %16, %4
// %1                                             // users: %23, %11
// %2                                             // users: %26, %21, %14, %6, %4
bb0(%0 : $Range<Int>, %1 : $UnsafeMutablePointer<Element>, %2 : $_ArrayBuffer<Element>):
  // function_ref _ArrayBuffer._typeCheck(_:)
  %3 = function_ref @$ss12_ArrayBufferV10_typeCheckyySnySiGF : $@convention(method) <τ_0_0> (Range<Int>, @guaranteed _ArrayBuffer<τ_0_0>) -> (), scope 68 // user: %4
  %4 = apply %3<Element>(%0, %2) : $@convention(method) <τ_0_0> (Range<Int>, @guaranteed _ArrayBuffer<τ_0_0>) -> (), scope 68
  // function_ref _ArrayBuffer._isNative.getter
  %5 = function_ref @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 68 // user: %6
  %6 = apply %5<Element>(%2) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 68 // user: %7
  %7 = struct_extract %6 : $Bool, #Bool._value, scope 68 // user: %9
  %8 = integer_literal $Builtin.Int1, -1, scope 68 // user: %9
  %9 = builtin "int_expect_Int1"(%7 : $Builtin.Int1, %8 : $Builtin.Int1) : $Builtin.Int1, scope 68 // user: %10
  cond_br %9, bb2, bb1, scope 68                  // id: %10

bb1:                                              // Preds: bb0
  %11 = struct_extract %1 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 68 // user: %12
  %12 = struct $UnsafeMutablePointer<AnyObject> (%11 : $Builtin.RawPointer), scope 68 // user: %16
  // function_ref _ArrayBuffer._nonNative.getter
  %13 = function_ref @$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 68 // user: %14
  %14 = apply %13<Element>(%2) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 68 // user: %16
  // function_ref _CocoaArrayWrapper._copyContents(subRange:initializing:)
  %15 = function_ref @$ss18_CocoaArrayWrapperV13_copyContents8subRange12initializingSpyyXlGSnySiG_AFtF : $@convention(method) (Range<Int>, UnsafeMutablePointer<AnyObject>, @owned _CocoaArrayWrapper) -> UnsafeMutablePointer<AnyObject>, scope 68 // user: %16
  %16 = apply %15(%0, %12, %14) : $@convention(method) (Range<Int>, UnsafeMutablePointer<AnyObject>, @owned _CocoaArrayWrapper) -> UnsafeMutablePointer<AnyObject>, scope 68 // user: %17
  %17 = struct_extract %16 : $UnsafeMutablePointer<AnyObject>, #UnsafeMutablePointer._rawValue, scope 68 // user: %18
  %18 = struct $UnsafeMutablePointer<Element> (%17 : $Builtin.RawPointer), scope 68 // user: %19
  br bb3(%18 : $UnsafeMutablePointer<Element>), scope 68 // id: %19

bb2:                                              // Preds: bb0
  // function_ref _ArrayBuffer._native.getter
  %20 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 68 // user: %21
  %21 = apply %20<Element>(%2) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 68 // user: %23
  // function_ref _ContiguousArrayBuffer._copyContents(subRange:initializing:)
  %22 = function_ref @$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF : $@convention(method) <τ_0_0> (Range<Int>, UnsafeMutablePointer<τ_0_0>, @owned _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 68 // user: %23
  %23 = apply %22<Element>(%0, %1, %21) : $@convention(method) <τ_0_0> (Range<Int>, UnsafeMutablePointer<τ_0_0>, @owned _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 68 // user: %24
  br bb3(%23 : $UnsafeMutablePointer<Element>), scope 68 // id: %24

// %25                                            // user: %29
bb3(%25 : $UnsafeMutablePointer<Element>):        // Preds: bb2 bb1
  %26 = struct_extract %2 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 68 // user: %27
  %27 = struct_extract %26 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 68 // user: %28
  strong_release %27 : $Builtin.BridgeObject, scope 68 // id: %28
  return %25 : $UnsafeMutablePointer<Element>, scope 68 // id: %29
} // end sil function '$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF'

sil_scope 69 {  parent @$ss12_ArrayBufferV19_getElementSlowPathyyXlSiF : $@convention(method) <τ_0_0> (Int, @guaranteed _ArrayBuffer<τ_0_0>) -> @owned AnyObject }

// _ArrayBuffer._getElementSlowPath(_:), scope 69
sil public_external [serialized] [noinline] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss12_ArrayBufferV19_getElementSlowPathyyXlSiF : $@convention(method) <Element> (Int, @guaranteed _ArrayBuffer<Element>) -> @owned AnyObject {
[%1: noescape! v**, escape! v**.c*.v** => %r.v**]
// %0                                             // users: %165, %141, %124, %9
// %1                                             // users: %169, %160, %101, %7, %3
bb0(%0 : $Int, %1 : $_ArrayBuffer<Element>):
  // function_ref _ArrayBuffer._isNative.getter
  %2 = function_ref @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 69 // user: %3
  %3 = apply %2<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 69 // user: %4
  %4 = struct_extract %3 : $Bool, #Bool._value, scope 69 // user: %5
  cond_br %4, bb7, bb1, scope 69                  // id: %5

bb1:                                              // Preds: bb0
  // function_ref _ArrayBuffer._nonNative.getter
  %6 = function_ref @$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 69 // user: %7
  %7 = apply %6<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 69 // users: %10, %9
  // function_ref _CocoaArrayWrapper.subscript.getter
  %8 = function_ref @$ss18_CocoaArrayWrapperVyyXlSicig : $@convention(method) (Int, @guaranteed _CocoaArrayWrapper) -> @owned AnyObject, scope 69 // user: %9
  %9 = apply %8(%0, %7) : $@convention(method) (Int, @guaranteed _CocoaArrayWrapper) -> @owned AnyObject, scope 69 // users: %99, %96, %62, %61, %16, %15, %13
  %10 = struct_extract %7 : $_CocoaArrayWrapper, #_CocoaArrayWrapper.buffer, scope 69 // user: %11
  strong_release %10 : $AnyObject, scope 69       // id: %11
  %12 = alloc_stack $AnyObject, scope 69          // users: %98, %19, %17, %13
  store %9 to %12 : $*AnyObject, scope 69         // id: %13
  %14 = alloc_stack $Element, scope 69            // users: %97, %95, %18, %17
  strong_retain %9 : $AnyObject, scope 69         // id: %15
  strong_retain %9 : $AnyObject, scope 69         // id: %16
  checked_cast_addr_br take_always AnyObject in %12 : $*AnyObject to Element in %14 : $*Element, bb6, bb2, scope 69 // id: %17

bb2:                                              // Preds: bb1
  dealloc_stack %14 : $*Element, scope 69         // id: %18
  dealloc_stack %12 : $*AnyObject, scope 69       // id: %19
  %20 = string_literal utf8 "Fatal error", scope 69 // user: %22
  %21 = integer_literal $Builtin.Word, 11, scope 69 // users: %55, %24
  %22 = builtin "ptrtoint_Word"(%20 : $Builtin.RawPointer) : $Builtin.Word, scope 69 // user: %24
  %23 = integer_literal $Builtin.Int8, 2, scope 69 // user: %24
  %24 = struct $StaticString (%22 : $Builtin.Word, %21 : $Builtin.Word, %23 : $Builtin.Int8), scope 69 // user: %93
  %25 = alloc_stack $String, scope 69             // users: %80, %78, %66, %56, %49, %38, %31
  %26 = integer_literal $Builtin.Int64, 85, scope 69 // user: %27
  %27 = struct $Int (%26 : $Builtin.Int64), scope 69 // user: %30
  %28 = metatype $@thin String.Type, scope 69     // users: %82, %73, %55, %36, %30
  // function_ref static String._createEmpty(withInitialCapacity:)
  %29 = function_ref @$sSS12_createEmpty19withInitialCapacitySSSi_tFZ : $@convention(method) (Int, @thin String.Type) -> @owned String, scope 69 // user: %30
  %30 = apply %29(%27, %28) : $@convention(method) (Int, @thin String.Type) -> @owned String, scope 69 // user: %31
  store %30 to %25 : $*String, scope 69           // id: %31
  %32 = string_literal utf8 "NSArray element failed to match the Swift Array Element type\nExpected ", scope 69 // user: %36
  %33 = integer_literal $Builtin.Word, 70, scope 69 // user: %36
  %34 = integer_literal $Builtin.Int1, -1, scope 69 // users: %73, %55, %36
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %35 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 69 // users: %73, %55, %36
  %36 = apply %35(%32, %33, %34, %28) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 69 // users: %39, %38
  // function_ref String.append(_:)
  %37 = function_ref @$sSS6appendyySSF : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69 // users: %66, %56, %49, %38
  %38 = apply %37(%36, %25) : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69
  %39 = struct_extract %36 : $String, #String._guts, scope 69 // user: %40
  %40 = struct_extract %39 : $_StringGuts, #_StringGuts._object, scope 69 // user: %41
  %41 = struct_extract %40 : $_StringObject, #_StringObject._object, scope 69 // user: %42
  strong_release %41 : $Builtin.BridgeObject, scope 69 // id: %42
  %43 = metatype $@thick Element.Type, scope 69   // user: %44
  %44 = init_existential_metatype %43 : $@thick Element.Type, $@thick any Any.Type, scope 69 // user: %48
  %45 = integer_literal $Builtin.Int1, 0, scope 69 // user: %46
  %46 = struct $Bool (%45 : $Builtin.Int1), scope 69 // users: %65, %48
  // function_ref _typeName(_:qualified:)
  %47 = function_ref @$ss9_typeName_9qualifiedSSypXp_SbtF : $@convention(thin) (@thick any Any.Type, Bool) -> @owned String, scope 69 // users: %65, %48
  %48 = apply %47(%44, %46) : $@convention(thin) (@thick any Any.Type, Bool) -> @owned String, scope 69 // users: %50, %49
  %49 = apply %37(%48, %25) : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69
  %50 = struct_extract %48 : $String, #String._guts, scope 69 // user: %51
  %51 = struct_extract %50 : $_StringGuts, #_StringGuts._object, scope 69 // user: %52
  %52 = struct_extract %51 : $_StringObject, #_StringObject._object, scope 69 // user: %53
  strong_release %52 : $Builtin.BridgeObject, scope 69 // id: %53
  %54 = string_literal utf8 " but found ", scope 69 // user: %55
  %55 = apply %35(%54, %21, %34, %28) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 69 // users: %57, %56
  %56 = apply %37(%55, %25) : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69
  %57 = struct_extract %55 : $String, #String._guts, scope 69 // user: %58
  %58 = struct_extract %57 : $_StringGuts, #_StringGuts._object, scope 69 // user: %59
  %59 = struct_extract %58 : $_StringObject, #_StringObject._object, scope 69 // user: %60
  strong_release %59 : $Builtin.BridgeObject, scope 69 // id: %60
  %61 = existential_metatype $@thick any AnyObject.Type, %9 : $AnyObject, scope 69 // user: %63
  strong_release %9 : $AnyObject, scope 69        // id: %62
  %63 = open_existential_metatype %61 : $@thick any AnyObject.Type to $@thick (@opened("2DF67B0A-8BDA-11EE-BBC3-86803A041461", AnyObject) Self).Type, scope 69 // user: %64
  %64 = init_existential_metatype %63 : $@thick (@opened("2DF67B0A-8BDA-11EE-BBC3-86803A041461", AnyObject) Self).Type, $@thick any Any.Type, scope 69 // user: %65
  %65 = apply %47(%64, %46) : $@convention(thin) (@thick any Any.Type, Bool) -> @owned String, scope 69 // users: %67, %66
  %66 = apply %37(%65, %25) : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69
  %67 = struct_extract %65 : $String, #String._guts, scope 69 // user: %68
  %68 = struct_extract %67 : $_StringGuts, #_StringGuts._object, scope 69 // user: %69
  %69 = struct_extract %68 : $_StringObject, #_StringObject._object, scope 69 // user: %70
  strong_release %69 : $Builtin.BridgeObject, scope 69 // id: %70
  %71 = string_literal utf8 "", scope 69          // user: %73
  %72 = integer_literal $Builtin.Word, 0, scope 69 // user: %73
  %73 = apply %35(%71, %72, %34, %28) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 69 // user: %74
  %74 = struct_extract %73 : $String, #String._guts, scope 69 // user: %75
  %75 = struct_extract %74 : $_StringGuts, #_StringGuts._object, scope 69 // user: %76
  %76 = struct_extract %75 : $_StringObject, #_StringObject._object, scope 69 // user: %77
  strong_release %76 : $Builtin.BridgeObject, scope 69 // id: %77
  %78 = load %25 : $*String, scope 69             // user: %79
  %79 = struct $DefaultStringInterpolation (%78 : $String), scope 69 // user: %82
  dealloc_stack %25 : $*String, scope 69          // id: %80
  // function_ref String.init(stringInterpolation:)
  %81 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String, scope 69 // user: %82
  %82 = apply %81(%79, %28) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String, scope 69 // user: %93
  %83 = builtin "assert_configuration"() : $Builtin.Int32, scope 69 // user: %85
  %84 = integer_literal $Builtin.Int32, 0, scope 69 // users: %87, %85
  %85 = builtin "cmp_eq_Int32"(%83 : $Builtin.Int32, %84 : $Builtin.Int32) : $Builtin.Int1, scope 69 // user: %86
  cond_br %85, bb4, bb3, scope 69                 // id: %86

bb3:                                              // Preds: bb2
  br bb5(%84 : $Builtin.Int32), scope 69          // id: %87

bb4:                                              // Preds: bb2
  %88 = integer_literal $Builtin.Int32, 1, scope 69 // user: %89
  br bb5(%88 : $Builtin.Int32), scope 69          // id: %89

// %90                                            // user: %91
bb5(%90 : $Builtin.Int32):                        // Preds: bb4 bb3
  %91 = struct $UInt32 (%90 : $Builtin.Int32), scope 69 // user: %93
  // function_ref _assertionFailure(_:_:flags:)
  %92 = function_ref @$ss17_assertionFailure__5flagss5NeverOs12StaticStringV_SSs6UInt32VtF : $@convention(thin) (StaticString, @guaranteed String, UInt32) -> Never, scope 69 // user: %93
  %93 = apply %92(%24, %82, %91) : $@convention(thin) (StaticString, @guaranteed String, UInt32) -> Never, scope 69
  unreachable , scope 69                          // id: %94

bb6:                                              // Preds: bb1
  destroy_addr %14 : $*Element, scope 69          // id: %95
  strong_release %9 : $AnyObject, scope 69        // id: %96
  dealloc_stack %14 : $*Element, scope 69         // id: %97
  dealloc_stack %12 : $*AnyObject, scope 69       // id: %98
  br bb21(%9 : $AnyObject), scope 69              // id: %99

bb7:                                              // Preds: bb0
  // function_ref _ArrayBuffer._native.getter
  %100 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 69 // user: %101
  %101 = apply %100<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 69 // users: %144, %127, %120
  %102 = string_literal utf8 "Index out of range", scope 69 // user: %104
  %103 = integer_literal $Builtin.Word, 18, scope 69 // user: %106
  %104 = builtin "ptrtoint_Word"(%102 : $Builtin.RawPointer) : $Builtin.Word, scope 69 // user: %106
  %105 = integer_literal $Builtin.Int8, 2, scope 69 // users: %264, %185, %110, %106
  %106 = struct $StaticString (%104 : $Builtin.Word, %103 : $Builtin.Word, %105 : $Builtin.Int8), scope 69 // user: %268
  %107 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface", scope 69 // user: %109
  %108 = integer_literal $Builtin.Word, 39, scope 69 // user: %110
  %109 = builtin "ptrtoint_Word"(%107 : $Builtin.RawPointer) : $Builtin.Word, scope 69 // user: %110
  %110 = struct $StaticString (%109 : $Builtin.Word, %108 : $Builtin.Word, %105 : $Builtin.Int8), scope 69 // user: %268
  %111 = integer_literal $Builtin.Int64, 6156, scope 69 // user: %112
  %112 = struct $UInt (%111 : $Builtin.Int64), scope 69 // user: %268
  %113 = builtin "assert_configuration"() : $Builtin.Int32, scope 69 // users: %118, %115
  %114 = integer_literal $Builtin.Int32, 0, scope 69 // users: %245, %115
  %115 = builtin "cmp_eq_Int32"(%113 : $Builtin.Int32, %114 : $Builtin.Int32) : $Builtin.Int1, scope 69 // users: %244, %116
  cond_br %115, bb11, bb8, scope 69               // id: %116

bb8:                                              // Preds: bb7
  %117 = integer_literal $Builtin.Int32, 1, scope 69 // user: %118
  %118 = builtin "cmp_eq_Int32"(%113 : $Builtin.Int32, %117 : $Builtin.Int32) : $Builtin.Int1, scope 69 // user: %119
  cond_br %118, bb10, bb9, scope 69               // id: %119

bb9:                                              // Preds: bb8
  %120 = struct_extract %101 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 69 // user: %121
  strong_release %120 : $__ContiguousArrayStorageBase, scope 69 // id: %121
  br bb15, scope 69                               // id: %122

bb10:                                             // Preds: bb8
  %123 = integer_literal $Builtin.Int64, 0, scope 69 // user: %125
  %124 = struct_extract %0 : $Int, #Int._value, scope 69 // users: %135, %125
  %125 = builtin "cmp_slt_Int64"(%124 : $Builtin.Int64, %123 : $Builtin.Int64) : $Builtin.Int1, scope 69 // user: %126
  cond_fail %125 : $Builtin.Int1, "Index out of range", scope 69 // id: %126
  %127 = struct_extract %101 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 69 // users: %133, %128
  %128 = ref_element_addr [immutable] %127 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 69 // user: %129
  %129 = struct_element_addr %128 : $*_ArrayBody, #_ArrayBody._storage, scope 69 // user: %130
  %130 = struct_element_addr %129 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 69 // user: %131
  %131 = struct_element_addr %130 : $*Int, #Int._value, scope 69 // user: %132
  %132 = load %131 : $*Builtin.Int64, scope 69    // user: %134
  strong_release %127 : $__ContiguousArrayStorageBase, scope 69 // id: %133
  %134 = builtin "assumeNonNegative_Int64"(%132 : $Builtin.Int64) : $Builtin.Int64, scope 69 // user: %135
  %135 = builtin "cmp_slt_Int64"(%124 : $Builtin.Int64, %134 : $Builtin.Int64) : $Builtin.Int1, scope 69 // user: %137
  %136 = integer_literal $Builtin.Int1, -1, scope 69 // user: %137
  %137 = builtin "xor_Int1"(%135 : $Builtin.Int1, %136 : $Builtin.Int1) : $Builtin.Int1, scope 69 // user: %138
  cond_fail %137 : $Builtin.Int1, "Index out of range", scope 69 // id: %138
  br bb15, scope 69                               // id: %139

bb11:                                             // Preds: bb7
  %140 = integer_literal $Builtin.Int64, 0, scope 69 // user: %142
  %141 = struct_extract %0 : $Int, #Int._value, scope 69 // users: %151, %142
  %142 = builtin "cmp_slt_Int64"(%141 : $Builtin.Int64, %140 : $Builtin.Int64) : $Builtin.Int1, scope 69 // user: %143
  cond_br %142, bb22, bb12, scope 69              // id: %143

bb12:                                             // Preds: bb11
  %144 = struct_extract %101 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 69 // users: %156, %145
  %145 = ref_element_addr [immutable] %144 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 69 // user: %146
  %146 = struct_element_addr %145 : $*_ArrayBody, #_ArrayBody._storage, scope 69 // user: %147
  %147 = struct_element_addr %146 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 69 // user: %148
  %148 = struct_element_addr %147 : $*Int, #Int._value, scope 69 // user: %149
  %149 = load %148 : $*Builtin.Int64, scope 69    // user: %150
  %150 = builtin "assumeNonNegative_Int64"(%149 : $Builtin.Int64) : $Builtin.Int64, scope 69 // user: %151
  %151 = builtin "cmp_slt_Int64"(%141 : $Builtin.Int64, %150 : $Builtin.Int64) : $Builtin.Int1, scope 69 // user: %153
  %152 = integer_literal $Builtin.Int1, -1, scope 69 // user: %153
  %153 = builtin "int_expect_Int1"(%151 : $Builtin.Int1, %152 : $Builtin.Int1) : $Builtin.Int1, scope 69 // user: %154
  cond_br %153, bb14, bb13, scope 69              // id: %154

bb13:                                             // Preds: bb12
  br bb23, scope 69                               // id: %155

bb14:                                             // Preds: bb12
  strong_release %144 : $__ContiguousArrayStorageBase, scope 69 // id: %156
  br bb15, scope 69                               // id: %157

bb15:                                             // Preds: bb14 bb10 bb9
  %158 = metatype $@thick (any AnyObject).Type, scope 69 // user: %160
  // function_ref _ArrayBuffer.cast<A>(toBufferOf:)
  %159 = function_ref @$ss12_ArrayBufferV4cast02toB2OfAByqd__Gqd__m_tlF : $@convention(method) <τ_0_0><τ_1_0> (@thick τ_1_0.Type, @owned _ArrayBuffer<τ_0_0>) -> @owned _ArrayBuffer<τ_1_0>, scope 69 // user: %160
  %160 = apply %159<Element, AnyObject>(%158, %1) : $@convention(method) <τ_0_0><τ_1_0> (@thick τ_1_0.Type, @owned _ArrayBuffer<τ_0_0>) -> @owned _ArrayBuffer<τ_1_0>, scope 69 // user: %161
  %161 = struct_extract %160 : $_ArrayBuffer<AnyObject>, #_ArrayBuffer._storage, scope 69 // user: %162
  %162 = struct_extract %161 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 69 // users: %173, %163
  %163 = bridge_object_to_ref %162 : $Builtin.BridgeObject to $__ContiguousArrayStorageBase, scope 69 // user: %164
  %164 = ref_tail_addr [immutable] %163 : $__ContiguousArrayStorageBase, $AnyObject, scope 69 // user: %167
  %165 = struct_extract %0 : $Int, #Int._value, scope 69 // user: %166
  %166 = builtin "truncOrBitCast_Int64_Word"(%165 : $Builtin.Int64) : $Builtin.Word, scope 69 // user: %167
  %167 = index_addr [stack_protection] %164 : $*AnyObject, %166 : $Builtin.Word, scope 69 // user: %168
  %168 = load %167 : $*AnyObject, scope 69        // users: %257, %254, %223, %222, %178, %177, %175, %172
  %169 = struct_extract %1 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 69 // user: %170
  %170 = struct_extract %169 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 69 // user: %171
  strong_retain %170 : $Builtin.BridgeObject, scope 69 // id: %171
  strong_retain %168 : $AnyObject, scope 69       // id: %172
  strong_release %162 : $Builtin.BridgeObject, scope 69 // id: %173
  %174 = alloc_stack $AnyObject, scope 69         // users: %256, %181, %179, %175
  store %168 to %174 : $*AnyObject, scope 69      // id: %175
  %176 = alloc_stack $Element, scope 69           // users: %255, %253, %180, %179
  strong_retain %168 : $AnyObject, scope 69       // id: %177
  strong_retain %168 : $AnyObject, scope 69       // id: %178
  checked_cast_addr_br take_always AnyObject in %174 : $*AnyObject to Element in %176 : $*Element, bb20, bb16, scope 69 // id: %179

bb16:                                             // Preds: bb15
  dealloc_stack %176 : $*Element, scope 69        // id: %180
  dealloc_stack %174 : $*AnyObject, scope 69      // id: %181
  %182 = string_literal utf8 "Fatal error", scope 69 // user: %184
  %183 = integer_literal $Builtin.Word, 11, scope 69 // users: %216, %185
  %184 = builtin "ptrtoint_Word"(%182 : $Builtin.RawPointer) : $Builtin.Word, scope 69 // user: %185
  %185 = struct $StaticString (%184 : $Builtin.Word, %183 : $Builtin.Word, %105 : $Builtin.Int8), scope 69 // user: %251
  %186 = alloc_stack $String, scope 69            // users: %241, %239, %227, %217, %210, %199, %192
  %187 = integer_literal $Builtin.Int64, 82, scope 69 // user: %188
  %188 = struct $Int (%187 : $Builtin.Int64), scope 69 // user: %191
  %189 = metatype $@thin String.Type, scope 69    // users: %243, %234, %216, %197, %191
  // function_ref static String._createEmpty(withInitialCapacity:)
  %190 = function_ref @$sSS12_createEmpty19withInitialCapacitySSSi_tFZ : $@convention(method) (Int, @thin String.Type) -> @owned String, scope 69 // user: %191
  %191 = apply %190(%188, %189) : $@convention(method) (Int, @thin String.Type) -> @owned String, scope 69 // user: %192
  store %191 to %186 : $*String, scope 69         // id: %192
  %193 = string_literal utf8 "Down-casted Array element failed to match the target type\nExpected ", scope 69 // user: %197
  %194 = integer_literal $Builtin.Word, 67, scope 69 // user: %197
  %195 = integer_literal $Builtin.Int1, -1, scope 69 // users: %234, %216, %197
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %196 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 69 // users: %234, %216, %197
  %197 = apply %196(%193, %194, %195, %189) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 69 // users: %200, %199
  // function_ref String.append(_:)
  %198 = function_ref @$sSS6appendyySSF : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69 // users: %227, %217, %210, %199
  %199 = apply %198(%197, %186) : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69
  %200 = struct_extract %197 : $String, #String._guts, scope 69 // user: %201
  %201 = struct_extract %200 : $_StringGuts, #_StringGuts._object, scope 69 // user: %202
  %202 = struct_extract %201 : $_StringObject, #_StringObject._object, scope 69 // user: %203
  strong_release %202 : $Builtin.BridgeObject, scope 69 // id: %203
  %204 = metatype $@thick Element.Type, scope 69  // user: %205
  %205 = init_existential_metatype %204 : $@thick Element.Type, $@thick any Any.Type, scope 69 // user: %209
  %206 = integer_literal $Builtin.Int1, 0, scope 69 // user: %207
  %207 = struct $Bool (%206 : $Builtin.Int1), scope 69 // users: %226, %209
  // function_ref _typeName(_:qualified:)
  %208 = function_ref @$ss9_typeName_9qualifiedSSypXp_SbtF : $@convention(thin) (@thick any Any.Type, Bool) -> @owned String, scope 69 // users: %226, %209
  %209 = apply %208(%205, %207) : $@convention(thin) (@thick any Any.Type, Bool) -> @owned String, scope 69 // users: %211, %210
  %210 = apply %198(%209, %186) : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69
  %211 = struct_extract %209 : $String, #String._guts, scope 69 // user: %212
  %212 = struct_extract %211 : $_StringGuts, #_StringGuts._object, scope 69 // user: %213
  %213 = struct_extract %212 : $_StringObject, #_StringObject._object, scope 69 // user: %214
  strong_release %213 : $Builtin.BridgeObject, scope 69 // id: %214
  %215 = string_literal utf8 " but found ", scope 69 // user: %216
  %216 = apply %196(%215, %183, %195, %189) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 69 // users: %218, %217
  %217 = apply %198(%216, %186) : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69
  %218 = struct_extract %216 : $String, #String._guts, scope 69 // user: %219
  %219 = struct_extract %218 : $_StringGuts, #_StringGuts._object, scope 69 // user: %220
  %220 = struct_extract %219 : $_StringObject, #_StringObject._object, scope 69 // user: %221
  strong_release %220 : $Builtin.BridgeObject, scope 69 // id: %221
  %222 = existential_metatype $@thick any AnyObject.Type, %168 : $AnyObject, scope 69 // user: %224
  strong_release %168 : $AnyObject, scope 69      // id: %223
  %224 = open_existential_metatype %222 : $@thick any AnyObject.Type to $@thick (@opened("2DF67ED4-8BDA-11EE-BBC3-86803A041461", AnyObject) Self).Type, scope 69 // user: %225
  %225 = init_existential_metatype %224 : $@thick (@opened("2DF67ED4-8BDA-11EE-BBC3-86803A041461", AnyObject) Self).Type, $@thick any Any.Type, scope 69 // user: %226
  %226 = apply %208(%225, %207) : $@convention(thin) (@thick any Any.Type, Bool) -> @owned String, scope 69 // users: %228, %227
  %227 = apply %198(%226, %186) : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69
  %228 = struct_extract %226 : $String, #String._guts, scope 69 // user: %229
  %229 = struct_extract %228 : $_StringGuts, #_StringGuts._object, scope 69 // user: %230
  %230 = struct_extract %229 : $_StringObject, #_StringObject._object, scope 69 // user: %231
  strong_release %230 : $Builtin.BridgeObject, scope 69 // id: %231
  %232 = string_literal utf8 "", scope 69         // user: %234
  %233 = integer_literal $Builtin.Word, 0, scope 69 // user: %234
  %234 = apply %196(%232, %233, %195, %189) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 69 // user: %235
  %235 = struct_extract %234 : $String, #String._guts, scope 69 // user: %236
  %236 = struct_extract %235 : $_StringGuts, #_StringGuts._object, scope 69 // user: %237
  %237 = struct_extract %236 : $_StringObject, #_StringObject._object, scope 69 // user: %238
  strong_release %237 : $Builtin.BridgeObject, scope 69 // id: %238
  %239 = load %186 : $*String, scope 69           // user: %240
  %240 = struct $DefaultStringInterpolation (%239 : $String), scope 69 // user: %243
  dealloc_stack %186 : $*String, scope 69         // id: %241
  // function_ref String.init(stringInterpolation:)
  %242 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String, scope 69 // user: %243
  %243 = apply %242(%240, %189) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String, scope 69 // user: %251
  cond_br %115, bb18, bb17, scope 69              // id: %244

bb17:                                             // Preds: bb16
  br bb19(%114 : $Builtin.Int32), scope 69        // id: %245

bb18:                                             // Preds: bb16
  %246 = integer_literal $Builtin.Int32, 1, scope 69 // user: %247
  br bb19(%246 : $Builtin.Int32), scope 69        // id: %247

// %248                                           // user: %249
bb19(%248 : $Builtin.Int32):                      // Preds: bb18 bb17
  %249 = struct $UInt32 (%248 : $Builtin.Int32), scope 69 // user: %251
  // function_ref _assertionFailure(_:_:flags:)
  %250 = function_ref @$ss17_assertionFailure__5flagss5NeverOs12StaticStringV_SSs6UInt32VtF : $@convention(thin) (StaticString, @guaranteed String, UInt32) -> Never, scope 69 // user: %251
  %251 = apply %250(%185, %243, %249) : $@convention(thin) (StaticString, @guaranteed String, UInt32) -> Never, scope 69
  unreachable , scope 69                          // id: %252

bb20:                                             // Preds: bb15
  destroy_addr %176 : $*Element, scope 69         // id: %253
  strong_release %168 : $AnyObject, scope 69      // id: %254
  dealloc_stack %176 : $*Element, scope 69        // id: %255
  dealloc_stack %174 : $*AnyObject, scope 69      // id: %256
  br bb21(%168 : $AnyObject), scope 69            // id: %257

// %258                                           // user: %259
bb21(%258 : $AnyObject):                          // Preds: bb20 bb6
  return %258 : $AnyObject, scope 69              // id: %259

bb22:                                             // Preds: bb11
  br bb23, scope 69                               // id: %260

bb23:                                             // Preds: bb22 bb13
  %261 = string_literal utf8 "Fatal error", scope 69 // user: %263
  %262 = integer_literal $Builtin.Word, 11, scope 69 // user: %264
  %263 = builtin "ptrtoint_Word"(%261 : $Builtin.RawPointer) : $Builtin.Word, scope 69 // user: %264
  %264 = struct $StaticString (%263 : $Builtin.Word, %262 : $Builtin.Word, %105 : $Builtin.Int8), scope 69 // user: %268
  %265 = integer_literal $Builtin.Int32, 1, scope 69 // user: %266
  %266 = struct $UInt32 (%265 : $Builtin.Int32), scope 69 // user: %268
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %267 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 69 // user: %268
  %268 = apply %267(%264, %106, %110, %112, %266) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 69
  unreachable , scope 69                          // id: %269
} // end sil function '$ss12_ArrayBufferV19_getElementSlowPathyyXlSiF'

sil_scope 70 {  parent @$ss15ContiguousArrayV12_endMutationyyF : $@convention(method) <τ_0_0> (@inout ContiguousArray<τ_0_0>) -> () }

// ContiguousArray._endMutation(), scope 70
sil shared [serialized] [_semantics "array.end_mutation"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss15ContiguousArrayV12_endMutationyyF : $@convention(method) <Element> (@inout ContiguousArray<Element>) -> () {
[%0: escape v** -> %0.s0.s0.v**, escape v**.c*.v** -> %0.s0.s0.v**.c*.v**, read s0.s0.v**, write v**]
[global: ]
// %0                                             // users: %7, %1
bb0(%0 : $*ContiguousArray<Element>):
  %1 = struct_element_addr %0 : $*ContiguousArray<Element>, #ContiguousArray._buffer, scope 70 // user: %2
  %2 = struct_element_addr %1 : $*_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 70 // user: %3
  %3 = load %2 : $*__ContiguousArrayStorageBase, scope 70 // user: %4
  %4 = end_cow_mutation %3 : $__ContiguousArrayStorageBase, scope 70 // user: %5
  %5 = struct $_ContiguousArrayBuffer<Element> (%4 : $__ContiguousArrayStorageBase), scope 70 // user: %6
  %6 = struct $ContiguousArray<Element> (%5 : $_ContiguousArrayBuffer<Element>), scope 70 // user: %7
  store %6 to %0 : $*ContiguousArray<Element>, scope 70 // id: %7
  %8 = tuple (), scope 70                         // user: %9
  return %8 : $(), scope 70                       // id: %9
} // end sil function '$ss15ContiguousArrayV12_endMutationyyF'

sil_scope 71 {  parent @$ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout ContiguousArray<τ_0_0>) -> () }

// ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:), scope 71
sil shared [serialized] [noinline] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF : $@convention(method) <Element> (Bool, Int, Bool, @inout ContiguousArray<Element>) -> () {
[%3: noescape v**, read s0.v**, write v**, copy v**, destroy v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // user: %7
// %1                                             // user: %7
// %2                                             // user: %7
// %3                                             // users: %9, %4
bb0(%0 : $Bool, %1 : $Int, %2 : $Bool, %3 : $*ContiguousArray<Element>):
  %4 = struct_element_addr %3 : $*ContiguousArray<Element>, #ContiguousArray._buffer, scope 71 // user: %5
  %5 = load %4 : $*_ContiguousArrayBuffer<Element>, scope 71 // user: %7
  // function_ref _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)
  %6 = function_ref @$ss22_ContiguousArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @owned _ContiguousArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 71 // user: %7
  %7 = apply %6<Element>(%0, %1, %2, %5) : $@convention(method) <τ_0_0> (Bool, Int, Bool, @owned _ContiguousArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 71 // user: %8
  %8 = struct $ContiguousArray<Element> (%7 : $_ContiguousArrayBuffer<Element>), scope 71 // user: %9
  store %8 to %3 : $*ContiguousArray<Element>, scope 71 // id: %9
  %10 = tuple (), scope 71                        // user: %11
  return %10 : $(), scope 71                      // id: %11
} // end sil function '$ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF'

sil_scope 72 {  parent @$ss15ContiguousArrayV034_makeUniqueAndReserveCapacityIfNotD0yyF : $@convention(method) <τ_0_0> (@inout ContiguousArray<τ_0_0>) -> () }

// ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique(), scope 72
sil public_external [serialized] [_semantics "array.make_mutable"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss15ContiguousArrayV034_makeUniqueAndReserveCapacityIfNotD0yyF : $@convention(method) <Element> (@inout ContiguousArray<Element>) -> () {
[%0: escape v** -> %0.s0.s0.v**]
// %0                                             // users: %20, %10, %1
bb0(%0 : $*ContiguousArray<Element>):
  %1 = struct_element_addr %0 : $*ContiguousArray<Element>, #ContiguousArray._buffer, scope 72 // user: %3
  // function_ref _ContiguousArrayBuffer.beginCOWMutation()
  %2 = function_ref @$ss22_ContiguousArrayBufferV16beginCOWMutationSbyF : $@convention(method) <τ_0_0> (@inout _ContiguousArrayBuffer<τ_0_0>) -> Bool, scope 72 // user: %3
  %3 = apply %2<Element>(%1) : $@convention(method) <τ_0_0> (@inout _ContiguousArrayBuffer<τ_0_0>) -> Bool, scope 72 // user: %4
  %4 = struct_extract %3 : $Bool, #Bool._value, scope 72 // user: %6
  %5 = integer_literal $Builtin.Int1, -1, scope 72 // users: %18, %6
  %6 = builtin "int_expect_Int1"(%4 : $Builtin.Int1, %5 : $Builtin.Int1) : $Builtin.Int1, scope 72 // user: %7
  cond_br %6, bb2, bb1, scope 72                  // id: %7

bb1:                                              // Preds: bb0
  %8 = integer_literal $Builtin.Int1, 0, scope 72 // users: %15, %9
  %9 = struct $Bool (%8 : $Builtin.Int1), scope 72 // user: %20
  %10 = load %0 : $*ContiguousArray<Element>, scope 72 // user: %12
  // function_ref ContiguousArray.count.getter
  %11 = function_ref @$ss15ContiguousArrayV5countSivg : $@convention(method) <τ_0_0> (@guaranteed ContiguousArray<τ_0_0>) -> Int, scope 72 // user: %12
  %12 = apply %11<Element>(%10) : $@convention(method) <τ_0_0> (@guaranteed ContiguousArray<τ_0_0>) -> Int, scope 72 // user: %14
  %13 = integer_literal $Builtin.Int64, 1, scope 72 // user: %15
  %14 = struct_extract %12 : $Int, #Int._value, scope 72 // user: %15
  %15 = builtin "sadd_with_overflow_Int64"(%14 : $Builtin.Int64, %13 : $Builtin.Int64, %8 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 72 // user: %16
  %16 = tuple_extract %15 : $(Builtin.Int64, Builtin.Int1), 0, scope 72 // user: %17
  %17 = struct $Int (%16 : $Builtin.Int64), scope 72 // user: %20
  %18 = struct $Bool (%5 : $Builtin.Int1), scope 72 // user: %20
  // function_ref ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)
  %19 = function_ref @$ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout ContiguousArray<τ_0_0>) -> (), scope 72 // user: %20
  %20 = apply %19<Element>(%9, %17, %18, %0) : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout ContiguousArray<τ_0_0>) -> (), scope 72
  br bb3, scope 72                                // id: %21

bb2:                                              // Preds: bb0
  br bb3, scope 72                                // id: %22

bb3:                                              // Preds: bb2 bb1
  %23 = tuple (), scope 72                        // user: %24
  return %23 : $(), scope 72                      // id: %24
} // end sil function '$ss15ContiguousArrayV034_makeUniqueAndReserveCapacityIfNotD0yyF'

sil_scope 73 {  parent @$ss15ContiguousArrayV37_appendElementAssumeUniqueAndCapacity_03newD0ySi_xntF : $@convention(method) <τ_0_0> (Int, @in τ_0_0, @inout ContiguousArray<τ_0_0>) -> () }

// ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:), scope 73
sil public_external [serialized] [_semantics "array.mutate_unknown"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss15ContiguousArrayV37_appendElementAssumeUniqueAndCapacity_03newD0ySi_xntF : $@convention(method) <Element> (Int, @in Element, @inout ContiguousArray<Element>) -> () {
[%2: noescape v**, noescape v**.c*.v**]
// %0                                             // user: %7
// %1                                             // users: %27, %26
// %2                                             // user: %3
bb0(%0 : $Int, %1 : $*Element, %2 : $*ContiguousArray<Element>):
  %3 = struct_element_addr %2 : $*ContiguousArray<Element>, #ContiguousArray._buffer, scope 73 // user: %4
  %4 = struct_element_addr %3 : $*_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 73 // user: %5
  %5 = load %4 : $*__ContiguousArrayStorageBase, scope 73 // users: %16, %12
  %6 = integer_literal $Builtin.Int64, 1, scope 73 // user: %9
  %7 = struct_extract %0 : $Int, #Int._value, scope 73 // users: %20, %9
  %8 = integer_literal $Builtin.Int1, 0, scope 73 // user: %9
  %9 = builtin "sadd_with_overflow_Int64"(%7 : $Builtin.Int64, %6 : $Builtin.Int64, %8 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 73 // user: %10
  %10 = tuple_extract %9 : $(Builtin.Int64, Builtin.Int1), 0, scope 73 // user: %11
  %11 = struct $Int (%10 : $Builtin.Int64), scope 73 // user: %15
  %12 = ref_element_addr %5 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 73 // user: %13
  %13 = struct_element_addr %12 : $*_ArrayBody, #_ArrayBody._storage, scope 73 // user: %14
  %14 = struct_element_addr %13 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 73 // user: %15
  store %11 to %14 : $*Int, scope 73              // id: %15
  %16 = struct $_ContiguousArrayBuffer<Element> (%5 : $__ContiguousArrayStorageBase), scope 73 // user: %18
  // function_ref _ContiguousArrayBuffer.mutableFirstElementAddress.getter
  %17 = function_ref @$ss22_ContiguousArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 73 // user: %18
  %18 = apply %17<Element>(%16) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 73 // user: %19
  %19 = struct_extract %18 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 73 // user: %21
  %20 = builtin "truncOrBitCast_Int64_Word"(%7 : $Builtin.Int64) : $Builtin.Word, scope 73 // user: %22
  %21 = pointer_to_address %19 : $Builtin.RawPointer to [strict] $*Element, scope 73 // user: %22
  %22 = index_addr [stack_protection] %21 : $*Element, %20 : $Builtin.Word, scope 73 // user: %23
  %23 = address_to_pointer [stack_protection] %22 : $*Element to $Builtin.RawPointer, scope 73 // user: %24
  %24 = struct $UnsafeMutablePointer<Element> (%23 : $Builtin.RawPointer), scope 73 // user: %26
  // function_ref UnsafeMutablePointer.initialize(to:)
  %25 = function_ref @$sSp10initialize2toyx_tF : $@convention(method) <τ_0_0> (@in_guaranteed τ_0_0, UnsafeMutablePointer<τ_0_0>) -> (), scope 73 // user: %26
  %26 = apply %25<Element>(%1, %24) : $@convention(method) <τ_0_0> (@in_guaranteed τ_0_0, UnsafeMutablePointer<τ_0_0>) -> (), scope 73
  destroy_addr %1 : $*Element, scope 73           // id: %27
  %28 = tuple (), scope 73                        // user: %29
  return %28 : $(), scope 73                      // id: %29
} // end sil function '$ss15ContiguousArrayV37_appendElementAssumeUniqueAndCapacity_03newD0ySi_xntF'

sil_scope 74 {  parent @$ss15ContiguousArrayV20_reserveCapacityImpl07minimumD013growForAppendySi_SbtF : $@convention(method) <τ_0_0> (Int, Bool, @inout ContiguousArray<τ_0_0>) -> () }

// ContiguousArray._reserveCapacityImpl(minimumCapacity:growForAppend:), scope 74
sil shared [serialized] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss15ContiguousArrayV20_reserveCapacityImpl07minimumD013growForAppendySi_SbtF : $@convention(method) <Element> (Int, Bool, @inout ContiguousArray<Element>) -> () {
[%2: escape v** -> %2.s0.s0.v**, read s0.v**, write v**, copy v**, destroy v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %33, %28, %18
// %1                                             // user: %36
// %2                                             // users: %36, %3
bb0(%0 : $Int, %1 : $Bool, %2 : $*ContiguousArray<Element>):
  %3 = struct_element_addr %2 : $*ContiguousArray<Element>, #ContiguousArray._buffer, scope 74 // users: %25, %9, %5
  // function_ref _ContiguousArrayBuffer.beginCOWMutation()
  %4 = function_ref @$ss22_ContiguousArrayBufferV16beginCOWMutationSbyF : $@convention(method) <τ_0_0> (@inout _ContiguousArrayBuffer<τ_0_0>) -> Bool, scope 74 // user: %5
  %5 = apply %4<Element>(%3) : $@convention(method) <τ_0_0> (@inout _ContiguousArrayBuffer<τ_0_0>) -> Bool, scope 74 // users: %36, %6
  %6 = struct_extract %5 : $Bool, #Bool._value, scope 74 // user: %7
  cond_br %6, bb2, bb1, scope 74                  // id: %7

bb1:                                              // Preds: bb0
  br bb5, scope 74                                // id: %8

bb2:                                              // Preds: bb0
  %9 = struct_element_addr %3 : $*_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 74 // user: %10
  %10 = load %9 : $*__ContiguousArrayStorageBase, scope 74 // user: %11
  %11 = ref_element_addr %10 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 74 // user: %12
  %12 = struct_element_addr %11 : $*_ArrayBody, #_ArrayBody._storage, scope 74 // user: %13
  %13 = struct_element_addr %12 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage._capacityAndFlags, scope 74 // user: %14
  %14 = struct_element_addr %13 : $*UInt, #UInt._value, scope 74 // user: %15
  %15 = load %14 : $*Builtin.Int64, scope 74      // user: %17
  %16 = integer_literal $Builtin.Int64, 1, scope 74 // user: %17
  %17 = builtin "lshr_Int64"(%15 : $Builtin.Int64, %16 : $Builtin.Int64) : $Builtin.Int64, scope 74 // user: %19
  %18 = struct_extract %0 : $Int, #Int._value, scope 74 // user: %19
  %19 = builtin "cmp_slt_Int64"(%17 : $Builtin.Int64, %18 : $Builtin.Int64) : $Builtin.Int1, scope 74 // user: %21
  %20 = integer_literal $Builtin.Int1, 0, scope 74 // user: %21
  %21 = builtin "int_expect_Int1"(%19 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 74 // user: %22
  cond_br %21, bb4, bb3, scope 74                 // id: %22

bb3:                                              // Preds: bb2
  br bb9, scope 74                                // id: %23

bb4:                                              // Preds: bb2
  br bb5, scope 74                                // id: %24

bb5:                                              // Preds: bb4 bb1
  %25 = load %3 : $*_ContiguousArrayBuffer<Element>, scope 74 // user: %27
  // function_ref _ContiguousArrayBuffer.count.getter
  %26 = function_ref @$ss22_ContiguousArrayBufferV5countSivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 74 // user: %27
  %27 = apply %26<Element>(%25) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 74 // users: %32, %29
  %28 = struct_extract %0 : $Int, #Int._value, scope 74 // user: %30
  %29 = struct_extract %27 : $Int, #Int._value, scope 74 // user: %30
  %30 = builtin "cmp_slt_Int64"(%29 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 74 // user: %31
  cond_br %30, bb7, bb6, scope 74                 // id: %31

bb6:                                              // Preds: bb5
  br bb8(%27 : $Int), scope 74                    // id: %32

bb7:                                              // Preds: bb5
  br bb8(%0 : $Int), scope 74                     // id: %33

// %34                                            // user: %36
bb8(%34 : $Int):                                  // Preds: bb7 bb6
  // function_ref ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)
  %35 = function_ref @$ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout ContiguousArray<τ_0_0>) -> (), scope 74 // user: %36
  %36 = apply %35<Element>(%5, %34, %1, %2) : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout ContiguousArray<τ_0_0>) -> (), scope 74
  br bb9, scope 74                                // id: %37

bb9:                                              // Preds: bb8 bb3
  %38 = tuple (), scope 74                        // user: %39
  return %38 : $(), scope 74                      // id: %39
} // end sil function '$ss15ContiguousArrayV20_reserveCapacityImpl07minimumD013growForAppendySi_SbtF'

sil_scope 75 {  parent @$ss15ContiguousArrayV36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tF : $@convention(method) <τ_0_0> (Int, @inout ContiguousArray<τ_0_0>) -> () }

// ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:), scope 75
sil public_external [serialized] [_semantics "array.mutate_unknown"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss15ContiguousArrayV36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tF : $@convention(method) <Element> (Int, @inout ContiguousArray<Element>) -> () {
[%1: noescape v**]
// %0                                             // user: %12
// %1                                             // users: %27, %2
bb0(%0 : $Int, %1 : $*ContiguousArray<Element>):
  %2 = struct_element_addr %1 : $*ContiguousArray<Element>, #ContiguousArray._buffer, scope 75 // user: %3
  %3 = struct_element_addr %2 : $*_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 75 // user: %4
  %4 = load %3 : $*__ContiguousArrayStorageBase, scope 75 // user: %5
  %5 = ref_element_addr %4 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 75 // user: %6
  %6 = struct_element_addr %5 : $*_ArrayBody, #_ArrayBody._storage, scope 75 // user: %7
  %7 = struct_element_addr %6 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage._capacityAndFlags, scope 75 // user: %8
  %8 = struct_element_addr %7 : $*UInt, #UInt._value, scope 75 // user: %9
  %9 = load %8 : $*Builtin.Int64, scope 75        // user: %11
  %10 = integer_literal $Builtin.Int64, 1, scope 75 // users: %14, %11
  %11 = builtin "lshr_Int64"(%9 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int64, scope 75 // users: %21, %16
  %12 = struct_extract %0 : $Int, #Int._value, scope 75 // user: %14
  %13 = integer_literal $Builtin.Int1, 0, scope 75 // users: %17, %14
  %14 = builtin "sadd_with_overflow_Int64"(%12 : $Builtin.Int64, %10 : $Builtin.Int64, %13 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 75 // user: %15
  %15 = tuple_extract %14 : $(Builtin.Int64, Builtin.Int1), 0, scope 75 // users: %23, %16
  %16 = builtin "cmp_slt_Int64"(%11 : $Builtin.Int64, %15 : $Builtin.Int64) : $Builtin.Int1, scope 75 // user: %17
  %17 = builtin "int_expect_Int1"(%16 : $Builtin.Int1, %13 : $Builtin.Int1) : $Builtin.Int1, scope 75 // user: %18
  cond_br %17, bb2, bb1, scope 75                 // id: %18

bb1:                                              // Preds: bb0
  br bb3, scope 75                                // id: %19

bb2:                                              // Preds: bb0
  %20 = integer_literal $Builtin.Int64, 0, scope 75 // user: %21
  %21 = builtin "cmp_slt_Int64"(%20 : $Builtin.Int64, %11 : $Builtin.Int64) : $Builtin.Int1, scope 75 // user: %22
  %22 = struct $Bool (%21 : $Builtin.Int1), scope 75 // user: %27
  %23 = struct $Int (%15 : $Builtin.Int64), scope 75 // user: %27
  %24 = integer_literal $Builtin.Int1, -1, scope 75 // user: %25
  %25 = struct $Bool (%24 : $Builtin.Int1), scope 75 // user: %27
  // function_ref ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)
  %26 = function_ref @$ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout ContiguousArray<τ_0_0>) -> (), scope 75 // user: %27
  %27 = apply %26<Element>(%22, %23, %25, %1) : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout ContiguousArray<τ_0_0>) -> (), scope 75
  br bb3, scope 75                                // id: %28

bb3:                                              // Preds: bb2 bb1
  %29 = tuple (), scope 75                        // user: %30
  return %29 : $(), scope 75                      // id: %30
} // end sil function '$ss15ContiguousArrayV36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tF'

sil_scope 76 {  parent @$ss15ContiguousArrayV15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout ContiguousArray<τ_0_0>) -> () }

// ContiguousArray.reserveCapacity(_:), scope 76
sil public_external [serialized] [_semantics "array.mutate_unknown"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss15ContiguousArrayV15reserveCapacityyySiF : $@convention(method) <Element> (Int, @inout ContiguousArray<Element>) -> () {
[%1: escape v** -> %1.s0.s0.v**]
// %0                                             // user: %5
// %1                                             // users: %7, %5
bb0(%0 : $Int, %1 : $*ContiguousArray<Element>):
  %2 = integer_literal $Builtin.Int1, 0, scope 76 // user: %3
  %3 = struct $Bool (%2 : $Builtin.Int1), scope 76 // user: %5
  // function_ref ContiguousArray._reserveCapacityImpl(minimumCapacity:growForAppend:)
  %4 = function_ref @$ss15ContiguousArrayV20_reserveCapacityImpl07minimumD013growForAppendySi_SbtF : $@convention(method) <τ_0_0> (Int, Bool, @inout ContiguousArray<τ_0_0>) -> (), scope 76 // user: %5
  %5 = apply %4<Element>(%0, %3, %1) : $@convention(method) <τ_0_0> (Int, Bool, @inout ContiguousArray<τ_0_0>) -> (), scope 76
  // function_ref ContiguousArray._endMutation()
  %6 = function_ref @$ss15ContiguousArrayV12_endMutationyyF : $@convention(method) <τ_0_0> (@inout ContiguousArray<τ_0_0>) -> (), scope 76 // user: %7
  %7 = apply %6<Element>(%1) : $@convention(method) <τ_0_0> (@inout ContiguousArray<τ_0_0>) -> (), scope 76
  %8 = tuple (), scope 76                         // user: %9
  return %8 : $(), scope 76                       // id: %9
} // end sil function '$ss15ContiguousArrayV15reserveCapacityyySiF'

sil_scope 77 {  parent @$ss22_ContiguousArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @owned _ContiguousArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0> }

// _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:), scope 77
sil shared [serialized] [noinline] [_semantics "optimize.sil.specialize.owned2guarantee.never"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss22_ContiguousArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF : $@convention(method) <Element> (Bool, Int, Bool, @owned _ContiguousArrayBuffer<Element>) -> @owned _ContiguousArrayBuffer<Element> {
[%3: noescape v**, read v**.c*.v**, write v**.c*.v**, copy **, destroy v**.c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // user: %31
// %1                                             // users: %24, %10, %8
// %2                                             // user: %6
// %3                                             // users: %93, %87, %82, %68, %66, %27, %5
bb0(%0 : $Bool, %1 : $Int, %2 : $Bool, %3 : $_ContiguousArrayBuffer<Element>):
  // function_ref _ContiguousArrayBuffer.capacity.getter
  %4 = function_ref @$ss22_ContiguousArrayBufferV8capacitySivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 77 // user: %5
  %5 = apply %4<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 77 // users: %13, %9
  %6 = struct_extract %2 : $Bool, #Bool._value, scope 77 // user: %7
  cond_br %6, bb2, bb1, scope 77                  // id: %7

bb1:                                              // Preds: bb0
  br bb7(%1 : $Int), scope 77                     // id: %8

bb2:                                              // Preds: bb0
  %9 = struct_extract %5 : $Int, #Int._value, scope 77 // users: %16, %11
  %10 = struct_extract %1 : $Int, #Int._value, scope 77 // users: %21, %11
  %11 = builtin "cmp_slt_Int64"(%9 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 77 // user: %12
  cond_br %11, bb4, bb3, scope 77                 // id: %12

bb3:                                              // Preds: bb2
  br bb7(%5 : $Int), scope 77                     // id: %13

bb4:                                              // Preds: bb2
  %14 = integer_literal $Builtin.Int64, 2, scope 77 // user: %16
  %15 = integer_literal $Builtin.Int1, -1, scope 77 // user: %16
  %16 = builtin "smul_with_overflow_Int64"(%9 : $Builtin.Int64, %14 : $Builtin.Int64, %15 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 77 // users: %18, %17
  %17 = tuple_extract %16 : $(Builtin.Int64, Builtin.Int1), 0, scope 77 // users: %21, %20
  %18 = tuple_extract %16 : $(Builtin.Int64, Builtin.Int1), 1, scope 77 // user: %19
  cond_fail %18 : $Builtin.Int1, "arithmetic overflow", scope 77 // id: %19
  %20 = struct $Int (%17 : $Builtin.Int64), scope 77 // user: %23
  %21 = builtin "cmp_slt_Int64"(%17 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 77 // user: %22
  cond_br %21, bb6, bb5, scope 77                 // id: %22

bb5:                                              // Preds: bb4
  br bb7(%20 : $Int), scope 77                    // id: %23

bb6:                                              // Preds: bb4
  br bb7(%1 : $Int), scope 77                     // id: %24

// %25                                            // user: %30
bb7(%25 : $Int):                                  // Preds: bb6 bb5 bb3 bb1
  // function_ref _ContiguousArrayBuffer.count.getter
  %26 = function_ref @$ss22_ContiguousArrayBufferV5countSivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 77 // user: %27
  %27 = apply %26<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 77 // users: %84, %62, %34, %30
  %28 = metatype $@thin _ContiguousArrayBuffer<Element>.Type, scope 77 // user: %30
  // function_ref _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)
  %29 = function_ref @$ss22_ContiguousArrayBufferV19_uninitializedCount15minimumCapacityAByxGSi_SitcfC : $@convention(method) <τ_0_0> (Int, Int, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 77 // user: %30
  %30 = apply %29<Element>(%27, %25, %28) : $@convention(method) <τ_0_0> (Int, Int, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 77 // users: %95, %80, %64
  %31 = struct_extract %0 : $Bool, #Bool._value, scope 77 // user: %32
  cond_br %31, bb16, bb8, scope 77                // id: %32

bb8:                                              // Preds: bb7
  %33 = integer_literal $Builtin.Int64, 0, scope 77 // users: %61, %56, %53
  %34 = struct_extract %27 : $Int, #Int._value, scope 77 // users: %56, %53
  %35 = string_literal utf8 "Range requires lowerBound <= upperBound", scope 77 // user: %37
  %36 = integer_literal $Builtin.Word, 39, scope 77 // users: %42, %39
  %37 = builtin "ptrtoint_Word"(%35 : $Builtin.RawPointer) : $Builtin.Word, scope 77 // user: %39
  %38 = integer_literal $Builtin.Int8, 2, scope 77 // users: %73, %42, %39
  %39 = struct $StaticString (%37 : $Builtin.Word, %36 : $Builtin.Word, %38 : $Builtin.Int8), scope 77 // user: %77
  %40 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface", scope 77 // user: %41
  %41 = builtin "ptrtoint_Word"(%40 : $Builtin.RawPointer) : $Builtin.Word, scope 77 // user: %42
  %42 = struct $StaticString (%41 : $Builtin.Word, %36 : $Builtin.Word, %38 : $Builtin.Int8), scope 77 // user: %77
  %43 = integer_literal $Builtin.Int64, 16142, scope 77 // user: %44
  %44 = struct $UInt (%43 : $Builtin.Int64), scope 77 // user: %77
  %45 = builtin "assert_configuration"() : $Builtin.Int32, scope 77 // users: %50, %47
  %46 = integer_literal $Builtin.Int32, 0, scope 77 // user: %47
  %47 = builtin "cmp_eq_Int32"(%45 : $Builtin.Int32, %46 : $Builtin.Int32) : $Builtin.Int1, scope 77 // user: %48
  cond_br %47, bb12, bb9, scope 77                // id: %48

bb9:                                              // Preds: bb8
  %49 = integer_literal $Builtin.Int32, 1, scope 77 // user: %50
  %50 = builtin "cmp_eq_Int32"(%45 : $Builtin.Int32, %49 : $Builtin.Int32) : $Builtin.Int1, scope 77 // user: %51
  cond_br %50, bb11, bb10, scope 77               // id: %51

bb10:                                             // Preds: bb9
  br bb14, scope 77                               // id: %52

bb11:                                             // Preds: bb9
  %53 = builtin "cmp_slt_Int64"(%34 : $Builtin.Int64, %33 : $Builtin.Int64) : $Builtin.Int1, scope 77 // user: %54
  cond_fail %53 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 77 // id: %54
  br bb14, scope 77                               // id: %55

bb12:                                             // Preds: bb8
  %56 = builtin "cmp_slt_Int64"(%34 : $Builtin.Int64, %33 : $Builtin.Int64) : $Builtin.Int1, scope 77 // user: %58
  %57 = integer_literal $Builtin.Int1, 0, scope 77 // user: %58
  %58 = builtin "int_expect_Int1"(%56 : $Builtin.Int1, %57 : $Builtin.Int1) : $Builtin.Int1, scope 77 // user: %59
  cond_br %58, bb15, bb13, scope 77               // id: %59

bb13:                                             // Preds: bb12
  br bb14, scope 77                               // id: %60

bb14:                                             // Preds: bb13 bb11 bb10
  %61 = struct $Int (%33 : $Builtin.Int64), scope 77 // user: %62
  %62 = struct $Range<Int> (%61 : $Int, %27 : $Int), scope 77 // user: %68
  // function_ref _ContiguousArrayBuffer.mutableFirstElementAddress.getter
  %63 = function_ref @$ss22_ContiguousArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 77 // user: %64
  %64 = apply %63<Element>(%30) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 77 // user: %68
  // function_ref _ContiguousArrayBuffer._copyContents(subRange:initializing:)
  %65 = function_ref @$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF : $@convention(method) <τ_0_0> (Range<Int>, UnsafeMutablePointer<τ_0_0>, @owned _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 77 // user: %68
  %66 = struct_extract %3 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 77 // user: %67
  strong_retain %66 : $__ContiguousArrayStorageBase, scope 77 // id: %67
  %68 = apply %65<Element>(%62, %64, %3) : $@convention(method) <τ_0_0> (Range<Int>, UnsafeMutablePointer<τ_0_0>, @owned _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 77
  br bb17, scope 77                               // id: %69

bb15:                                             // Preds: bb12
  %70 = string_literal utf8 "Fatal error", scope 77 // user: %72
  %71 = integer_literal $Builtin.Word, 11, scope 77 // user: %73
  %72 = builtin "ptrtoint_Word"(%70 : $Builtin.RawPointer) : $Builtin.Word, scope 77 // user: %73
  %73 = struct $StaticString (%72 : $Builtin.Word, %71 : $Builtin.Word, %38 : $Builtin.Int8), scope 77 // user: %77
  %74 = integer_literal $Builtin.Int32, 1, scope 77 // user: %75
  %75 = struct $UInt32 (%74 : $Builtin.Int32), scope 77 // user: %77
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %76 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 77 // user: %77
  %77 = apply %76(%73, %39, %42, %44, %75) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 77
  unreachable , scope 77                          // id: %78

bb16:                                             // Preds: bb7
  // function_ref _ContiguousArrayBuffer.mutableFirstElementAddress.getter
  %79 = function_ref @$ss22_ContiguousArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 77 // user: %80
  %80 = apply %79<Element>(%30) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 77 // user: %84
  // function_ref _ContiguousArrayBuffer.firstElementAddress.getter
  %81 = function_ref @$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 77 // user: %82
  %82 = apply %81<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 77 // user: %84
  // function_ref UnsafeMutablePointer.moveInitialize(from:count:)
  %83 = function_ref @$sSp14moveInitialize4from5countySpyxG_SitF : $@convention(method) <τ_0_0> (UnsafeMutablePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 77 // user: %84
  %84 = apply %83<Element>(%82, %27, %80) : $@convention(method) <τ_0_0> (UnsafeMutablePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 77
  %85 = integer_literal $Builtin.Int64, 0, scope 77 // user: %86
  %86 = struct $Int (%85 : $Builtin.Int64), scope 77 // user: %91
  %87 = struct_extract %3 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 77 // user: %88
  %88 = ref_element_addr %87 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 77 // user: %89
  %89 = struct_element_addr %88 : $*_ArrayBody, #_ArrayBody._storage, scope 77 // user: %90
  %90 = struct_element_addr %89 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 77 // user: %91
  store %86 to %90 : $*Int, scope 77              // id: %91
  br bb17, scope 77                               // id: %92

bb17:                                             // Preds: bb16 bb14
  %93 = struct_extract %3 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 77 // user: %94
  strong_release %93 : $__ContiguousArrayStorageBase, scope 77 // id: %94
  return %30 : $_ContiguousArrayBuffer<Element>, scope 77 // id: %95
} // end sil function '$ss22_ContiguousArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF'

sil_scope 78 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV8capacitySivg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int }

// _ArrayBuffer.capacity.getter, loc * "<compiler-generated>":0:0, scope 78
sil public_external [serialized] @$ss12_ArrayBufferV8capacitySivg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> Int {
// %0                                             // users: %15, %8, %2
bb0(%0 : $_ArrayBuffer<Element>):
  // function_ref _ArrayBuffer._isNative.getter
  %1 = function_ref @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 78 // user: %2
  %2 = apply %1<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 78 // user: %3
  %3 = struct_extract %2 : $Bool, #Bool._value, scope 78 // user: %5
  %4 = integer_literal $Builtin.Int1, -1, scope 78 // user: %5
  %5 = builtin "int_expect_Int1"(%3 : $Builtin.Int1, %4 : $Builtin.Int1) : $Builtin.Int1, scope 78 // user: %6
  cond_br %5, bb2, bb1, scope 78                  // id: %6

bb1:                                              // Preds: bb0
  // function_ref _ArrayBuffer._nonNative.getter
  %7 = function_ref @$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 78 // user: %8
  %8 = apply %7<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 78 // users: %11, %10
  // function_ref _CocoaArrayWrapper.endIndex.getter
  %9 = function_ref @$ss18_CocoaArrayWrapperV8endIndexSivg : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 78 // user: %10
  %10 = apply %9(%8) : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 78 // user: %13
  %11 = struct_extract %8 : $_CocoaArrayWrapper, #_CocoaArrayWrapper.buffer, scope 78 // user: %12
  strong_release %11 : $AnyObject, scope 78       // id: %12
  br bb3(%10 : $Int), scope 78                    // id: %13

bb2:                                              // Preds: bb0
  // function_ref _ArrayBuffer._native.getter
  %14 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 78 // user: %15
  %15 = apply %14<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 78 // users: %18, %17
  // function_ref _ContiguousArrayBuffer.capacity.getter
  %16 = function_ref @$ss22_ContiguousArrayBufferV8capacitySivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 78 // user: %17
  %17 = apply %16<Element>(%15) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 78 // user: %20
  %18 = struct_extract %15 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 78 // user: %19
  strong_release %18 : $__ContiguousArrayStorageBase, scope 78 // id: %19
  br bb3(%17 : $Int), scope 78                    // id: %20

// %21                                            // user: %22
bb3(%21 : $Int):                                  // Preds: bb2 bb1
  return %21 : $Int, scope 78                     // id: %22
} // end sil function '$ss12_ArrayBufferV8capacitySivg'

sil_scope 79 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool }

// _ArrayBuffer._isNative.getter, loc * "<compiler-generated>":0:0, scope 79
sil public_external [serialized] @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> Bool {
[%0: noescape **]
// %0                                             // user: %16
bb0(%0 : $_ArrayBuffer<Element>):
  %1 = metatype $@thick Element.Type, scope 79    // users: %10, %2
  %2 = builtin "canBeClass"<Element>(%1 : $@thick Element.Type) : $Builtin.Int8, scope 79 // users: %7, %4
  %3 = integer_literal $Builtin.Int8, 0, scope 79 // user: %4
  %4 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %3 : $Builtin.Int8) : $Builtin.Int1, scope 79 // user: %5
  cond_br %4, bb7, bb1, scope 79                  // id: %5

bb1:                                              // Preds: bb0
  %6 = integer_literal $Builtin.Int8, 1, scope 79 // user: %7
  %7 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %6 : $Builtin.Int8) : $Builtin.Int1, scope 79 // user: %8
  cond_br %7, bb5, bb2, scope 79                  // id: %8

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %9 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 79 // user: %10
  %10 = apply %9<Element>(%1) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 79 // user: %11
  %11 = struct_extract %10 : $Bool, #Bool._value, scope 79 // user: %12
  cond_br %11, bb4, bb3, scope 79                 // id: %12

bb3:                                              // Preds: bb2
  br bb8, scope 79                                // id: %13

bb4:                                              // Preds: bb2
  br bb6, scope 79                                // id: %14

bb5:                                              // Preds: bb1
  br bb6, scope 79                                // id: %15

bb6:                                              // Preds: bb5 bb4
  %16 = struct_extract %0 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 79 // user: %17
  %17 = struct_extract %16 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 79 // user: %18
  %18 = classify_bridge_object %17 : $Builtin.BridgeObject, scope 79 // users: %20, %19
  %19 = tuple_extract %18 : $(Builtin.Int1, Builtin.Int1), 0, scope 79 // user: %21
  %20 = tuple_extract %18 : $(Builtin.Int1, Builtin.Int1), 1, scope 79 // user: %21
  %21 = builtin "or_Int1"(%19 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 79 // user: %23
  %22 = integer_literal $Builtin.Int1, -1, scope 79 // user: %23
  %23 = builtin "xor_Int1"(%21 : $Builtin.Int1, %22 : $Builtin.Int1) : $Builtin.Int1, scope 79 // user: %24
  br bb9(%23 : $Builtin.Int1), scope 79           // id: %24

bb7:                                              // Preds: bb0
  br bb8, scope 79                                // id: %25

bb8:                                              // Preds: bb7 bb3
  %26 = integer_literal $Builtin.Int1, -1, scope 79 // user: %27
  br bb9(%26 : $Builtin.Int1), scope 79           // id: %27

// %28                                            // user: %29
bb9(%28 : $Builtin.Int1):                         // Preds: bb8 bb6
  %29 = struct $Bool (%28 : $Builtin.Int1), scope 79 // user: %30
  return %29 : $Bool, scope 79                    // id: %30
} // end sil function '$ss12_ArrayBufferV9_isNativeSbvg'

sil_scope 80 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper }

// _ArrayBuffer._nonNative.getter, loc * "<compiler-generated>":0:0, scope 80
sil public_external [serialized] @$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> @owned _CocoaArrayWrapper {
[%0: escape v** => %r.s0.v**, escape v**.c*.v** => %r.s0.v**.c*.v**]
// %0                                             // user: %1
bb0(%0 : $_ArrayBuffer<Element>):
  %1 = struct_extract %0 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 80 // user: %2
  %2 = struct_extract %1 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 80 // users: %5, %3
  %3 = bridge_object_to_ref %2 : $Builtin.BridgeObject to $AnyObject, scope 80 // user: %4
  %4 = struct $_CocoaArrayWrapper (%3 : $AnyObject), scope 80 // user: %6
  strong_retain %2 : $Builtin.BridgeObject, scope 80 // id: %5
  return %4 : $_CocoaArrayWrapper, scope 80       // id: %6
} // end sil function '$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg'


// _CocoaArrayWrapper.endIndex.getter, loc * "<compiler-generated>":0:0, scope 0
sil @$ss18_CocoaArrayWrapperV8endIndexSivg : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int

sil_scope 81 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0> }

// _ArrayBuffer._native.getter, loc * "<compiler-generated>":0:0, scope 81
sil public_external [serialized] @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> @owned _ContiguousArrayBuffer<Element> {
// %0                                             // users: %29, %22, %17
bb0(%0 : $_ArrayBuffer<Element>):
  %1 = metatype $@thin _ContiguousArrayBuffer<Element>.Type, scope 81 // user: %28
  %2 = metatype $@thick Element.Type, scope 81    // users: %11, %3
  %3 = builtin "canBeClass"<Element>(%2 : $@thick Element.Type) : $Builtin.Int8, scope 81 // users: %8, %5
  %4 = integer_literal $Builtin.Int8, 0, scope 81 // user: %5
  %5 = builtin "cmp_eq_Int8"(%3 : $Builtin.Int8, %4 : $Builtin.Int8) : $Builtin.Int1, scope 81 // user: %6
  cond_br %5, bb7, bb1, scope 81                  // id: %6

bb1:                                              // Preds: bb0
  %7 = integer_literal $Builtin.Int8, 1, scope 81 // user: %8
  %8 = builtin "cmp_eq_Int8"(%3 : $Builtin.Int8, %7 : $Builtin.Int8) : $Builtin.Int1, scope 81 // user: %9
  cond_br %8, bb5, bb2, scope 81                  // id: %9

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %10 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 81 // user: %11
  %11 = apply %10<Element>(%2) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 81 // user: %12
  %12 = struct_extract %11 : $Bool, #Bool._value, scope 81 // user: %13
  cond_br %12, bb4, bb3, scope 81                 // id: %13

bb3:                                              // Preds: bb2
  br bb8, scope 81                                // id: %14

bb4:                                              // Preds: bb2
  br bb6, scope 81                                // id: %15

bb5:                                              // Preds: bb1
  br bb6, scope 81                                // id: %16

bb6:                                              // Preds: bb5 bb4
  %17 = struct_extract %0 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 81 // user: %18
  %18 = struct_extract %17 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 81 // user: %19
  %19 = bridge_object_to_ref %18 : $Builtin.BridgeObject to $__ContiguousArrayStorageBase, scope 81 // user: %20
  br bb9(%19 : $__ContiguousArrayStorageBase), scope 81 // id: %20

bb7:                                              // Preds: bb0
  br bb8, scope 81                                // id: %21

bb8:                                              // Preds: bb7 bb3
  %22 = struct_extract %0 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 81 // user: %23
  %23 = struct_extract %22 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 81 // user: %24
  %24 = unchecked_ref_cast %23 : $Builtin.BridgeObject to $__ContiguousArrayStorageBase, scope 81 // user: %25
  br bb9(%24 : $__ContiguousArrayStorageBase), scope 81 // id: %25

// %26                                            // user: %28
bb9(%26 : $__ContiguousArrayStorageBase):         // Preds: bb8 bb6
  // function_ref _ContiguousArrayBuffer.init(_:)
  %27 = function_ref @$ss22_ContiguousArrayBufferVyAByxGs02__aB11StorageBaseCcfC : $@convention(method) <τ_0_0> (@owned __ContiguousArrayStorageBase, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 81 // user: %28
  %28 = apply %27<Element>(%26, %1) : $@convention(method) <τ_0_0> (@owned __ContiguousArrayStorageBase, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 81 // user: %32
  %29 = struct_extract %0 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 81 // user: %30
  %30 = struct_extract %29 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 81 // user: %31
  strong_retain %30 : $Builtin.BridgeObject, scope 81 // id: %31
  return %28 : $_ContiguousArrayBuffer<Element>, scope 81 // id: %32
} // end sil function '$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg'

sil_scope 82 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV5countSivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int }

// _ContiguousArrayBuffer.count.getter, loc * "<compiler-generated>":0:0, scope 82
sil public_external [serialized] @$ss22_ContiguousArrayBufferV5countSivg : $@convention(method) <Element> (@guaranteed _ContiguousArrayBuffer<Element>) -> Int {
[%0: noescape **]
// %0                                             // user: %1
bb0(%0 : $_ContiguousArrayBuffer<Element>):
  %1 = struct_extract %0 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 82 // user: %2
  %2 = ref_element_addr %1 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 82 // user: %3
  %3 = struct_element_addr %2 : $*_ArrayBody, #_ArrayBody._storage, scope 82 // user: %4
  %4 = struct_element_addr %3 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 82 // user: %5
  %5 = struct_element_addr %4 : $*Int, #Int._value, scope 82 // user: %6
  %6 = load %5 : $*Builtin.Int64, scope 82        // user: %7
  %7 = builtin "assumeNonNegative_Int64"(%6 : $Builtin.Int64) : $Builtin.Int64, scope 82 // user: %8
  %8 = struct $Int (%7 : $Builtin.Int64), scope 82 // user: %9
  return %8 : $Int, scope 82                      // id: %9
} // end sil function '$ss22_ContiguousArrayBufferV5countSivg'

sil_scope 83 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV19_uninitializedCount15minimumCapacityAByxGSi_SitcfC : $@convention(method) <τ_0_0> (Int, Int, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0> }

// _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:), loc * "<compiler-generated>":0:0, scope 83
sil public_external [serialized] @$ss22_ContiguousArrayBufferV19_uninitializedCount15minimumCapacityAByxGSi_SitcfC : $@convention(method) <Element> (Int, Int, @thin _ContiguousArrayBuffer<Element>.Type) -> @owned _ContiguousArrayBuffer<Element> {
// %0                                             // users: %64, %29, %8, %3
// %1                                             // users: %7, %4
// %2                                             // user: %126
bb0(%0 : $Int, %1 : $Int, %2 : $@thin _ContiguousArrayBuffer<Element>.Type):
  %3 = struct_extract %0 : $Int, #Int._value, scope 83 // user: %5
  %4 = struct_extract %1 : $Int, #Int._value, scope 83 // user: %5
  %5 = builtin "cmp_slt_Int64"(%4 : $Builtin.Int64, %3 : $Builtin.Int64) : $Builtin.Int1, scope 83 // user: %6
  cond_br %5, bb2, bb1, scope 83                  // id: %6

bb1:                                              // Preds: bb0
  br bb3(%1 : $Int), scope 83                     // id: %7

bb2:                                              // Preds: bb0
  br bb3(%0 : $Int), scope 83                     // id: %8

// %9                                             // users: %29, %11
bb3(%9 : $Int):                                   // Preds: bb2 bb1
  %10 = integer_literal $Builtin.Int64, 0, scope 83 // users: %47, %12
  %11 = struct_extract %9 : $Int, #Int._value, scope 83 // users: %17, %12
  %12 = builtin "cmp_eq_Int64"(%11 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 83 // user: %13
  cond_br %12, bb18, bb4, scope 83                // id: %13

bb4:                                              // Preds: bb3
  %14 = metatype $@thick Element.Type, scope 83   // user: %16
  // function_ref getContiguousArrayStorageType<A>(for:)
  %15 = function_ref @$ss29getContiguousArrayStorageType3fors01_bcD0CyxGmxm_tlF : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> @thick _ContiguousArrayStorage<τ_0_0>.Type, scope 83 // user: %16
  %16 = apply %15<Element>(%14) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> @thick _ContiguousArrayStorage<τ_0_0>.Type, scope 83 // user: %18
  %17 = builtin "truncOrBitCast_Int64_Word"(%11 : $Builtin.Int64) : $Builtin.Word, scope 83 // user: %18
  %18 = alloc_ref_dynamic [tail_elems $Element * %17 : $Builtin.Word] %16 : $@thick _ContiguousArrayStorage<Element>.Type, $_ContiguousArrayStorage<Element>, scope 83 // users: %65, %63, %30, %28, %19
  %19 = upcast %18 : $_ContiguousArrayStorage<Element> to $__ContiguousArrayStorageBase, scope 83 // users: %66, %37, %31, %26, %20
  %20 = ref_to_raw_pointer %19 : $__ContiguousArrayStorageBase to $Builtin.RawPointer, scope 83 // users: %36, %21
  %21 = struct $UnsafeRawPointer (%20 : $Builtin.RawPointer), scope 83 // user: %33
  // function_ref _swift_stdlib_has_malloc_size
  %22 = function_ref @_swift_stdlib_has_malloc_size : $@convention(c) () -> Bool, scope 83 // user: %23
  %23 = apply %22() : $@convention(c) () -> Bool, scope 83 // user: %24
  %24 = struct_extract %23 : $Bool, #Bool._value, scope 83 // user: %25
  cond_br %24, bb6, bb5, scope 83                 // id: %25

bb5:                                              // Preds: bb4
  %26 = struct $_ContiguousArrayBuffer<Element> (%19 : $__ContiguousArrayStorageBase), scope 83 // user: %29
  // function_ref _ContiguousArrayBuffer._initStorageHeader(count:capacity:)
  %27 = function_ref @$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitF : $@convention(method) <τ_0_0> (Int, Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> (), scope 83 // user: %29
  strong_retain %18 : $_ContiguousArrayStorage<Element>, scope 83 // id: %28
  %29 = apply %27<Element>(%0, %9, %26) : $@convention(method) <τ_0_0> (Int, Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> (), scope 83
  strong_release %18 : $_ContiguousArrayStorage<Element>, scope 83 // id: %30
  br bb19(%19 : $__ContiguousArrayStorageBase), scope 83 // id: %31

bb6:                                              // Preds: bb4
  // function_ref _swift_stdlib_malloc_size
  %32 = function_ref @_swift_stdlib_malloc_size : $@convention(c) (UnsafeRawPointer) -> Int, scope 83 // user: %33
  %33 = apply %32(%21) : $@convention(c) (UnsafeRawPointer) -> Int, scope 83 // user: %34
  %34 = struct_extract %33 : $Int, #Int._value, scope 83 // user: %35
  %35 = builtin "truncOrBitCast_Int64_Word"(%34 : $Builtin.Int64) : $Builtin.Word, scope 83 // user: %36
  %36 = index_raw_pointer %20 : $Builtin.RawPointer, %35 : $Builtin.Word, scope 83 // user: %40
  %37 = struct $_ContiguousArrayBuffer<Element> (%19 : $__ContiguousArrayStorageBase), scope 83 // users: %64, %39
  // function_ref _ContiguousArrayBuffer.firstElementAddress.getter
  %38 = function_ref @$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 83 // user: %39
  %39 = apply %38<Element>(%37) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 83 // user: %41
  %40 = builtin "ptrtoint_Word"(%36 : $Builtin.RawPointer) : $Builtin.Word, scope 83 // user: %43
  %41 = struct_extract %39 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 83 // user: %42
  %42 = builtin "ptrtoint_Word"(%41 : $Builtin.RawPointer) : $Builtin.Word, scope 83 // user: %43
  %43 = builtin "sub_Word"(%40 : $Builtin.Word, %42 : $Builtin.Word) : $Builtin.Word, scope 83 // user: %44
  %44 = builtin "sextOrBitCast_Word_Int64"(%43 : $Builtin.Word) : $Builtin.Int64, scope 83 // users: %60, %52
  %45 = builtin "strideof"<Element>() : $Builtin.Word, scope 83 // user: %46
  %46 = builtin "sextOrBitCast_Word_Int64"(%45 : $Builtin.Word) : $Builtin.Int64, scope 83 // users: %60, %56, %47
  %47 = builtin "cmp_eq_Int64"(%46 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 83 // user: %49
  %48 = integer_literal $Builtin.Int1, 0, scope 83 // users: %57, %49
  %49 = builtin "int_expect_Int1"(%47 : $Builtin.Int1, %48 : $Builtin.Int1) : $Builtin.Int1, scope 83 // user: %50
  cond_br %49, bb15, bb7, scope 83                // id: %50

bb7:                                              // Preds: bb6
  %51 = integer_literal $Builtin.Int64, -9223372036854775808, scope 83 // user: %52
  %52 = builtin "cmp_eq_Int64"(%44 : $Builtin.Int64, %51 : $Builtin.Int64) : $Builtin.Int1, scope 83 // user: %53
  cond_br %52, bb9, bb8, scope 83                 // id: %53

bb8:                                              // Preds: bb7
  br bb11, scope 83                               // id: %54

bb9:                                              // Preds: bb7
  %55 = integer_literal $Builtin.Int64, -1, scope 83 // user: %56
  %56 = builtin "cmp_eq_Int64"(%46 : $Builtin.Int64, %55 : $Builtin.Int64) : $Builtin.Int1, scope 83 // user: %57
  %57 = builtin "int_expect_Int1"(%56 : $Builtin.Int1, %48 : $Builtin.Int1) : $Builtin.Int1, scope 83 // user: %58
  cond_br %57, bb12, bb10, scope 83               // id: %58

bb10:                                             // Preds: bb9
  br bb11, scope 83                               // id: %59

bb11:                                             // Preds: bb10 bb8
  %60 = builtin "sdiv_Int64"(%44 : $Builtin.Int64, %46 : $Builtin.Int64) : $Builtin.Int64, scope 83 // user: %61
  %61 = struct $Int (%60 : $Builtin.Int64), scope 83 // user: %64
  // function_ref _ContiguousArrayBuffer._initStorageHeader(count:capacity:)
  %62 = function_ref @$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitF : $@convention(method) <τ_0_0> (Int, Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> (), scope 83 // user: %64
  strong_retain %18 : $_ContiguousArrayStorage<Element>, scope 83 // id: %63
  %64 = apply %62<Element>(%0, %61, %37) : $@convention(method) <τ_0_0> (Int, Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> (), scope 83
  strong_release %18 : $_ContiguousArrayStorage<Element>, scope 83 // id: %65
  br bb19(%19 : $__ContiguousArrayStorageBase), scope 83 // id: %66

bb12:                                             // Preds: bb9
  %67 = string_literal utf8 "Division results in an overflow", scope 83 // user: %69
  %68 = integer_literal $Builtin.Word, 31, scope 83 // user: %71
  %69 = builtin "ptrtoint_Word"(%67 : $Builtin.RawPointer) : $Builtin.Word, scope 83 // user: %71
  %70 = integer_literal $Builtin.Int8, 2, scope 83 // users: %90, %75, %71
  %71 = struct $StaticString (%69 : $Builtin.Word, %68 : $Builtin.Word, %70 : $Builtin.Int8), scope 83 // user: %94
  %72 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface", scope 83 // user: %74
  %73 = integer_literal $Builtin.Word, 39, scope 83 // user: %75
  %74 = builtin "ptrtoint_Word"(%72 : $Builtin.RawPointer) : $Builtin.Word, scope 83 // user: %75
  %75 = struct $StaticString (%74 : $Builtin.Word, %73 : $Builtin.Word, %70 : $Builtin.Int8), scope 83 // user: %94
  %76 = integer_literal $Builtin.Int64, 34611, scope 83 // user: %77
  %77 = struct $UInt (%76 : $Builtin.Int64), scope 83 // user: %94
  %78 = builtin "assert_configuration"() : $Builtin.Int32, scope 83 // users: %83, %80
  %79 = integer_literal $Builtin.Int32, 0, scope 83 // user: %80
  %80 = builtin "cmp_eq_Int32"(%78 : $Builtin.Int32, %79 : $Builtin.Int32) : $Builtin.Int1, scope 83 // user: %81
  cond_br %80, bb14, bb13, scope 83               // id: %81

bb13:                                             // Preds: bb12
  %82 = integer_literal $Builtin.Int32, 1, scope 83 // user: %83
  %83 = builtin "cmp_eq_Int32"(%78 : $Builtin.Int32, %82 : $Builtin.Int32) : $Builtin.Int1, scope 83 // user: %84
  cond_fail %83 : $Builtin.Int1, "Division results in an overflow", scope 83 // id: %84
  %85 = builtin "conditionallyUnreachable"() : $Never, scope 83
  unreachable , scope 83                          // id: %86

bb14:                                             // Preds: bb12
  %87 = string_literal utf8 "Fatal error", scope 83 // user: %89
  %88 = integer_literal $Builtin.Word, 11, scope 83 // user: %90
  %89 = builtin "ptrtoint_Word"(%87 : $Builtin.RawPointer) : $Builtin.Word, scope 83 // user: %90
  %90 = struct $StaticString (%89 : $Builtin.Word, %88 : $Builtin.Word, %70 : $Builtin.Int8), scope 83 // user: %94
  %91 = integer_literal $Builtin.Int32, 1, scope 83 // user: %92
  %92 = struct $UInt32 (%91 : $Builtin.Int32), scope 83 // user: %94
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %93 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 83 // user: %94
  %94 = apply %93(%90, %71, %75, %77, %92) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 83
  unreachable , scope 83                          // id: %95

bb15:                                             // Preds: bb6
  %96 = string_literal utf8 "Division by zero", scope 83 // user: %98
  %97 = integer_literal $Builtin.Word, 16, scope 83 // user: %100
  %98 = builtin "ptrtoint_Word"(%96 : $Builtin.RawPointer) : $Builtin.Word, scope 83 // user: %100
  %99 = integer_literal $Builtin.Int8, 2, scope 83 // users: %119, %104, %100
  %100 = struct $StaticString (%98 : $Builtin.Word, %97 : $Builtin.Word, %99 : $Builtin.Int8), scope 83 // user: %123
  %101 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface", scope 83 // user: %103
  %102 = integer_literal $Builtin.Word, 39, scope 83 // user: %104
  %103 = builtin "ptrtoint_Word"(%101 : $Builtin.RawPointer) : $Builtin.Word, scope 83 // user: %104
  %104 = struct $StaticString (%103 : $Builtin.Word, %102 : $Builtin.Word, %99 : $Builtin.Int8), scope 83 // user: %123
  %105 = integer_literal $Builtin.Int64, 34604, scope 83 // user: %106
  %106 = struct $UInt (%105 : $Builtin.Int64), scope 83 // user: %123
  %107 = builtin "assert_configuration"() : $Builtin.Int32, scope 83 // users: %112, %109
  %108 = integer_literal $Builtin.Int32, 0, scope 83 // user: %109
  %109 = builtin "cmp_eq_Int32"(%107 : $Builtin.Int32, %108 : $Builtin.Int32) : $Builtin.Int1, scope 83 // user: %110
  cond_br %109, bb17, bb16, scope 83              // id: %110

bb16:                                             // Preds: bb15
  %111 = integer_literal $Builtin.Int32, 1, scope 83 // user: %112
  %112 = builtin "cmp_eq_Int32"(%107 : $Builtin.Int32, %111 : $Builtin.Int32) : $Builtin.Int1, scope 83 // user: %113
  cond_fail %112 : $Builtin.Int1, "Division by zero", scope 83 // id: %113
  %114 = builtin "conditionallyUnreachable"() : $Never, scope 83
  unreachable , scope 83                          // id: %115

bb17:                                             // Preds: bb15
  %116 = string_literal utf8 "Fatal error", scope 83 // user: %118
  %117 = integer_literal $Builtin.Word, 11, scope 83 // user: %119
  %118 = builtin "ptrtoint_Word"(%116 : $Builtin.RawPointer) : $Builtin.Word, scope 83 // user: %119
  %119 = struct $StaticString (%118 : $Builtin.Word, %117 : $Builtin.Word, %99 : $Builtin.Int8), scope 83 // user: %123
  %120 = integer_literal $Builtin.Int32, 1, scope 83 // user: %121
  %121 = struct $UInt32 (%120 : $Builtin.Int32), scope 83 // user: %123
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %122 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 83 // user: %123
  %123 = apply %122(%119, %100, %104, %106, %121) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 83
  unreachable , scope 83                          // id: %124

bb18:                                             // Preds: bb3
  // function_ref _ContiguousArrayBuffer.init()
  %125 = function_ref @$ss22_ContiguousArrayBufferVAByxGycfC : $@convention(method) <τ_0_0> (@thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 83 // user: %126
  %126 = apply %125<Element>(%2) : $@convention(method) <τ_0_0> (@thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 83 // user: %127
  %127 = struct_extract %126 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 83 // user: %128
  br bb19(%127 : $__ContiguousArrayStorageBase), scope 83 // id: %128

// %129                                           // user: %130
bb19(%129 : $__ContiguousArrayStorageBase):       // Preds: bb18 bb11 bb5
  %130 = struct $_ContiguousArrayBuffer<Element> (%129 : $__ContiguousArrayStorageBase), scope 83 // user: %131
  return %130 : $_ContiguousArrayBuffer<Element>, scope 83 // id: %131
} // end sil function '$ss22_ContiguousArrayBufferV19_uninitializedCount15minimumCapacityAByxGSi_SitcfC'

sil_scope 84 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0> }

// _ContiguousArrayBuffer.mutableFirstElementAddress.getter, loc * "<compiler-generated>":0:0, scope 84
sil shared [serialized] @$ss22_ContiguousArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <Element> (@guaranteed _ContiguousArrayBuffer<Element>) -> UnsafeMutablePointer<Element> {
[%0: noescape v**, escape v**.c*.v** => %r.s0.v**]
[global: ]
// %0                                             // user: %1
bb0(%0 : $_ContiguousArrayBuffer<Element>):
  %1 = struct_extract %0 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 84 // user: %2
  %2 = ref_tail_addr %1 : $__ContiguousArrayStorageBase, $Element, scope 84 // user: %3
  %3 = address_to_pointer %2 : $*Element to $Builtin.RawPointer, scope 84 // user: %4
  %4 = struct $UnsafeMutablePointer<Element> (%3 : $Builtin.RawPointer), scope 84 // user: %5
  return %4 : $UnsafeMutablePointer<Element>, scope 84 // id: %5
} // end sil function '$ss22_ContiguousArrayBufferV26mutableFirstElementAddressSpyxGvg'


// _assertionFailure(_:_:file:line:flags:), loc * "<compiler-generated>":0:0, scope 0
sil [noinline] [_semantics "programtermination_point"] @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never

sil_scope 85 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0> }

// _ContiguousArrayBuffer.firstElementAddress.getter, loc * "<compiler-generated>":0:0, scope 85
sil public_external [serialized] @$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvg : $@convention(method) <Element> (@guaranteed _ContiguousArrayBuffer<Element>) -> UnsafeMutablePointer<Element> {
[%0: noescape v**, escape v**.c*.v** => %r.s0.v**]
// %0                                             // user: %1
bb0(%0 : $_ContiguousArrayBuffer<Element>):
  %1 = struct_extract %0 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 85 // user: %2
  %2 = ref_tail_addr %1 : $__ContiguousArrayStorageBase, $Element, scope 85 // user: %3
  %3 = address_to_pointer %2 : $*Element to $Builtin.RawPointer, scope 85 // user: %4
  %4 = struct $UnsafeMutablePointer<Element> (%3 : $Builtin.RawPointer), scope 85 // user: %5
  return %4 : $UnsafeMutablePointer<Element>, scope 85 // id: %5
} // end sil function '$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvg'

sil_scope 86 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0> }

// _ArrayBuffer.mutableFirstElementAddress.getter, loc * "<compiler-generated>":0:0, scope 86
sil shared [serialized] @$ss12_ArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> UnsafeMutablePointer<Element> {
[%0: read v**.c*.v**, write v**.c*.v**, copy v**.c*.v**, destroy v**.c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // user: %2
bb0(%0 : $_ArrayBuffer<Element>):
  // function_ref _ArrayBuffer._native.getter
  %1 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 86 // user: %2
  %2 = apply %1<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 86 // users: %5, %4
  // function_ref _ContiguousArrayBuffer.mutableFirstElementAddress.getter
  %3 = function_ref @$ss22_ContiguousArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 86 // user: %4
  %4 = apply %3<Element>(%2) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 86 // user: %7
  %5 = struct_extract %2 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 86 // user: %6
  strong_release %5 : $__ContiguousArrayStorageBase, scope 86 // id: %6
  return %4 : $UnsafeMutablePointer<Element>, scope 86 // id: %7
} // end sil function '$ss12_ArrayBufferV26mutableFirstElementAddressSpyxGvg'

sil_scope 87 { loc * "<compiler-generated>":0:0 parent @$sSp14moveInitialize4from5countySpyxG_SitF : $@convention(method) <τ_0_0> (UnsafeMutablePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> () }

// UnsafeMutablePointer.moveInitialize(from:count:), loc * "<compiler-generated>":0:0, scope 87
sil public_external [serialized] @$sSp14moveInitialize4from5countySpyxG_SitF : $@convention(method) <Pointee> (UnsafeMutablePointer<Pointee>, Int, UnsafeMutablePointer<Pointee>) -> () {
// %0                                             // user: %28
// %1                                             // users: %57, %34, %22
// %2                                             // users: %33, %27
bb0(%0 : $UnsafeMutablePointer<Pointee>, %1 : $Int, %2 : $UnsafeMutablePointer<Pointee>):
  %3 = string_literal utf8 "UnsafeMutablePointer.moveInitialize with negative count", scope 87 // user: %5
  %4 = integer_literal $Builtin.Word, 55, scope 87 // user: %7
  %5 = builtin "ptrtoint_Word"(%3 : $Builtin.RawPointer) : $Builtin.Word, scope 87 // user: %7
  %6 = integer_literal $Builtin.Int8, 2, scope 87 // users: %66, %11, %7
  %7 = struct $StaticString (%5 : $Builtin.Word, %4 : $Builtin.Word, %6 : $Builtin.Int8), scope 87 // user: %70
  %8 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface", scope 87 // user: %10
  %9 = integer_literal $Builtin.Word, 39, scope 87 // user: %11
  %10 = builtin "ptrtoint_Word"(%8 : $Builtin.RawPointer) : $Builtin.Word, scope 87 // user: %11
  %11 = struct $StaticString (%10 : $Builtin.Word, %9 : $Builtin.Word, %6 : $Builtin.Int8), scope 87 // user: %70
  %12 = integer_literal $Builtin.Int64, 24013, scope 87 // user: %13
  %13 = struct $UInt (%12 : $Builtin.Int64), scope 87 // user: %70
  %14 = builtin "assert_configuration"() : $Builtin.Int32, scope 87 // user: %16
  %15 = integer_literal $Builtin.Int32, 0, scope 87 // user: %16
  %16 = builtin "cmp_eq_Int32"(%14 : $Builtin.Int32, %15 : $Builtin.Int32) : $Builtin.Int1, scope 87 // user: %18
  %17 = integer_literal $Builtin.Int1, 0, scope 87 // users: %24, %18
  %18 = builtin "int_expect_Int1"(%16 : $Builtin.Int1, %17 : $Builtin.Int1) : $Builtin.Int1, scope 87 // user: %19
  cond_br %18, bb2, bb1, scope 87                 // id: %19

bb1:                                              // Preds: bb0
  br bb4, scope 87                                // id: %20

bb2:                                              // Preds: bb0
  %21 = integer_literal $Builtin.Int64, 0, scope 87 // user: %23
  %22 = struct_extract %1 : $Int, #Int._value, scope 87 // user: %23
  %23 = builtin "cmp_slt_Int64"(%22 : $Builtin.Int64, %21 : $Builtin.Int64) : $Builtin.Int1, scope 87 // user: %24
  %24 = builtin "int_expect_Int1"(%23 : $Builtin.Int1, %17 : $Builtin.Int1) : $Builtin.Int1, scope 87 // user: %25
  cond_br %24, bb13, bb3, scope 87                // id: %25

bb3:                                              // Preds: bb2
  br bb4, scope 87                                // id: %26

bb4:                                              // Preds: bb3 bb1
  %27 = struct_extract %2 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 87 // users: %59, %51, %48, %29
  %28 = struct_extract %0 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 87 // users: %59, %51, %48, %36, %29
  %29 = builtin "cmp_ult_RawPointer"(%27 : $Builtin.RawPointer, %28 : $Builtin.RawPointer) : $Builtin.Int1, scope 87 // user: %30
  cond_br %29, bb10, bb5, scope 87                // id: %30

bb5:                                              // Preds: bb4
  %31 = metatype $@thick UnsafeMutablePointer<Pointee>.Type, scope 87 // user: %43
  %32 = alloc_stack $UnsafeMutablePointer<Pointee>, scope 87 // users: %45, %43, %33
  store %2 to %32 : $*UnsafeMutablePointer<Pointee>, scope 87 // id: %33
  %34 = struct_extract %1 : $Int, #Int._value, scope 87 // user: %35
  %35 = builtin "truncOrBitCast_Int64_Word"(%34 : $Builtin.Int64) : $Builtin.Word, scope 87 // users: %51, %37
  %36 = pointer_to_address %28 : $Builtin.RawPointer to [strict] $*Pointee, scope 87 // user: %37
  %37 = index_addr [stack_protection] %36 : $*Pointee, %35 : $Builtin.Word, scope 87 // user: %38
  %38 = address_to_pointer [stack_protection] %37 : $*Pointee to $Builtin.RawPointer, scope 87 // user: %39
  %39 = struct $UnsafeMutablePointer<Pointee> (%38 : $Builtin.RawPointer), scope 87 // user: %41
  %40 = alloc_stack $UnsafeMutablePointer<Pointee>, scope 87 // users: %44, %43, %41
  store %39 to %40 : $*UnsafeMutablePointer<Pointee>, scope 87 // id: %41
  // function_ref static Comparable.>= infix(_:_:)
  %42 = function_ref @$sSLsE2geoiySbx_xtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 87 // user: %43
  %43 = apply %42<UnsafeMutablePointer<Pointee>>(%32, %40, %31) : $@convention(method) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 87 // user: %46
  dealloc_stack %40 : $*UnsafeMutablePointer<Pointee>, scope 87 // id: %44
  dealloc_stack %32 : $*UnsafeMutablePointer<Pointee>, scope 87 // id: %45
  %46 = struct_extract %43 : $Bool, #Bool._value, scope 87 // user: %47
  cond_br %46, bb9, bb6, scope 87                 // id: %47

bb6:                                              // Preds: bb5
  %48 = builtin "cmp_eq_RawPointer"(%27 : $Builtin.RawPointer, %28 : $Builtin.RawPointer) : $Builtin.Int1, scope 87 // user: %49
  cond_br %48, bb8, bb7, scope 87                 // id: %49

bb7:                                              // Preds: bb6
  %50 = metatype $@thick Pointee.Type, scope 87   // user: %51
  %51 = builtin "takeArrayBackToFront"<Pointee>(%50 : $@thick Pointee.Type, %27 : $Builtin.RawPointer, %28 : $Builtin.RawPointer, %35 : $Builtin.Word) : $(), scope 87
  br bb12, scope 87                               // id: %52

bb8:                                              // Preds: bb6
  br bb12, scope 87                               // id: %53

bb9:                                              // Preds: bb5
  br bb11, scope 87                               // id: %54

bb10:                                             // Preds: bb4
  br bb11, scope 87                               // id: %55

bb11:                                             // Preds: bb10 bb9
  %56 = metatype $@thick Pointee.Type, scope 87   // user: %59
  %57 = struct_extract %1 : $Int, #Int._value, scope 87 // user: %58
  %58 = builtin "truncOrBitCast_Int64_Word"(%57 : $Builtin.Int64) : $Builtin.Word, scope 87 // user: %59
  %59 = builtin "takeArrayFrontToBack"<Pointee>(%56 : $@thick Pointee.Type, %27 : $Builtin.RawPointer, %28 : $Builtin.RawPointer, %58 : $Builtin.Word) : $(), scope 87
  br bb12, scope 87                               // id: %60

bb12:                                             // Preds: bb11 bb8 bb7
  %61 = tuple (), scope 87                        // user: %62
  return %61 : $(), scope 87                      // id: %62

bb13:                                             // Preds: bb2
  %63 = string_literal utf8 "Fatal error", scope 87 // user: %65
  %64 = integer_literal $Builtin.Word, 11, scope 87 // user: %66
  %65 = builtin "ptrtoint_Word"(%63 : $Builtin.RawPointer) : $Builtin.Word, scope 87 // user: %66
  %66 = struct $StaticString (%65 : $Builtin.Word, %64 : $Builtin.Word, %6 : $Builtin.Int8), scope 87 // user: %70
  %67 = integer_literal $Builtin.Int32, 1, scope 87 // user: %68
  %68 = struct $UInt32 (%67 : $Builtin.Int32), scope 87 // user: %70
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %69 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 87 // user: %70
  %70 = apply %69(%66, %7, %11, %13, %68) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 87
  unreachable , scope 87                          // id: %71
} // end sil function '$sSp14moveInitialize4from5countySpyxG_SitF'

sil_scope 88 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfC : $@convention(method) <τ_0_0> (@owned _ContiguousArrayBuffer<τ_0_0>, Int, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0> }

// _ArrayBuffer.init(_buffer:shiftedToStartIndex:), loc * "<compiler-generated>":0:0, scope 88
sil public_external [serialized] @$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfC : $@convention(method) <Element> (@owned _ContiguousArrayBuffer<Element>, Int, @thin _ArrayBuffer<Element>.Type) -> @owned _ArrayBuffer<Element> {
[%0: escape v** => %r.s0.s0.v**, escape v**.c*.v** => %r.s0.s0.v**.c*.v**]
// %0                                             // user: %3
bb0(%0 : $_ContiguousArrayBuffer<Element>, %1 : $Int, %2 : $@thin _ArrayBuffer<Element>.Type):
  %3 = struct_extract %0 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 88 // user: %4
  %4 = unchecked_ref_cast %3 : $__ContiguousArrayStorageBase to $Builtin.BridgeObject, scope 88 // user: %5
  %5 = struct $_BridgeStorage<__ContiguousArrayStorageBase> (%4 : $Builtin.BridgeObject), scope 88 // user: %6
  %6 = struct $_ArrayBuffer<Element> (%5 : $_BridgeStorage<__ContiguousArrayStorageBase>), scope 88 // user: %7
  return %6 : $_ArrayBuffer<Element>, scope 88    // id: %7
} // end sil function '$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfC'

sil_scope 89 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV8capacitySivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int }

// _ContiguousArrayBuffer.capacity.getter, loc * "<compiler-generated>":0:0, scope 89
sil public_external [serialized] @$ss22_ContiguousArrayBufferV8capacitySivg : $@convention(method) <Element> (@guaranteed _ContiguousArrayBuffer<Element>) -> Int {
[%0: noescape **]
// %0                                             // user: %1
bb0(%0 : $_ContiguousArrayBuffer<Element>):
  %1 = struct_extract %0 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 89 // user: %2
  %2 = ref_element_addr %1 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 89 // user: %3
  %3 = struct_element_addr %2 : $*_ArrayBody, #_ArrayBody._storage, scope 89 // user: %4
  %4 = struct_element_addr %3 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage._capacityAndFlags, scope 89 // user: %5
  %5 = struct_element_addr %4 : $*UInt, #UInt._value, scope 89 // user: %6
  %6 = load %5 : $*Builtin.Int64, scope 89        // user: %8
  %7 = integer_literal $Builtin.Int64, 1, scope 89 // user: %8
  %8 = builtin "lshr_Int64"(%6 : $Builtin.Int64, %7 : $Builtin.Int64) : $Builtin.Int64, scope 89 // user: %9
  %9 = struct $Int (%8 : $Builtin.Int64), scope 89 // user: %10
  return %9 : $Int, scope 89                      // id: %10
} // end sil function '$ss22_ContiguousArrayBufferV8capacitySivg'

sil_scope 90 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferVyAByxGs02__aB11StorageBaseCcfC : $@convention(method) <τ_0_0> (@owned __ContiguousArrayStorageBase, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0> }

// _ContiguousArrayBuffer.init(_:), loc * "<compiler-generated>":0:0, scope 90
sil public_external [serialized] @$ss22_ContiguousArrayBufferVyAByxGs02__aB11StorageBaseCcfC : $@convention(method) <Element> (@owned __ContiguousArrayStorageBase, @thin _ContiguousArrayBuffer<Element>.Type) -> @owned _ContiguousArrayBuffer<Element> {
[%0: escape => %r.s0, escape c*.v** => %r.s0.c*.v**]
// %0                                             // user: %2
bb0(%0 : $__ContiguousArrayStorageBase, %1 : $@thin _ContiguousArrayBuffer<Element>.Type):
  %2 = struct $_ContiguousArrayBuffer<Element> (%0 : $__ContiguousArrayStorageBase), scope 90 // user: %3
  return %2 : $_ContiguousArrayBuffer<Element>, scope 90 // id: %3
} // end sil function '$ss22_ContiguousArrayBufferVyAByxGs02__aB11StorageBaseCcfC'

sil_scope 91 { loc * "<compiler-generated>":0:0 parent @$ss29getContiguousArrayStorageType3fors01_bcD0CyxGmxm_tlF : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> @thick _ContiguousArrayStorage<τ_0_0>.Type }

// getContiguousArrayStorageType<A>(for:), loc * "<compiler-generated>":0:0, scope 91
sil shared [serialized] [noinline] [readonly] [_semantics "array.getContiguousArrayStorageType"] @$ss29getContiguousArrayStorageType3fors01_bcD0CyxGmxm_tlF : $@convention(thin) <Element> (@thick Element.Type) -> @thick _ContiguousArrayStorage<Element>.Type {
bb0(%0 : $@thick Element.Type):
  %1 = integer_literal $Builtin.Word, 13, scope 91 // user: %4
  %2 = integer_literal $Builtin.Word, 0, scope 91 // users: %4, %4
  // function_ref _stdlib_isOSVersionAtLeast(_:_:_:)
  %3 = function_ref @$ss26_stdlib_isOSVersionAtLeastyBi1_Bw_BwBwtF : $@convention(thin) (Builtin.Word, Builtin.Word, Builtin.Word) -> Builtin.Int1, scope 91 // user: %4
  %4 = apply %3(%1, %2, %2) : $@convention(thin) (Builtin.Word, Builtin.Word, Builtin.Word) -> Builtin.Int1, scope 91 // user: %5
  cond_br %4, bb2, bb1, scope 91                  // id: %5

bb1:                                              // Preds: bb0
  br bb4, scope 91                                // id: %6

bb2:                                              // Preds: bb0
  %7 = metatype $@thick Element.Type, scope 91    // user: %8
  checked_cast_br %7 : $@thick Element.Type to any AnyObject.Type, bb5, bb3, scope 91 // id: %8

bb3:                                              // Preds: bb2
  br bb4, scope 91                                // id: %9

bb4:                                              // Preds: bb3 bb1
  %10 = metatype $@thick _ContiguousArrayStorage<Element>.Type, scope 91 // user: %11
  br bb6(%10 : $@thick _ContiguousArrayStorage<Element>.Type), scope 91 // id: %11

bb5(%12 : $@thick any AnyObject.Type):            // Preds: bb2
  %13 = metatype $@thick _ContiguousArrayStorage<AnyObject>.Type, scope 91 // user: %14
  %14 = unchecked_trivial_bit_cast %13 : $@thick _ContiguousArrayStorage<AnyObject>.Type to $@thick _ContiguousArrayStorage<Element>.Type, scope 91 // user: %15
  br bb6(%14 : $@thick _ContiguousArrayStorage<Element>.Type), scope 91 // id: %15

// %16                                            // user: %17
bb6(%16 : $@thick _ContiguousArrayStorage<Element>.Type): // Preds: bb5 bb4
  return %16 : $@thick _ContiguousArrayStorage<Element>.Type, scope 91 // id: %17
} // end sil function '$ss29getContiguousArrayStorageType3fors01_bcD0CyxGmxm_tlF'


// _swift_stdlib_has_malloc_size, loc * "<compiler-generated>":0:0, scope 0
// clang name: _swift_stdlib_has_malloc_size
sil shared [serialized] [clang _swift_stdlib_has_malloc_size] @_swift_stdlib_has_malloc_size : $@convention(c) () -> Bool

sil_scope 92 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitF : $@convention(method) <τ_0_0> (Int, Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> () }

// _ContiguousArrayBuffer._initStorageHeader(count:capacity:), loc * "<compiler-generated>":0:0, scope 92
sil public_external [serialized] @$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitF : $@convention(method) <Element> (Int, Int, @guaranteed _ContiguousArrayBuffer<Element>) -> () {
[%2: noescape **]
// %0                                             // user: %18
// %1                                             // user: %7
// %2                                             // user: %6
bb0(%0 : $Int, %1 : $Int, %2 : $_ContiguousArrayBuffer<Element>):
  %3 = metatype $@thick Element.Type, scope 92    // user: %5
  // function_ref _isBridgedVerbatimToObjectiveC<A>(_:)
  %4 = function_ref @$ss30_isBridgedVerbatimToObjectiveCySbxmlF : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 92 // user: %5
  %5 = apply %4<Element>(%3) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 92 // user: %10
  %6 = struct_extract %2 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 92 // user: %20
  %7 = struct_extract %1 : $Int, #Int._value, scope 92 // user: %9
  %8 = integer_literal $Builtin.Int64, 1, scope 92 // users: %14, %9
  %9 = builtin "shl_Int64"(%7 : $Builtin.Int64, %8 : $Builtin.Int64) : $Builtin.Int64, scope 92 // user: %16
  %10 = struct_extract %5 : $Bool, #Bool._value, scope 92 // user: %11
  cond_br %10, bb2, bb1, scope 92                 // id: %11

bb1:                                              // Preds: bb0
  %12 = integer_literal $Builtin.Int64, 0, scope 92 // user: %13
  br bb3(%12 : $Builtin.Int64), scope 92          // id: %13

bb2:                                              // Preds: bb0
  br bb3(%8 : $Builtin.Int64), scope 92           // id: %14

// %15                                            // user: %16
bb3(%15 : $Builtin.Int64):                        // Preds: bb2 bb1
  %16 = builtin "or_Int64"(%9 : $Builtin.Int64, %15 : $Builtin.Int64) : $Builtin.Int64, scope 92 // user: %17
  %17 = struct $UInt (%16 : $Builtin.Int64), scope 92 // user: %18
  %18 = struct $_SwiftArrayBodyStorage (%0 : $Int, %17 : $UInt), scope 92 // user: %19
  %19 = struct $_ArrayBody (%18 : $_SwiftArrayBodyStorage), scope 92 // user: %21
  %20 = ref_element_addr %6 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 92 // user: %21
  store %19 to %20 : $*_ArrayBody, scope 92       // id: %21
  %22 = tuple (), scope 92                        // user: %23
  return %22 : $(), scope 92                      // id: %23
} // end sil function '$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitF'


// _swift_stdlib_malloc_size, loc * "<compiler-generated>":0:0, scope 0
// clang name: _swift_stdlib_malloc_size
sil shared [serialized] [clang _swift_stdlib_malloc_size] @_swift_stdlib_malloc_size : $@convention(c) (UnsafeRawPointer) -> Int

sil_scope 93 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferVAByxGycfC : $@convention(method) <τ_0_0> (@thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0> }

// _ContiguousArrayBuffer.init(), loc * "<compiler-generated>":0:0, scope 93
sil public_external [serialized] @$ss22_ContiguousArrayBufferVAByxGycfC : $@convention(method) <Element> (@thin _ContiguousArrayBuffer<Element>.Type) -> @owned _ContiguousArrayBuffer<Element> {
bb0(%0 : $@thin _ContiguousArrayBuffer<Element>.Type):
  %1 = global_addr @_swiftEmptyArrayStorage : $*_SwiftEmptyArrayStorage, scope 93 // user: %2
  %2 = address_to_pointer [stack_protection] %1 : $*_SwiftEmptyArrayStorage to $Builtin.RawPointer, scope 93 // user: %3
  %3 = raw_pointer_to_ref %2 : $Builtin.RawPointer to $__EmptyArrayStorage, scope 93 // users: %6, %4
  %4 = upcast %3 : $__EmptyArrayStorage to $__ContiguousArrayStorageBase, scope 93 // user: %5
  %5 = struct $_ContiguousArrayBuffer<Element> (%4 : $__ContiguousArrayStorageBase), scope 93 // user: %7
  strong_retain %3 : $__EmptyArrayStorage, scope 93 // id: %6
  return %5 : $_ContiguousArrayBuffer<Element>, scope 93 // id: %7
} // end sil function '$ss22_ContiguousArrayBufferVAByxGycfC'

sil_scope 94 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV10_typeCheckyySnySiGF : $@convention(method) <τ_0_0> (Range<Int>, @guaranteed _ArrayBuffer<τ_0_0>) -> () }

// _ArrayBuffer._typeCheck(_:), loc * "<compiler-generated>":0:0, scope 94
sil public_external [serialized] @$ss12_ArrayBufferV10_typeCheckyySnySiGF : $@convention(method) <Element> (Range<Int>, @guaranteed _ArrayBuffer<Element>) -> () {
// %0                                             // users: %25, %24
// %1                                             // users: %100, %18
bb0(%0 : $Range<Int>, %1 : $_ArrayBuffer<Element>):
  %2 = metatype $@thick Element.Type, scope 94    // users: %11, %3
  %3 = builtin "canBeClass"<Element>(%2 : $@thick Element.Type) : $Builtin.Int8, scope 94 // users: %8, %5
  %4 = integer_literal $Builtin.Int8, 0, scope 94 // user: %5
  %5 = builtin "cmp_eq_Int8"(%3 : $Builtin.Int8, %4 : $Builtin.Int8) : $Builtin.Int1, scope 94 // user: %6
  cond_br %5, bb36, bb1, scope 94                 // id: %6

bb1:                                              // Preds: bb0
  %7 = integer_literal $Builtin.Int8, 1, scope 94 // user: %8
  %8 = builtin "cmp_eq_Int8"(%3 : $Builtin.Int8, %7 : $Builtin.Int8) : $Builtin.Int1, scope 94 // user: %9
  cond_br %8, bb5, bb2, scope 94                  // id: %9

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %10 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 94 // user: %11
  %11 = apply %10<Element>(%2) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 94 // user: %12
  %12 = struct_extract %11 : $Bool, #Bool._value, scope 94 // user: %13
  cond_br %12, bb4, bb3, scope 94                 // id: %13

bb3:                                              // Preds: bb2
  br bb37, scope 94                               // id: %14

bb4:                                              // Preds: bb2
  br bb6, scope 94                                // id: %15

bb5:                                              // Preds: bb1
  br bb6, scope 94                                // id: %16

bb6:                                              // Preds: bb5 bb4
  // function_ref _ArrayBuffer.needsElementTypeCheck.getter
  %17 = function_ref @$ss12_ArrayBufferV21needsElementTypeCheckSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 94 // user: %18
  %18 = apply %17<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 94 // user: %19
  %19 = struct_extract %18 : $Bool, #Bool._value, scope 94 // user: %21
  %20 = integer_literal $Builtin.Int1, 0, scope 94 // users: %90, %61, %50, %21
  %21 = builtin "int_expect_Int1"(%19 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 94 // user: %22
  cond_br %21, bb8, bb7, scope 94                 // id: %22

bb7:                                              // Preds: bb6
  br bb37, scope 94                               // id: %23

bb8:                                              // Preds: bb6
  %24 = struct_extract %0 : $Range<Int>, #Range.lowerBound, scope 94 // user: %26
  %25 = struct_extract %0 : $Range<Int>, #Range.upperBound, scope 94 // user: %27
  %26 = struct_extract %24 : $Int, #Int._value, scope 94 // users: %89, %82, %75, %70, %62, %53, %49, %46
  %27 = struct_extract %25 : $Int, #Int._value, scope 94 // users: %101, %89, %84, %77, %70, %53, %49, %46
  %28 = string_literal utf8 "Range requires lowerBound <= upperBound", scope 94 // user: %30
  %29 = integer_literal $Builtin.Word, 39, scope 94 // users: %35, %32
  %30 = builtin "ptrtoint_Word"(%28 : $Builtin.RawPointer) : $Builtin.Word, scope 94 // user: %32
  %31 = integer_literal $Builtin.Int8, 2, scope 94 // users: %128, %118, %108, %58, %35, %32
  %32 = struct $StaticString (%30 : $Builtin.Word, %29 : $Builtin.Word, %31 : $Builtin.Int8), scope 94 // users: %132, %112
  %33 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface", scope 94 // user: %34
  %34 = builtin "ptrtoint_Word"(%33 : $Builtin.RawPointer) : $Builtin.Word, scope 94 // user: %35
  %35 = struct $StaticString (%34 : $Builtin.Word, %29 : $Builtin.Word, %31 : $Builtin.Int8), scope 94 // users: %132, %122, %112
  %36 = integer_literal $Builtin.Int64, 16142, scope 94 // user: %37
  %37 = struct $UInt (%36 : $Builtin.Int64), scope 94 // users: %132, %112
  %38 = builtin "assert_configuration"() : $Builtin.Int32, scope 94 // users: %67, %43, %40
  %39 = integer_literal $Builtin.Int32, 0, scope 94 // user: %40
  %40 = builtin "cmp_eq_Int32"(%38 : $Builtin.Int32, %39 : $Builtin.Int32) : $Builtin.Int1, scope 94 // users: %61, %41
  cond_br %40, bb12, bb9, scope 94                // id: %41

bb9:                                              // Preds: bb8
  %42 = integer_literal $Builtin.Int32, 1, scope 94 // user: %43
  %43 = builtin "cmp_eq_Int32"(%38 : $Builtin.Int32, %42 : $Builtin.Int32) : $Builtin.Int1, scope 94 // user: %44
  cond_br %43, bb11, bb10, scope 94               // id: %44

bb10:                                             // Preds: bb9
  br bb14, scope 94                               // id: %45

bb11:                                             // Preds: bb9
  %46 = builtin "cmp_slt_Int64"(%27 : $Builtin.Int64, %26 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %47
  cond_fail %46 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 94 // id: %47
  br bb14, scope 94                               // id: %48

bb12:                                             // Preds: bb8
  %49 = builtin "cmp_slt_Int64"(%27 : $Builtin.Int64, %26 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %50
  %50 = builtin "int_expect_Int1"(%49 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 94 // user: %51
  cond_br %50, bb35, bb13, scope 94               // id: %51

bb13:                                             // Preds: bb12
  br bb14, scope 94                               // id: %52

bb14:                                             // Preds: bb13 bb11 bb10
  %53 = builtin "cmp_eq_Int64"(%26 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %54
  cond_br %53, bb34, bb15, scope 94               // id: %54

bb15:                                             // Preds: bb14
  %55 = string_literal utf8 "Index out of range", scope 94 // user: %57
  %56 = integer_literal $Builtin.Word, 18, scope 94 // user: %58
  %57 = builtin "ptrtoint_Word"(%55 : $Builtin.RawPointer) : $Builtin.Word, scope 94 // user: %58
  %58 = struct $StaticString (%57 : $Builtin.Word, %56 : $Builtin.Word, %31 : $Builtin.Int8), scope 94 // user: %122
  %59 = integer_literal $Builtin.Int64, 16002, scope 94 // user: %60
  %60 = struct $UInt (%59 : $Builtin.Int64), scope 94 // user: %122
  %61 = builtin "int_expect_Int1"(%40 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 94 // user: %65
  br bb16(%26 : $Builtin.Int64), scope 94         // id: %62

// %63                                            // users: %95, %84, %82, %77, %75, %64
bb16(%63 : $Builtin.Int64):                       // Preds: bb29 bb15
  %64 = struct $Int (%63 : $Builtin.Int64), scope 94 // user: %100
  cond_br %61, bb23, bb17, scope 94               // id: %65

bb17:                                             // Preds: bb16
  %66 = integer_literal $Builtin.Int32, 1, scope 94 // user: %67
  %67 = builtin "cmp_eq_Int32"(%38 : $Builtin.Int32, %66 : $Builtin.Int32) : $Builtin.Int1, scope 94 // users: %73, %68
  cond_br %67, bb19, bb18, scope 94               // id: %68

bb18:                                             // Preds: bb17
  br bb20, scope 94                               // id: %69

bb19:                                             // Preds: bb17
  %70 = builtin "cmp_slt_Int64"(%27 : $Builtin.Int64, %26 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %71
  cond_fail %70 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 94 // id: %71
  br bb20, scope 94                               // id: %72

bb20:                                             // Preds: bb19 bb18
  cond_br %67, bb22, bb21, scope 94               // id: %73

bb21:                                             // Preds: bb20
  br bb28, scope 94                               // id: %74

bb22:                                             // Preds: bb20
  %75 = builtin "cmp_slt_Int64"(%63 : $Builtin.Int64, %26 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %76
  cond_fail %75 : $Builtin.Int1, "Index out of bounds", scope 94 // id: %76
  %77 = builtin "cmp_slt_Int64"(%63 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %79
  %78 = integer_literal $Builtin.Int1, -1, scope 94 // user: %79
  %79 = builtin "xor_Int1"(%77 : $Builtin.Int1, %78 : $Builtin.Int1) : $Builtin.Int1, scope 94 // user: %80
  cond_fail %79 : $Builtin.Int1, "Index out of bounds", scope 94 // id: %80
  br bb28, scope 94                               // id: %81

bb23:                                             // Preds: bb16
  %82 = builtin "cmp_slt_Int64"(%63 : $Builtin.Int64, %26 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %83
  cond_br %82, bb32, bb24, scope 94               // id: %83

bb24:                                             // Preds: bb23
  %84 = builtin "cmp_slt_Int64"(%63 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %86
  %85 = integer_literal $Builtin.Int1, -1, scope 94 // user: %86
  %86 = builtin "int_expect_Int1"(%84 : $Builtin.Int1, %85 : $Builtin.Int1) : $Builtin.Int1, scope 94 // user: %87
  cond_br %86, bb26, bb25, scope 94               // id: %87

bb25:                                             // Preds: bb24
  br bb33, scope 94                               // id: %88

bb26:                                             // Preds: bb24
  %89 = builtin "cmp_slt_Int64"(%27 : $Builtin.Int64, %26 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %90
  %90 = builtin "int_expect_Int1"(%89 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 94 // user: %91
  cond_br %90, bb31, bb27, scope 94               // id: %91

bb27:                                             // Preds: bb26
  br bb28, scope 94                               // id: %92

bb28:                                             // Preds: bb27 bb22 bb21
  %93 = integer_literal $Builtin.Int64, 1, scope 94 // user: %95
  %94 = integer_literal $Builtin.Int1, -1, scope 94 // user: %95
  %95 = builtin "sadd_with_overflow_Int64"(%63 : $Builtin.Int64, %93 : $Builtin.Int64, %94 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 94 // users: %97, %96
  %96 = tuple_extract %95 : $(Builtin.Int64, Builtin.Int1), 0, scope 94 // users: %103, %101
  %97 = tuple_extract %95 : $(Builtin.Int64, Builtin.Int1), 1, scope 94 // user: %98
  cond_fail %97 : $Builtin.Int1, "arithmetic overflow", scope 94 // id: %98
  // function_ref _ArrayBuffer._typeCheckSlowPath(_:)
  %99 = function_ref @$ss12_ArrayBufferV18_typeCheckSlowPathyySiF : $@convention(method) <τ_0_0> (Int, @guaranteed _ArrayBuffer<τ_0_0>) -> (), scope 94 // user: %100
  %100 = apply %99<Element>(%64, %1) : $@convention(method) <τ_0_0> (Int, @guaranteed _ArrayBuffer<τ_0_0>) -> (), scope 94
  %101 = builtin "cmp_eq_Int64"(%96 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %102
  cond_br %101, bb30, bb29, scope 94              // id: %102

bb29:                                             // Preds: bb28
  br bb16(%96 : $Builtin.Int64), scope 94         // id: %103

bb30:                                             // Preds: bb28
  br bb37, scope 94                               // id: %104

bb31:                                             // Preds: bb26
  %105 = string_literal utf8 "Fatal error", scope 94 // user: %107
  %106 = integer_literal $Builtin.Word, 11, scope 94 // user: %108
  %107 = builtin "ptrtoint_Word"(%105 : $Builtin.RawPointer) : $Builtin.Word, scope 94 // user: %108
  %108 = struct $StaticString (%107 : $Builtin.Word, %106 : $Builtin.Word, %31 : $Builtin.Int8), scope 94 // user: %112
  %109 = integer_literal $Builtin.Int32, 1, scope 94 // user: %110
  %110 = struct $UInt32 (%109 : $Builtin.Int32), scope 94 // user: %112
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %111 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 94 // user: %112
  %112 = apply %111(%108, %32, %35, %37, %110) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 94
  unreachable , scope 94                          // id: %113

bb32:                                             // Preds: bb23
  br bb33, scope 94                               // id: %114

bb33:                                             // Preds: bb32 bb25
  %115 = string_literal utf8 "Fatal error", scope 94 // user: %117
  %116 = integer_literal $Builtin.Word, 11, scope 94 // user: %118
  %117 = builtin "ptrtoint_Word"(%115 : $Builtin.RawPointer) : $Builtin.Word, scope 94 // user: %118
  %118 = struct $StaticString (%117 : $Builtin.Word, %116 : $Builtin.Word, %31 : $Builtin.Int8), scope 94 // user: %122
  %119 = integer_literal $Builtin.Int32, 1, scope 94 // user: %120
  %120 = struct $UInt32 (%119 : $Builtin.Int32), scope 94 // user: %122
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %121 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 94 // user: %122
  %122 = apply %121(%118, %58, %35, %60, %120) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 94
  unreachable , scope 94                          // id: %123

bb34:                                             // Preds: bb14
  br bb37, scope 94                               // id: %124

bb35:                                             // Preds: bb12
  %125 = string_literal utf8 "Fatal error", scope 94 // user: %127
  %126 = integer_literal $Builtin.Word, 11, scope 94 // user: %128
  %127 = builtin "ptrtoint_Word"(%125 : $Builtin.RawPointer) : $Builtin.Word, scope 94 // user: %128
  %128 = struct $StaticString (%127 : $Builtin.Word, %126 : $Builtin.Word, %31 : $Builtin.Int8), scope 94 // user: %132
  %129 = integer_literal $Builtin.Int32, 1, scope 94 // user: %130
  %130 = struct $UInt32 (%129 : $Builtin.Int32), scope 94 // user: %132
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %131 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 94 // user: %132
  %132 = apply %131(%128, %32, %35, %37, %130) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 94
  unreachable , scope 94                          // id: %133

bb36:                                             // Preds: bb0
  br bb37, scope 94                               // id: %134

bb37:                                             // Preds: bb36 bb34 bb30 bb7 bb3
  %135 = tuple (), scope 94                       // user: %136
  return %135 : $(), scope 94                     // id: %136
} // end sil function '$ss12_ArrayBufferV10_typeCheckyySnySiGF'


// _CocoaArrayWrapper._copyContents(subRange:initializing:), loc * "<compiler-generated>":0:0, scope 0
sil @$ss18_CocoaArrayWrapperV13_copyContents8subRange12initializingSpyyXlGSnySiG_AFtF : $@convention(method) (Range<Int>, UnsafeMutablePointer<AnyObject>, @owned _CocoaArrayWrapper) -> UnsafeMutablePointer<AnyObject>

sil_scope 95 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF : $@convention(method) <τ_0_0> (Range<Int>, UnsafeMutablePointer<τ_0_0>, @owned _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0> }

// _ContiguousArrayBuffer._copyContents(subRange:initializing:), loc * "<compiler-generated>":0:0, scope 95
sil public_external [serialized] @$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF : $@convention(method) <Element> (Range<Int>, UnsafeMutablePointer<Element>, @owned _ContiguousArrayBuffer<Element>) -> UnsafeMutablePointer<Element> {
[%2: noescape v**]
// %0                                             // users: %4, %3
// %1                                             // users: %29, %22
// %2                                             // users: %25, %24, %14
bb0(%0 : $Range<Int>, %1 : $UnsafeMutablePointer<Element>, %2 : $_ContiguousArrayBuffer<Element>):
  %3 = struct_extract %0 : $Range<Int>, #Range.upperBound, scope 95 // user: %5
  %4 = struct_extract %0 : $Range<Int>, #Range.lowerBound, scope 95 // user: %6
  %5 = struct_extract %3 : $Int, #Int._value, scope 95 // user: %8
  %6 = struct_extract %4 : $Int, #Int._value, scope 95 // users: %16, %8
  %7 = integer_literal $Builtin.Int1, -1, scope 95 // user: %8
  %8 = builtin "ssub_with_overflow_Int64"(%5 : $Builtin.Int64, %6 : $Builtin.Int64, %7 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 95 // users: %10, %9
  %9 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 0, scope 95 // users: %30, %12
  %10 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 1, scope 95 // user: %11
  cond_fail %10 : $Builtin.Int1, "arithmetic overflow", scope 95 // id: %11
  %12 = struct $Int (%9 : $Builtin.Int64), scope 95 // user: %22
  // function_ref _ContiguousArrayBuffer.firstElementAddress.getter
  %13 = function_ref @$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 95 // user: %14
  %14 = apply %13<Element>(%2) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 95 // user: %15
  %15 = struct_extract %14 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 95 // user: %17
  %16 = builtin "truncOrBitCast_Int64_Word"(%6 : $Builtin.Int64) : $Builtin.Word, scope 95 // user: %18
  %17 = pointer_to_address %15 : $Builtin.RawPointer to [strict] $*Element, scope 95 // user: %18
  %18 = index_addr [stack_protection] %17 : $*Element, %16 : $Builtin.Word, scope 95 // user: %19
  %19 = address_to_pointer [stack_protection] %18 : $*Element to $Builtin.RawPointer, scope 95 // user: %20
  %20 = struct $UnsafePointer<Element> (%19 : $Builtin.RawPointer), scope 95 // user: %22
  // function_ref UnsafeMutablePointer.initialize(from:count:)
  %21 = function_ref @$sSp10initialize4from5countySPyxG_SitF : $@convention(method) <τ_0_0> (UnsafePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 95 // user: %22
  %22 = apply %21<Element>(%20, %12, %1) : $@convention(method) <τ_0_0> (UnsafePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 95
  // function_ref _ContiguousArrayBuffer.owner.getter
  %23 = function_ref @$ss22_ContiguousArrayBufferV5owneryXlvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> @owned AnyObject, scope 95 // user: %24
  %24 = apply %23<Element>(%2) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> @owned AnyObject, scope 95 // users: %28, %27
  %25 = struct_extract %2 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 95 // user: %26
  strong_release %25 : $__ContiguousArrayStorageBase, scope 95 // id: %26
  fix_lifetime %24 : $AnyObject, scope 95         // id: %27
  strong_release %24 : $AnyObject, scope 95       // id: %28
  %29 = struct_extract %1 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 95 // user: %31
  %30 = builtin "truncOrBitCast_Int64_Word"(%9 : $Builtin.Int64) : $Builtin.Word, scope 95 // user: %32
  %31 = pointer_to_address %29 : $Builtin.RawPointer to [strict] $*Element, scope 95 // user: %32
  %32 = index_addr [stack_protection] %31 : $*Element, %30 : $Builtin.Word, scope 95 // user: %33
  %33 = address_to_pointer [stack_protection] %32 : $*Element to $Builtin.RawPointer, scope 95 // user: %34
  %34 = struct $UnsafeMutablePointer<Element> (%33 : $Builtin.RawPointer), scope 95 // user: %35
  return %34 : $UnsafeMutablePointer<Element>, scope 95 // id: %35
} // end sil function '$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF'

sil_scope 96 { loc * "<compiler-generated>":0:0 parent @$sSLsE2geoiySbx_xtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool }

// static Comparable.>= infix(_:_:), loc * "<compiler-generated>":0:0, scope 96
sil public_external [serialized] @$sSLsE2geoiySbx_xtFZ : $@convention(method) <Self where Self : Comparable> (@in_guaranteed Self, @in_guaranteed Self, @thick Self.Type) -> Bool {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $*Self, %1 : $*Self, %2 : $@thick Self.Type):
  %3 = metatype $@thick Self.Type, scope 96       // user: %5
  %4 = witness_method $Self, #Comparable."<" : <Self where Self : Comparable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Comparable) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 96 // user: %5
  %5 = apply %4<Self>(%0, %1, %3) : $@convention(witness_method: Comparable) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 96 // user: %6
  %6 = struct_extract %5 : $Bool, #Bool._value, scope 96 // user: %8
  %7 = integer_literal $Builtin.Int1, -1, scope 96 // user: %8
  %8 = builtin "xor_Int1"(%6 : $Builtin.Int1, %7 : $Builtin.Int1) : $Builtin.Int1, scope 96 // user: %9
  %9 = struct $Bool (%8 : $Builtin.Int1), scope 96 // user: %10
  return %9 : $Bool, scope 96                     // id: %10
} // end sil function '$sSLsE2geoiySbx_xtFZ'


// _fatalErrorMessage(_:_:file:line:flags:), loc * "<compiler-generated>":0:0, scope 0
sil [noinline] [_semantics "programtermination_point"] @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never

sil_scope 97 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV21needsElementTypeCheckSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool }

// _ArrayBuffer.needsElementTypeCheck.getter, loc * "<compiler-generated>":0:0, scope 97
sil public_external [serialized] @$ss12_ArrayBufferV21needsElementTypeCheckSbvg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> Bool {
[%0: noescape **]
// %0                                             // user: %2
bb0(%0 : $_ArrayBuffer<Element>):
  // function_ref _ArrayBuffer._isNativeTypeChecked.getter
  %1 = function_ref @$ss12_ArrayBufferV20_isNativeTypeCheckedSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 97 // user: %2
  %2 = apply %1<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 97 // user: %3
  %3 = struct_extract %2 : $Bool, #Bool._value, scope 97 // user: %4
  cond_br %3, bb5, bb1, scope 97                  // id: %4

bb1:                                              // Preds: bb0
  %5 = metatype $@thick (any AnyObject).Type, scope 97 // user: %6
  checked_cast_br %5 : $@thick (any AnyObject).Type to Element.Type, bb3, bb2, scope 97 // id: %6

bb2:                                              // Preds: bb1
  %7 = integer_literal $Builtin.Int1, 0, scope 97 // user: %8
  br bb4(%7 : $Builtin.Int1), scope 97            // id: %8

bb3(%9 : $@thick Element.Type):                   // Preds: bb1
  %10 = integer_literal $Builtin.Int1, -1, scope 97 // user: %11
  br bb4(%10 : $Builtin.Int1), scope 97           // id: %11

// %12                                            // user: %14
bb4(%12 : $Builtin.Int1):                         // Preds: bb3 bb2
  %13 = integer_literal $Builtin.Int1, -1, scope 97 // user: %14
  %14 = builtin "xor_Int1"(%12 : $Builtin.Int1, %13 : $Builtin.Int1) : $Builtin.Int1, scope 97 // user: %15
  br bb6(%14 : $Builtin.Int1), scope 97           // id: %15

bb5:                                              // Preds: bb0
  %16 = integer_literal $Builtin.Int1, 0, scope 97 // user: %17
  br bb6(%16 : $Builtin.Int1), scope 97           // id: %17

// %18                                            // user: %19
bb6(%18 : $Builtin.Int1):                         // Preds: bb5 bb4
  %19 = struct $Bool (%18 : $Builtin.Int1), scope 97 // user: %20
  return %19 : $Bool, scope 97                    // id: %20
} // end sil function '$ss12_ArrayBufferV21needsElementTypeCheckSbvg'


// _ArrayBuffer._typeCheckSlowPath(_:), loc * "<compiler-generated>":0:0, scope 0
sil [noinline] @$ss12_ArrayBufferV18_typeCheckSlowPathyySiF : $@convention(method) <τ_0_0> (Int, @guaranteed _ArrayBuffer<τ_0_0>) -> ()

sil_scope 98 { loc * "<compiler-generated>":0:0 parent @$sSp10initialize4from5countySPyxG_SitF : $@convention(method) <τ_0_0> (UnsafePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> () }

// UnsafeMutablePointer.initialize(from:count:), loc * "<compiler-generated>":0:0, scope 98
sil public_external [serialized] @$sSp10initialize4from5countySPyxG_SitF : $@convention(method) <Pointee> (UnsafePointer<Pointee>, Int, UnsafeMutablePointer<Pointee>) -> () {
// %0                                             // users: %83, %53, %46
// %1                                             // users: %84, %37, %22
// %2                                             // users: %82, %36
bb0(%0 : $UnsafePointer<Pointee>, %1 : $Int, %2 : $UnsafeMutablePointer<Pointee>):
  %3 = string_literal utf8 "UnsafeMutablePointer.initialize with negative count", scope 98 // user: %5
  %4 = integer_literal $Builtin.Word, 51, scope 98 // user: %7
  %5 = builtin "ptrtoint_Word"(%3 : $Builtin.RawPointer) : $Builtin.Word, scope 98 // user: %7
  %6 = integer_literal $Builtin.Int8, 2, scope 98 // users: %92, %73, %30, %11, %7
  %7 = struct $StaticString (%5 : $Builtin.Word, %4 : $Builtin.Word, %6 : $Builtin.Int8), scope 98 // user: %96
  %8 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface", scope 98 // user: %10
  %9 = integer_literal $Builtin.Word, 39, scope 98 // user: %11
  %10 = builtin "ptrtoint_Word"(%8 : $Builtin.RawPointer) : $Builtin.Word, scope 98 // user: %11
  %11 = struct $StaticString (%10 : $Builtin.Word, %9 : $Builtin.Word, %6 : $Builtin.Int8), scope 98 // users: %96, %77
  %12 = integer_literal $Builtin.Int64, 24037, scope 98 // user: %13
  %13 = struct $UInt (%12 : $Builtin.Int64), scope 98 // user: %96
  %14 = builtin "assert_configuration"() : $Builtin.Int32, scope 98 // user: %16
  %15 = integer_literal $Builtin.Int32, 0, scope 98 // user: %16
  %16 = builtin "cmp_eq_Int32"(%14 : $Builtin.Int32, %15 : $Builtin.Int32) : $Builtin.Int1, scope 98 // user: %18
  %17 = integer_literal $Builtin.Int1, 0, scope 98 // users: %24, %18
  %18 = builtin "int_expect_Int1"(%16 : $Builtin.Int1, %17 : $Builtin.Int1) : $Builtin.Int1, scope 98 // users: %33, %19
  cond_br %18, bb2, bb1, scope 98                 // id: %19

bb1:                                              // Preds: bb0
  br bb4, scope 98                                // id: %20

bb2:                                              // Preds: bb0
  %21 = integer_literal $Builtin.Int64, 0, scope 98 // user: %23
  %22 = struct_extract %1 : $Int, #Int._value, scope 98 // user: %23
  %23 = builtin "cmp_slt_Int64"(%22 : $Builtin.Int64, %21 : $Builtin.Int64) : $Builtin.Int1, scope 98 // user: %24
  %24 = builtin "int_expect_Int1"(%23 : $Builtin.Int1, %17 : $Builtin.Int1) : $Builtin.Int1, scope 98 // user: %25
  cond_br %24, bb12, bb3, scope 98                // id: %25

bb3:                                              // Preds: bb2
  br bb4, scope 98                                // id: %26

bb4:                                              // Preds: bb3 bb1
  %27 = string_literal utf8 "UnsafeMutablePointer.initialize overlapping range", scope 98 // user: %29
  %28 = integer_literal $Builtin.Word, 49, scope 98 // user: %30
  %29 = builtin "ptrtoint_Word"(%27 : $Builtin.RawPointer) : $Builtin.Word, scope 98 // user: %30
  %30 = struct $StaticString (%29 : $Builtin.Word, %28 : $Builtin.Word, %6 : $Builtin.Int8), scope 98 // user: %77
  %31 = integer_literal $Builtin.Int64, 24039, scope 98 // user: %32
  %32 = struct $UInt (%31 : $Builtin.Int64), scope 98 // user: %77
  cond_br %18, bb6, bb5, scope 98                 // id: %33

bb5:                                              // Preds: bb4
  br bb11, scope 98                               // id: %34

bb6:                                              // Preds: bb4
  %35 = metatype $@thick UnsafePointer<Pointee>.Type, scope 98 // users: %63, %48
  %36 = struct_extract %2 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 98 // users: %60, %39
  %37 = struct_extract %1 : $Int, #Int._value, scope 98 // user: %38
  %38 = builtin "truncOrBitCast_Int64_Word"(%37 : $Builtin.Int64) : $Builtin.Word, scope 98 // users: %55, %40
  %39 = pointer_to_address %36 : $Builtin.RawPointer to [strict] $*Pointee, scope 98 // user: %40
  %40 = index_addr [stack_protection] %39 : $*Pointee, %38 : $Builtin.Word, scope 98 // user: %41
  %41 = address_to_pointer [stack_protection] %40 : $*Pointee to $Builtin.RawPointer, scope 98 // user: %42
  %42 = struct $UnsafePointer<Pointee> (%41 : $Builtin.RawPointer), scope 98 // user: %44
  %43 = alloc_stack $UnsafePointer<Pointee>, scope 98 // users: %50, %48, %44
  store %42 to %43 : $*UnsafePointer<Pointee>, scope 98 // id: %44
  %45 = alloc_stack $UnsafePointer<Pointee>, scope 98 // users: %49, %48, %46
  store %0 to %45 : $*UnsafePointer<Pointee>, scope 98 // id: %46
  // function_ref static Comparable.<= infix(_:_:)
  %47 = function_ref @$sSLsE2leoiySbx_xtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 98 // users: %63, %48
  %48 = apply %47<UnsafePointer<Pointee>>(%43, %45, %35) : $@convention(method) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 98 // user: %51
  dealloc_stack %45 : $*UnsafePointer<Pointee>, scope 98 // id: %49
  dealloc_stack %43 : $*UnsafePointer<Pointee>, scope 98 // id: %50
  %51 = struct_extract %48 : $Bool, #Bool._value, scope 98 // user: %52
  cond_br %51, bb10, bb7, scope 98                // id: %52

bb7:                                              // Preds: bb6
  %53 = struct_extract %0 : $UnsafePointer<Pointee>, #UnsafePointer._rawValue, scope 98 // user: %54
  %54 = pointer_to_address %53 : $Builtin.RawPointer to [strict] $*Pointee, scope 98 // user: %55
  %55 = index_addr [stack_protection] %54 : $*Pointee, %38 : $Builtin.Word, scope 98 // user: %56
  %56 = address_to_pointer [stack_protection] %55 : $*Pointee to $Builtin.RawPointer, scope 98 // user: %57
  %57 = struct $UnsafePointer<Pointee> (%56 : $Builtin.RawPointer), scope 98 // user: %59
  %58 = alloc_stack $UnsafePointer<Pointee>, scope 98 // users: %65, %63, %59
  store %57 to %58 : $*UnsafePointer<Pointee>, scope 98 // id: %59
  %60 = struct $UnsafePointer<Pointee> (%36 : $Builtin.RawPointer), scope 98 // user: %62
  %61 = alloc_stack $UnsafePointer<Pointee>, scope 98 // users: %64, %63, %62
  store %60 to %61 : $*UnsafePointer<Pointee>, scope 98 // id: %62
  %63 = apply %47<UnsafePointer<Pointee>>(%58, %61, %35) : $@convention(method) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 98 // user: %66
  dealloc_stack %61 : $*UnsafePointer<Pointee>, scope 98 // id: %64
  dealloc_stack %58 : $*UnsafePointer<Pointee>, scope 98 // id: %65
  %66 = struct_extract %63 : $Bool, #Bool._value, scope 98 // user: %68
  %67 = integer_literal $Builtin.Int1, -1, scope 98 // user: %68
  %68 = builtin "int_expect_Int1"(%66 : $Builtin.Int1, %67 : $Builtin.Int1) : $Builtin.Int1, scope 98 // user: %69
  cond_br %68, bb9, bb8, scope 98                 // id: %69

bb8:                                              // Preds: bb7
  %70 = string_literal utf8 "Fatal error", scope 98 // user: %72
  %71 = integer_literal $Builtin.Word, 11, scope 98 // user: %73
  %72 = builtin "ptrtoint_Word"(%70 : $Builtin.RawPointer) : $Builtin.Word, scope 98 // user: %73
  %73 = struct $StaticString (%72 : $Builtin.Word, %71 : $Builtin.Word, %6 : $Builtin.Int8), scope 98 // user: %77
  %74 = integer_literal $Builtin.Int32, 1, scope 98 // user: %75
  %75 = struct $UInt32 (%74 : $Builtin.Int32), scope 98 // user: %77
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %76 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 98 // user: %77
  %77 = apply %76(%73, %30, %11, %32, %75) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 98
  unreachable , scope 98                          // id: %78

bb9:                                              // Preds: bb7
  br bb11, scope 98                               // id: %79

bb10:                                             // Preds: bb6
  br bb11, scope 98                               // id: %80

bb11:                                             // Preds: bb10 bb9 bb5
  %81 = metatype $@thick Pointee.Type, scope 98   // user: %86
  %82 = struct_extract %2 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 98 // user: %86
  %83 = struct_extract %0 : $UnsafePointer<Pointee>, #UnsafePointer._rawValue, scope 98 // user: %86
  %84 = struct_extract %1 : $Int, #Int._value, scope 98 // user: %85
  %85 = builtin "truncOrBitCast_Int64_Word"(%84 : $Builtin.Int64) : $Builtin.Word, scope 98 // user: %86
  %86 = builtin "copyArray"<Pointee>(%81 : $@thick Pointee.Type, %82 : $Builtin.RawPointer, %83 : $Builtin.RawPointer, %85 : $Builtin.Word) : $(), scope 98
  %87 = tuple (), scope 98                        // user: %88
  return %87 : $(), scope 98                      // id: %88

bb12:                                             // Preds: bb2
  %89 = string_literal utf8 "Fatal error", scope 98 // user: %91
  %90 = integer_literal $Builtin.Word, 11, scope 98 // user: %92
  %91 = builtin "ptrtoint_Word"(%89 : $Builtin.RawPointer) : $Builtin.Word, scope 98 // user: %92
  %92 = struct $StaticString (%91 : $Builtin.Word, %90 : $Builtin.Word, %6 : $Builtin.Int8), scope 98 // user: %96
  %93 = integer_literal $Builtin.Int32, 1, scope 98 // user: %94
  %94 = struct $UInt32 (%93 : $Builtin.Int32), scope 98 // user: %96
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %95 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 98 // user: %96
  %96 = apply %95(%92, %7, %11, %13, %94) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 98
  unreachable , scope 98                          // id: %97
} // end sil function '$sSp10initialize4from5countySPyxG_SitF'

sil_scope 99 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV5owneryXlvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> @owned AnyObject }

// _ContiguousArrayBuffer.owner.getter, loc * "<compiler-generated>":0:0, scope 99
sil public_external [serialized] @$ss22_ContiguousArrayBufferV5owneryXlvg : $@convention(method) <Element> (@guaranteed _ContiguousArrayBuffer<Element>) -> @owned AnyObject {
[%0: escape v** => %r.v**, escape v**.c*.v** => %r.v**.c*.v**]
// %0                                             // user: %1
bb0(%0 : $_ContiguousArrayBuffer<Element>):
  %1 = struct_extract %0 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 99 // users: %3, %2
  %2 = init_existential_ref %1 : $__ContiguousArrayStorageBase : $__ContiguousArrayStorageBase, $AnyObject, scope 99 // user: %4
  strong_retain %1 : $__ContiguousArrayStorageBase, scope 99 // id: %3
  return %2 : $AnyObject, scope 99                // id: %4
} // end sil function '$ss22_ContiguousArrayBufferV5owneryXlvg'

sil_scope 100 { loc * "<compiler-generated>":0:0 parent @$sSLsE2leoiySbx_xtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool }

// static Comparable.<= infix(_:_:), loc * "<compiler-generated>":0:0, scope 100
sil public_external [serialized] @$sSLsE2leoiySbx_xtFZ : $@convention(method) <Self where Self : Comparable> (@in_guaranteed Self, @in_guaranteed Self, @thick Self.Type) -> Bool {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $*Self, %1 : $*Self, %2 : $@thick Self.Type):
  %3 = metatype $@thick Self.Type, scope 100      // user: %5
  %4 = witness_method $Self, #Comparable."<" : <Self where Self : Comparable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Comparable) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 100 // user: %5
  %5 = apply %4<Self>(%1, %0, %3) : $@convention(witness_method: Comparable) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 100 // user: %6
  %6 = struct_extract %5 : $Bool, #Bool._value, scope 100 // user: %8
  %7 = integer_literal $Builtin.Int1, -1, scope 100 // user: %8
  %8 = builtin "xor_Int1"(%6 : $Builtin.Int1, %7 : $Builtin.Int1) : $Builtin.Int1, scope 100 // user: %9
  %9 = struct $Bool (%8 : $Builtin.Int1), scope 100 // user: %10
  return %9 : $Bool, scope 100                    // id: %10
} // end sil function '$sSLsE2leoiySbx_xtFZ'

sil_scope 101 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV20_isNativeTypeCheckedSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool }

// _ArrayBuffer._isNativeTypeChecked.getter, loc * "<compiler-generated>":0:0, scope 101
sil public_external [serialized] @$ss12_ArrayBufferV20_isNativeTypeCheckedSbvg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> Bool {
[%0: noescape **]
// %0                                             // user: %16
bb0(%0 : $_ArrayBuffer<Element>):
  %1 = metatype $@thick Element.Type, scope 101   // users: %10, %2
  %2 = builtin "canBeClass"<Element>(%1 : $@thick Element.Type) : $Builtin.Int8, scope 101 // users: %7, %4
  %3 = integer_literal $Builtin.Int8, 0, scope 101 // user: %4
  %4 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %3 : $Builtin.Int8) : $Builtin.Int1, scope 101 // user: %5
  cond_br %4, bb7, bb1, scope 101                 // id: %5

bb1:                                              // Preds: bb0
  %6 = integer_literal $Builtin.Int8, 1, scope 101 // user: %7
  %7 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %6 : $Builtin.Int8) : $Builtin.Int1, scope 101 // user: %8
  cond_br %7, bb5, bb2, scope 101                 // id: %8

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %9 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 101 // user: %10
  %10 = apply %9<Element>(%1) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 101 // user: %11
  %11 = struct_extract %10 : $Bool, #Bool._value, scope 101 // user: %12
  cond_br %11, bb4, bb3, scope 101                // id: %12

bb3:                                              // Preds: bb2
  br bb8, scope 101                               // id: %13

bb4:                                              // Preds: bb2
  br bb6, scope 101                               // id: %14

bb5:                                              // Preds: bb1
  br bb6, scope 101                               // id: %15

bb6:                                              // Preds: bb5 bb4
  %16 = struct_extract %0 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 101 // user: %17
  %17 = struct_extract %16 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 101 // user: %18
  %18 = bridge_object_to_word %17 : $Builtin.BridgeObject to $Builtin.Word, scope 101 // user: %19
  %19 = builtin "zextOrBitCast_Word_Int64"(%18 : $Builtin.Word) : $Builtin.Int64, scope 101 // user: %21
  %20 = integer_literal $Builtin.Int64, -4611686018427387901, scope 101 // user: %21
  %21 = builtin "and_Int64"(%19 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int64, scope 101 // user: %23
  %22 = integer_literal $Builtin.Int64, 0, scope 101 // user: %23
  %23 = builtin "cmp_eq_Int64"(%21 : $Builtin.Int64, %22 : $Builtin.Int64) : $Builtin.Int1, scope 101 // user: %24
  br bb9(%23 : $Builtin.Int1), scope 101          // id: %24

bb7:                                              // Preds: bb0
  br bb8, scope 101                               // id: %25

bb8:                                              // Preds: bb7 bb3
  %26 = integer_literal $Builtin.Int1, -1, scope 101 // user: %27
  br bb9(%26 : $Builtin.Int1), scope 101          // id: %27

// %28                                            // user: %29
bb9(%28 : $Builtin.Int1):                         // Preds: bb8 bb6
  %29 = struct $Bool (%28 : $Builtin.Int1), scope 101 // user: %30
  return %29 : $Bool, scope 101                   // id: %30
} // end sil function '$ss12_ArrayBufferV20_isNativeTypeCheckedSbvg'


// _stdlib_isOSVersionAtLeast(_:_:_:), loc * "<compiler-generated>":0:0, scope 0
sil [readnone] [_semantics "availability.osversion"] @$ss26_stdlib_isOSVersionAtLeastyBi1_Bw_BwBwtF : $@convention(thin) (Builtin.Word, Builtin.Word, Builtin.Word) -> Builtin.Int1

sil_scope 102 { loc * "<compiler-generated>":0:0 parent @$ss41__SwiftNativeNSArrayWithContiguousStorageCABycfC : $@convention(method) (@thick __SwiftNativeNSArrayWithContiguousStorage.Type) -> @owned __SwiftNativeNSArrayWithContiguousStorage }

// __SwiftNativeNSArrayWithContiguousStorage.__allocating_init(), loc * "<compiler-generated>":0:0, scope 102
sil public_external [serialized] [exact_self_class] @$ss41__SwiftNativeNSArrayWithContiguousStorageCABycfC : $@convention(method) (@thick __SwiftNativeNSArrayWithContiguousStorage.Type) -> @owned __SwiftNativeNSArrayWithContiguousStorage {
bb0(%0 : $@thick __SwiftNativeNSArrayWithContiguousStorage.Type):
  %1 = alloc_ref $__SwiftNativeNSArrayWithContiguousStorage, scope 102 // user: %2
  return %1 : $__SwiftNativeNSArrayWithContiguousStorage, scope 102 // id: %2
} // end sil function '$ss41__SwiftNativeNSArrayWithContiguousStorageCABycfC'

sil_scope 103 { loc * "<compiler-generated>":0:0 parent @$ss23_ContiguousArrayStorageC16_doNotCallMeBaseAByxGyt_tcfC : $@convention(method) <τ_0_0> (@thick _ContiguousArrayStorage<τ_0_0>.Type) -> @owned _ContiguousArrayStorage<τ_0_0> }

// _ContiguousArrayStorage.__allocating_init(_doNotCallMeBase:), loc * "<compiler-generated>":0:0, scope 103
sil public_external [serialized] [exact_self_class] @$ss23_ContiguousArrayStorageC16_doNotCallMeBaseAByxGyt_tcfC : $@convention(method) <Element> (@thick _ContiguousArrayStorage<Element>.Type) -> @owned _ContiguousArrayStorage<Element> {
bb0(%0 : $@thick _ContiguousArrayStorage<Element>.Type):
  %1 = alloc_ref $_ContiguousArrayStorage<Element>, scope 103 // user: %3
  // function_ref _ContiguousArrayStorage.init(_doNotCallMeBase:)
  %2 = function_ref @$ss23_ContiguousArrayStorageC16_doNotCallMeBaseAByxGyt_tcfc : $@convention(method) <τ_0_0> (@owned _ContiguousArrayStorage<τ_0_0>) -> @owned _ContiguousArrayStorage<τ_0_0>, scope 103 // user: %3
  %3 = apply %2<Element>(%1) : $@convention(method) <τ_0_0> (@owned _ContiguousArrayStorage<τ_0_0>) -> @owned _ContiguousArrayStorage<τ_0_0>, scope 103 // user: %4
  return %3 : $_ContiguousArrayStorage<Element>, scope 103 // id: %4
} // end sil function '$ss23_ContiguousArrayStorageC16_doNotCallMeBaseAByxGyt_tcfC'

sil_scope 104 { loc * "<compiler-generated>":0:0 parent @$ss23_ContiguousArrayStorageC16canStoreElements13ofDynamicTypeSbypXp_tF : $@convention(method) <τ_0_0> (@thick any Any.Type, @guaranteed _ContiguousArrayStorage<τ_0_0>) -> Bool }

// _ContiguousArrayStorage.canStoreElements(ofDynamicType:), loc * "<compiler-generated>":0:0, scope 104
sil public_external [serialized] @$ss23_ContiguousArrayStorageC16canStoreElements13ofDynamicTypeSbypXp_tF : $@convention(method) <Element> (@thick any Any.Type, @guaranteed _ContiguousArrayStorage<Element>) -> Bool {
[%1: noescape **]
// %0                                             // user: %2
bb0(%0 : $@thick any Any.Type, %1 : $_ContiguousArrayStorage<Element>):
  checked_cast_br %0 : $@thick any Any.Type to Element.Type, bb2, bb1, scope 104 // id: %2

bb1:                                              // Preds: bb0
  %3 = integer_literal $Builtin.Int1, 0, scope 104 // user: %4
  br bb3(%3 : $Builtin.Int1), scope 104           // id: %4

bb2(%5 : $@thick Element.Type):                   // Preds: bb0
  %6 = integer_literal $Builtin.Int1, -1, scope 104 // user: %7
  br bb3(%6 : $Builtin.Int1), scope 104           // id: %7

// %8                                             // user: %9
bb3(%8 : $Builtin.Int1):                          // Preds: bb2 bb1
  %9 = struct $Bool (%8 : $Builtin.Int1), scope 104 // user: %10
  return %9 : $Bool, scope 104                    // id: %10
} // end sil function '$ss23_ContiguousArrayStorageC16canStoreElements13ofDynamicTypeSbypXp_tF'

sil_scope 105 { loc * "<compiler-generated>":0:0 parent @$ss23_ContiguousArrayStorageC17staticElementTypeypXpvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayStorage<τ_0_0>) -> @thick any Any.Type }

// _ContiguousArrayStorage.staticElementType.getter, loc * "<compiler-generated>":0:0, scope 105
sil public_external [serialized] @$ss23_ContiguousArrayStorageC17staticElementTypeypXpvg : $@convention(method) <Element> (@guaranteed _ContiguousArrayStorage<Element>) -> @thick any Any.Type {
[%0: noescape **]
bb0(%0 : $_ContiguousArrayStorage<Element>):
  %1 = metatype $@thick Element.Type, scope 105   // user: %2
  %2 = init_existential_metatype %1 : $@thick Element.Type, $@thick any Any.Type, scope 105 // user: %3
  return %2 : $@thick any Any.Type, scope 105     // id: %3
} // end sil function '$ss23_ContiguousArrayStorageC17staticElementTypeypXpvg'

sil_scope 106 { loc * "<compiler-generated>":0:0 parent @$ss23_ContiguousArrayStorageCfD : $@convention(method) <τ_0_0> (@owned _ContiguousArrayStorage<τ_0_0>) -> () }

// _ContiguousArrayStorage.__deallocating_deinit, loc * "<compiler-generated>":0:0, scope 106
sil public_external [serialized] @$ss23_ContiguousArrayStorageCfD : $@convention(method) <Element> (@owned _ContiguousArrayStorage<Element>) -> () {
[%0: noescape, noescape c*.v**]
// %0                                             // user: %2
bb0(%0 : $_ContiguousArrayStorage<Element>):
  // function_ref _ContiguousArrayStorage.deinit
  %1 = function_ref @$ss23_ContiguousArrayStorageCfd : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayStorage<τ_0_0>) -> @owned Builtin.NativeObject, scope 106 // user: %2
  %2 = apply %1<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayStorage<τ_0_0>) -> @owned Builtin.NativeObject, scope 106 // user: %3
  %3 = unchecked_ref_cast %2 : $Builtin.NativeObject to $_ContiguousArrayStorage<Element>, scope 106 // user: %4
  dealloc_ref %3 : $_ContiguousArrayStorage<Element>, scope 106 // id: %4
  %5 = tuple (), scope 106                        // user: %6
  return %5 : $(), scope 106                      // id: %6
} // end sil function '$ss23_ContiguousArrayStorageCfD'


// _ContiguousArrayStorage.init(_doNotCallMeBase:), loc * "<compiler-generated>":0:0, scope 0
sil [serialized] @$ss23_ContiguousArrayStorageC16_doNotCallMeBaseAByxGyt_tcfc : $@convention(method) <τ_0_0> (@owned _ContiguousArrayStorage<τ_0_0>) -> @owned _ContiguousArrayStorage<τ_0_0>

sil_scope 107 { loc * "<compiler-generated>":0:0 parent @$ss23_ContiguousArrayStorageCfd : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayStorage<τ_0_0>) -> @owned Builtin.NativeObject }

// _ContiguousArrayStorage.deinit, loc * "<compiler-generated>":0:0, scope 107
sil public_external [serialized] @$ss23_ContiguousArrayStorageCfd : $@convention(method) <Element> (@guaranteed _ContiguousArrayStorage<Element>) -> @owned Builtin.NativeObject {
[%0: escape => %r, escape c*.v** => %r.c*.v**]
// %0                                             // users: %14, %13, %3, %2
bb0(%0 : $_ContiguousArrayStorage<Element>):
  // function_ref _ContiguousArrayStorage._elementPointer.getter
  %1 = function_ref @$ss23_ContiguousArrayStorageC15_elementPointerSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayStorage<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 107 // user: %2
  %2 = apply %1<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayStorage<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 107 // user: %12
  %3 = upcast %0 : $_ContiguousArrayStorage<Element> to $__ContiguousArrayStorageBase, scope 107 // user: %4
  %4 = ref_element_addr %3 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 107 // user: %5
  %5 = struct_element_addr %4 : $*_ArrayBody, #_ArrayBody._storage, scope 107 // user: %6
  %6 = struct_element_addr %5 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 107 // user: %7
  %7 = struct_element_addr %6 : $*Int, #Int._value, scope 107 // user: %8
  %8 = load %7 : $*Builtin.Int64, scope 107       // user: %9
  %9 = builtin "assumeNonNegative_Int64"(%8 : $Builtin.Int64) : $Builtin.Int64, scope 107 // user: %10
  %10 = struct $Int (%9 : $Builtin.Int64), scope 107 // user: %12
  // function_ref UnsafeMutablePointer.deinitialize(count:)
  %11 = function_ref @$sSp12deinitialize5countSvSi_tF : $@convention(method) <τ_0_0> (Int, UnsafeMutablePointer<τ_0_0>) -> UnsafeMutableRawPointer, scope 107 // user: %12
  %12 = apply %11<Element>(%10, %2) : $@convention(method) <τ_0_0> (Int, UnsafeMutablePointer<τ_0_0>) -> UnsafeMutableRawPointer, scope 107
  fix_lifetime %0 : $_ContiguousArrayStorage<Element>, scope 107 // id: %13
  %14 = unchecked_ref_cast %0 : $_ContiguousArrayStorage<Element> to $Builtin.NativeObject, scope 107 // user: %15
  return %14 : $Builtin.NativeObject, scope 107   // id: %15
} // end sil function '$ss23_ContiguousArrayStorageCfd'

sil_scope 108 { loc * "<compiler-generated>":0:0 parent @$ss30_isBridgedVerbatimToObjectiveCySbxmlF : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool }

// _isBridgedVerbatimToObjectiveC<A>(_:), loc * "<compiler-generated>":0:0, scope 108
sil public_external [serialized] @$ss30_isBridgedVerbatimToObjectiveCySbxmlF : $@convention(thin) <T> (@thick T.Type) -> Bool {
bb0(%0 : $@thick T.Type):
  %1 = metatype $@thick T.Type, scope 108         // users: %10, %2
  %2 = builtin "canBeClass"<T>(%1 : $@thick T.Type) : $Builtin.Int8, scope 108 // users: %7, %4
  %3 = integer_literal $Builtin.Int8, 0, scope 108 // user: %4
  %4 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %3 : $Builtin.Int8) : $Builtin.Int1, scope 108 // user: %5
  cond_br %4, bb4, bb1, scope 108                 // id: %5

bb1:                                              // Preds: bb0
  %6 = integer_literal $Builtin.Int8, 1, scope 108 // user: %7
  %7 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %6 : $Builtin.Int8) : $Builtin.Int1, scope 108 // user: %8
  cond_br %7, bb3, bb2, scope 108                 // id: %8

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %9 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 108 // user: %10
  %10 = apply %9<T>(%1) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 108 // user: %11
  br bb5(%10 : $Bool), scope 108                  // id: %11

bb3:                                              // Preds: bb1
  %12 = integer_literal $Builtin.Int1, -1, scope 108 // user: %13
  %13 = struct $Bool (%12 : $Builtin.Int1), scope 108 // user: %14
  br bb5(%13 : $Bool), scope 108                  // id: %14

bb4:                                              // Preds: bb0
  %15 = integer_literal $Builtin.Int1, 0, scope 108 // user: %16
  %16 = struct $Bool (%15 : $Builtin.Int1), scope 108 // user: %17
  br bb5(%16 : $Bool), scope 108                  // id: %17

// %18                                            // user: %19
bb5(%18 : $Bool):                                 // Preds: bb4 bb3 bb2
  return %18 : $Bool, scope 108                   // id: %19
} // end sil function '$ss30_isBridgedVerbatimToObjectiveCySbxmlF'

sil_scope 109 { loc * "<compiler-generated>":0:0 parent @$ss23_ContiguousArrayStorageC15_elementPointerSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayStorage<τ_0_0>) -> UnsafeMutablePointer<τ_0_0> }

// _ContiguousArrayStorage._elementPointer.getter, loc * "<compiler-generated>":0:0, scope 109
sil public_external [serialized] @$ss23_ContiguousArrayStorageC15_elementPointerSpyxGvg : $@convention(method) <Element> (@guaranteed _ContiguousArrayStorage<Element>) -> UnsafeMutablePointer<Element> {
[%0: noescape, escape c*.v** => %r.s0.v**]
// %0                                             // user: %1
bb0(%0 : $_ContiguousArrayStorage<Element>):
  %1 = ref_tail_addr %0 : $_ContiguousArrayStorage<Element>, $Element, scope 109 // user: %2
  %2 = address_to_pointer %1 : $*Element to $Builtin.RawPointer, scope 109 // user: %3
  %3 = struct $UnsafeMutablePointer<Element> (%2 : $Builtin.RawPointer), scope 109 // user: %4
  return %3 : $UnsafeMutablePointer<Element>, scope 109 // id: %4
} // end sil function '$ss23_ContiguousArrayStorageC15_elementPointerSpyxGvg'

sil_scope 110 { loc * "<compiler-generated>":0:0 parent @$sSp12deinitialize5countSvSi_tF : $@convention(method) <τ_0_0> (Int, UnsafeMutablePointer<τ_0_0>) -> UnsafeMutableRawPointer }

// UnsafeMutablePointer.deinitialize(count:), loc * "<compiler-generated>":0:0, scope 110
sil public_external [serialized] @$sSp12deinitialize5countSvSi_tF : $@convention(method) <Pointee> (Int, UnsafeMutablePointer<Pointee>) -> UnsafeMutableRawPointer {
[%1: escape v** => %r.s0.v**]
// %0                                             // users: %28, %21
// %1                                             // user: %27
bb0(%0 : $Int, %1 : $UnsafeMutablePointer<Pointee>):
  %2 = string_literal utf8 "UnsafeMutablePointer.deinitialize with negative count", scope 110 // user: %4
  %3 = integer_literal $Builtin.Word, 53, scope 110 // user: %6
  %4 = builtin "ptrtoint_Word"(%2 : $Builtin.RawPointer) : $Builtin.Word, scope 110 // user: %6
  %5 = integer_literal $Builtin.Int8, 2, scope 110 // users: %36, %10, %6
  %6 = struct $StaticString (%4 : $Builtin.Word, %3 : $Builtin.Word, %5 : $Builtin.Int8), scope 110 // user: %40
  %7 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface", scope 110 // user: %9
  %8 = integer_literal $Builtin.Word, 39, scope 110 // user: %10
  %9 = builtin "ptrtoint_Word"(%7 : $Builtin.RawPointer) : $Builtin.Word, scope 110 // user: %10
  %10 = struct $StaticString (%9 : $Builtin.Word, %8 : $Builtin.Word, %5 : $Builtin.Int8), scope 110 // user: %40
  %11 = integer_literal $Builtin.Int64, 24071, scope 110 // user: %12
  %12 = struct $UInt (%11 : $Builtin.Int64), scope 110 // user: %40
  %13 = builtin "assert_configuration"() : $Builtin.Int32, scope 110 // user: %15
  %14 = integer_literal $Builtin.Int32, 0, scope 110 // user: %15
  %15 = builtin "cmp_eq_Int32"(%13 : $Builtin.Int32, %14 : $Builtin.Int32) : $Builtin.Int1, scope 110 // user: %17
  %16 = integer_literal $Builtin.Int1, 0, scope 110 // users: %23, %17
  %17 = builtin "int_expect_Int1"(%15 : $Builtin.Int1, %16 : $Builtin.Int1) : $Builtin.Int1, scope 110 // user: %18
  cond_br %17, bb2, bb1, scope 110                // id: %18

bb1:                                              // Preds: bb0
  br bb4, scope 110                               // id: %19

bb2:                                              // Preds: bb0
  %20 = integer_literal $Builtin.Int64, 0, scope 110 // user: %22
  %21 = struct_extract %0 : $Int, #Int._value, scope 110 // user: %22
  %22 = builtin "cmp_slt_Int64"(%21 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int1, scope 110 // user: %23
  %23 = builtin "int_expect_Int1"(%22 : $Builtin.Int1, %16 : $Builtin.Int1) : $Builtin.Int1, scope 110 // user: %24
  cond_br %23, bb5, bb3, scope 110                // id: %24

bb3:                                              // Preds: bb2
  br bb4, scope 110                               // id: %25

bb4:                                              // Preds: bb3 bb1
  %26 = metatype $@thick Pointee.Type, scope 110  // user: %30
  %27 = struct_extract %1 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 110 // users: %31, %30
  %28 = struct_extract %0 : $Int, #Int._value, scope 110 // user: %29
  %29 = builtin "truncOrBitCast_Int64_Word"(%28 : $Builtin.Int64) : $Builtin.Word, scope 110 // user: %30
  %30 = builtin "destroyArray"<Pointee>(%26 : $@thick Pointee.Type, %27 : $Builtin.RawPointer, %29 : $Builtin.Word) : $(), scope 110
  %31 = struct $UnsafeMutableRawPointer (%27 : $Builtin.RawPointer), scope 110 // user: %32
  return %31 : $UnsafeMutableRawPointer, scope 110 // id: %32

bb5:                                              // Preds: bb2
  %33 = string_literal utf8 "Fatal error", scope 110 // user: %35
  %34 = integer_literal $Builtin.Word, 11, scope 110 // user: %36
  %35 = builtin "ptrtoint_Word"(%33 : $Builtin.RawPointer) : $Builtin.Word, scope 110 // user: %36
  %36 = struct $StaticString (%35 : $Builtin.Word, %34 : $Builtin.Word, %5 : $Builtin.Int8), scope 110 // user: %40
  %37 = integer_literal $Builtin.Int32, 1, scope 110 // user: %38
  %38 = struct $UInt32 (%37 : $Builtin.Int32), scope 110 // user: %40
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %39 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 110 // user: %40
  %40 = apply %39(%36, %6, %10, %12, %38) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 110
  unreachable , scope 110                         // id: %41
} // end sil function '$sSp12deinitialize5countSvSi_tF'

sil_scope 111 { loc * "<compiler-generated>":0:0 parent @$ss41__SwiftNativeNSArrayWithContiguousStorageCfD : $@convention(method) (@owned __SwiftNativeNSArrayWithContiguousStorage) -> () }

// __SwiftNativeNSArrayWithContiguousStorage.__deallocating_deinit, loc * "<compiler-generated>":0:0, scope 111
sil public_external [serialized] @$ss41__SwiftNativeNSArrayWithContiguousStorageCfD : $@convention(method) (@owned __SwiftNativeNSArrayWithContiguousStorage) -> () {
[%0: noescape **]
// %0                                             // user: %1
bb0(%0 : $__SwiftNativeNSArrayWithContiguousStorage):
  dealloc_ref %0 : $__SwiftNativeNSArrayWithContiguousStorage, scope 111 // id: %1
  %2 = tuple (), scope 111                        // user: %3
  return %2 : $(), scope 111                      // id: %3
} // end sil function '$ss41__SwiftNativeNSArrayWithContiguousStorageCfD'

sil_scope 112 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV16beginCOWMutationSbyF : $@convention(method) <τ_0_0> (@inout _ArrayBuffer<τ_0_0>) -> Bool }

// _ArrayBuffer.beginCOWMutation(), loc * "<compiler-generated>":0:0, scope 112
sil shared [serialized] @$ss12_ArrayBufferV16beginCOWMutationSbyF : $@convention(method) <Element> (@inout _ArrayBuffer<Element>) -> Bool {
[%0: escape v** -> %0.s0.s0.v**, escape v**.c*.v** -> %0.s0.s0.v**.c*.v**, read s0.s0.v**, write v**, copy v**, destroy v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %39, %32, %23, %16
bb0(%0 : $*_ArrayBuffer<Element>):
  %1 = metatype $@thick Element.Type, scope 112   // users: %10, %2
  %2 = builtin "canBeClass"<Element>(%1 : $@thick Element.Type) : $Builtin.Int8, scope 112 // users: %7, %4
  %3 = integer_literal $Builtin.Int8, 0, scope 112 // user: %4
  %4 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %3 : $Builtin.Int8) : $Builtin.Int1, scope 112 // user: %5
  cond_br %4, bb9, bb1, scope 112                 // id: %5

bb1:                                              // Preds: bb0
  %6 = integer_literal $Builtin.Int8, 1, scope 112 // user: %7
  %7 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %6 : $Builtin.Int8) : $Builtin.Int1, scope 112 // user: %8
  cond_br %7, bb5, bb2, scope 112                 // id: %8

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %9 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 112 // user: %10
  %10 = apply %9<Element>(%1) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 112 // user: %11
  %11 = struct_extract %10 : $Bool, #Bool._value, scope 112 // user: %12
  cond_br %11, bb4, bb3, scope 112                // id: %12

bb3:                                              // Preds: bb2
  br bb10, scope 112                              // id: %13

bb4:                                              // Preds: bb2
  br bb6, scope 112                               // id: %14

bb5:                                              // Preds: bb1
  br bb6, scope 112                               // id: %15

bb6:                                              // Preds: bb5 bb4
  %16 = struct_element_addr %0 : $*_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 112 // user: %17
  %17 = struct_element_addr %16 : $*_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 112 // user: %18
  %18 = load %17 : $*Builtin.BridgeObject, scope 112 // user: %19
  (%19, %20) = begin_cow_mutation %18 : $Builtin.BridgeObject, scope 112 // users: %24, %21
  %21 = struct $_BridgeStorage<__ContiguousArrayStorageBase> (%20 : $Builtin.BridgeObject), scope 112 // user: %22
  %22 = struct $_ArrayBuffer<Element> (%21 : $_BridgeStorage<__ContiguousArrayStorageBase>), scope 112 // users: %29, %23
  store %22 to %0 : $*_ArrayBuffer<Element>, scope 112 // id: %23
  cond_br %19, bb8, bb7, scope 112                // id: %24

bb7:                                              // Preds: bb6
  %25 = integer_literal $Builtin.Int1, 0, scope 112 // user: %26
  %26 = struct $Bool (%25 : $Builtin.Int1), scope 112 // user: %27
  br bb11(%26 : $Bool), scope 112                 // id: %27

bb8:                                              // Preds: bb6
  // function_ref _ArrayBuffer._isNative.getter
  %28 = function_ref @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 112 // user: %29
  %29 = apply %28<Element>(%22) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 112 // user: %30
  br bb11(%29 : $Bool), scope 112                 // id: %30

bb9:                                              // Preds: bb0
  br bb10, scope 112                              // id: %31

bb10:                                             // Preds: bb9 bb3
  %32 = struct_element_addr %0 : $*_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 112 // user: %33
  %33 = struct_element_addr %32 : $*_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 112 // user: %34
  %34 = load %33 : $*Builtin.BridgeObject, scope 112 // user: %35
  (%35, %36) = begin_cow_mutation [native] %34 : $Builtin.BridgeObject, scope 112 // users: %40, %37
  %37 = struct $_BridgeStorage<__ContiguousArrayStorageBase> (%36 : $Builtin.BridgeObject), scope 112 // user: %38
  %38 = struct $_ArrayBuffer<Element> (%37 : $_BridgeStorage<__ContiguousArrayStorageBase>), scope 112 // user: %39
  store %38 to %0 : $*_ArrayBuffer<Element>, scope 112 // id: %39
  %40 = struct $Bool (%35 : $Builtin.Int1), scope 112 // user: %41
  br bb11(%40 : $Bool), scope 112                 // id: %41

// %42                                            // user: %43
bb11(%42 : $Bool):                                // Preds: bb10 bb8 bb7
  return %42 : $Bool, scope 112                   // id: %43
} // end sil function '$ss12_ArrayBufferV16beginCOWMutationSbyF'

sil_scope 113 { loc * "<compiler-generated>":0:0 parent @$sSa5countSivg : $@convention(method) <τ_0_0> (@guaranteed Array<τ_0_0>) -> Int }

// Array.count.getter, loc * "<compiler-generated>":0:0, scope 113
sil public_external [serialized] @$sSa5countSivg : $@convention(method) <Element> (@guaranteed Array<Element>) -> Int {
[%0: noescape **]
// %0                                             // user: %2
bb0(%0 : $Array<Element>):
  // function_ref Array._getCount()
  %1 = function_ref @$sSa9_getCountSiyF : $@convention(method) <τ_0_0> (@guaranteed Array<τ_0_0>) -> Int, scope 113 // user: %2
  %2 = apply %1<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed Array<τ_0_0>) -> Int, scope 113 // user: %3
  return %2 : $Int, scope 113                     // id: %3
} // end sil function '$sSa5countSivg'

sil_scope 114 { loc * "<compiler-generated>":0:0 parent @$sSa9_getCountSiyF : $@convention(method) <τ_0_0> (@guaranteed Array<τ_0_0>) -> Int }

// Array._getCount(), loc * "<compiler-generated>":0:0, scope 114
sil public_external [serialized] [_semantics "array.get_count"] @$sSa9_getCountSiyF : $@convention(method) <Element> (@guaranteed Array<Element>) -> Int {
[%0: noescape! **]
// %0                                             // user: %1
bb0(%0 : $Array<Element>):
  %1 = struct_extract %0 : $Array<Element>, #Array._buffer, scope 114 // user: %3
  // function_ref _ArrayBuffer.immutableCount.getter
  %2 = function_ref @$ss12_ArrayBufferV14immutableCountSivg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 114 // user: %3
  %3 = apply %2<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 114 // user: %4
  return %3 : $Int, scope 114                     // id: %4
} // end sil function '$sSa9_getCountSiyF'

sil_scope 115 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV14immutableCountSivg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int }

// _ArrayBuffer.immutableCount.getter, loc * "<compiler-generated>":0:0, scope 115
sil shared [serialized] @$ss12_ArrayBufferV14immutableCountSivg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> Int {
[%0: read v**.c*.v**, write v**.c*.v**, copy v**.c*.v**, destroy v**.c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %15, %8, %2
bb0(%0 : $_ArrayBuffer<Element>):
  // function_ref _ArrayBuffer._isNative.getter
  %1 = function_ref @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 115 // user: %2
  %2 = apply %1<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 115 // user: %3
  %3 = struct_extract %2 : $Bool, #Bool._value, scope 115 // user: %5
  %4 = integer_literal $Builtin.Int1, -1, scope 115 // user: %5
  %5 = builtin "int_expect_Int1"(%3 : $Builtin.Int1, %4 : $Builtin.Int1) : $Builtin.Int1, scope 115 // user: %6
  cond_br %5, bb2, bb1, scope 115                 // id: %6

bb1:                                              // Preds: bb0
  // function_ref _ArrayBuffer._nonNative.getter
  %7 = function_ref @$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 115 // user: %8
  %8 = apply %7<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 115 // users: %11, %10
  // function_ref _CocoaArrayWrapper.endIndex.getter
  %9 = function_ref @$ss18_CocoaArrayWrapperV8endIndexSivg : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 115 // user: %10
  %10 = apply %9(%8) : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 115 // user: %13
  %11 = struct_extract %8 : $_CocoaArrayWrapper, #_CocoaArrayWrapper.buffer, scope 115 // user: %12
  strong_release %11 : $AnyObject, scope 115      // id: %12
  br bb3(%10 : $Int), scope 115                   // id: %13

bb2:                                              // Preds: bb0
  // function_ref _ArrayBuffer._native.getter
  %14 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 115 // user: %15
  %15 = apply %14<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 115 // user: %16
  %16 = struct_extract %15 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 115 // users: %22, %17
  %17 = ref_element_addr [immutable] %16 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 115 // user: %18
  %18 = struct_element_addr %17 : $*_ArrayBody, #_ArrayBody._storage, scope 115 // user: %19
  %19 = struct_element_addr %18 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 115 // user: %20
  %20 = struct_element_addr %19 : $*Int, #Int._value, scope 115 // user: %21
  %21 = load %20 : $*Builtin.Int64, scope 115     // user: %23
  strong_release %16 : $__ContiguousArrayStorageBase, scope 115 // id: %22
  %23 = builtin "assumeNonNegative_Int64"(%21 : $Builtin.Int64) : $Builtin.Int64, scope 115 // user: %24
  %24 = struct $Int (%23 : $Builtin.Int64), scope 115 // user: %25
  br bb3(%24 : $Int), scope 115                   // id: %25

// %26                                            // user: %27
bb3(%26 : $Int):                                  // Preds: bb2 bb1
  return %26 : $Int, scope 115                    // id: %27
} // end sil function '$ss12_ArrayBufferV14immutableCountSivg'

sil_scope 116 { loc * "<compiler-generated>":0:0 parent @$sSp10initialize2toyx_tF : $@convention(method) <τ_0_0> (@in_guaranteed τ_0_0, UnsafeMutablePointer<τ_0_0>) -> () }

// UnsafeMutablePointer.initialize(to:), loc * "<compiler-generated>":0:0, scope 116
sil public_external [serialized] @$sSp10initialize2toyx_tF : $@convention(method) <Pointee> (@in_guaranteed Pointee, UnsafeMutablePointer<Pointee>) -> () {
[%0: escape v** -> %1.s0.v**, escape v**.c*.v** -> %1.s0.v**.c*.v**]
[%1: noescape **]
// %0                                             // user: %4
// %1                                             // user: %2
bb0(%0 : $*Pointee, %1 : $UnsafeMutablePointer<Pointee>):
  %2 = struct_extract %1 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 116 // user: %3
  %3 = pointer_to_address %2 : $Builtin.RawPointer to [strict] $*Pointee, scope 116 // user: %4
  copy_addr %0 to [init] %3 : $*Pointee, scope 116 // id: %4
  %5 = tuple (), scope 116                        // user: %6
  return %5 : $(), scope 116                      // id: %6
} // end sil function '$sSp10initialize2toyx_tF'

sil_scope 117 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV10startIndexSivg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int }

// _ArrayBuffer.startIndex.getter, loc * "<compiler-generated>":0:0, scope 117
sil public_external [serialized] @$ss12_ArrayBufferV10startIndexSivg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> Int {
[%0: noescape **]
bb0(%0 : $_ArrayBuffer<Element>):
  %1 = integer_literal $Builtin.Int64, 0, scope 117 // user: %2
  %2 = struct $Int (%1 : $Builtin.Int64), scope 117 // user: %3
  return %2 : $Int, scope 117                     // id: %3
} // end sil function '$ss12_ArrayBufferV10startIndexSivg'

sil_scope 118 { loc * "<compiler-generated>":0:0 parent @$sSr11baseAddressSpyxGSgvg : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>) -> Optional<UnsafeMutablePointer<τ_0_0>> }

// UnsafeMutableBufferPointer.baseAddress.getter, loc * "<compiler-generated>":0:0, scope 118
sil public_external [serialized] @$sSr11baseAddressSpyxGSgvg : $@convention(method) <Element> (UnsafeMutableBufferPointer<Element>) -> Optional<UnsafeMutablePointer<Element>> {
[%0: escape v** => %r.v**, escape v**.c*.v** => %r.v**.c*.v**]
// %0                                             // user: %1
bb0(%0 : $UnsafeMutableBufferPointer<Element>):
  %1 = struct_extract %0 : $UnsafeMutableBufferPointer<Element>, #UnsafeMutableBufferPointer._position, scope 118 // user: %2
  return %1 : $Optional<UnsafeMutablePointer<Element>>, scope 118 // id: %2
} // end sil function '$sSr11baseAddressSpyxGSgvg'

sil_scope 119 { loc * "<compiler-generated>":0:0 parent @$ss18_CocoaArrayWrapperV13_copyContents12initializings16IndexingIteratorVyABG_SitSryyXlG_tF : $@convention(method) (UnsafeMutableBufferPointer<AnyObject>, @owned _CocoaArrayWrapper) -> (@owned IndexingIterator<_CocoaArrayWrapper>, Int) }

// _CocoaArrayWrapper._copyContents(initializing:), loc * "<compiler-generated>":0:0, scope 119
sil shared [serialized] @$ss18_CocoaArrayWrapperV13_copyContents12initializings16IndexingIteratorVyABG_SitSryyXlG_tF : $@convention(method) (UnsafeMutableBufferPointer<AnyObject>, @owned _CocoaArrayWrapper) -> (@owned IndexingIterator<_CocoaArrayWrapper>, Int) {
[%0: read v**.c*.v**, write v**.c*.v**, copy v**.c*.v**, destroy v**.c*.v**]
[%1: read v**.c*.v**, write v**.c*.v**, copy **, destroy v**.c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %10, %2
// %1                                             // users: %87, %86, %48, %46, %44, %8
bb0(%0 : $UnsafeMutableBufferPointer<AnyObject>, %1 : $_CocoaArrayWrapper):
  %2 = struct_extract %0 : $UnsafeMutableBufferPointer<AnyObject>, #UnsafeMutableBufferPointer.count, scope 119 // users: %54, %4
  %3 = integer_literal $Builtin.Int64, 0, scope 119 // users: %78, %75, %42, %7, %5
  %4 = struct_extract %2 : $Int, #Int._value, scope 119 // users: %51, %5
  %5 = builtin "cmp_slt_Int64"(%3 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1, scope 119 // user: %6
  cond_br %5, bb2, bb1, scope 119                 // id: %6

bb1:                                              // Preds: bb0
  %7 = struct $Int (%3 : $Builtin.Int64), scope 119 // users: %9, %8
  %8 = struct $IndexingIterator<_CocoaArrayWrapper> (%1 : $_CocoaArrayWrapper, %7 : $Int), scope 119 // user: %9
  br bb16(%8 : $IndexingIterator<_CocoaArrayWrapper>, %7 : $Int), scope 119 // id: %9

bb2:                                              // Preds: bb0
  %10 = struct_extract %0 : $UnsafeMutableBufferPointer<AnyObject>, #UnsafeMutableBufferPointer._position, scope 119 // user: %11
  switch_enum %10 : $Optional<UnsafeMutablePointer<AnyObject>>, case #Optional.some!enumelt: bb6, case #Optional.none!enumelt: bb3, scope 119 // id: %11

bb3:                                              // Preds: bb2
  %12 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface", scope 119 // user: %19
  %13 = integer_literal $Builtin.Word, 39, scope 119 // user: %20
  %14 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value", scope 119 // user: %16
  %15 = integer_literal $Builtin.Word, 57, scope 119 // user: %18
  %16 = builtin "ptrtoint_Word"(%14 : $Builtin.RawPointer) : $Builtin.Word, scope 119 // user: %18
  %17 = integer_literal $Builtin.Int8, 2, scope 119 // users: %35, %20, %18
  %18 = struct $StaticString (%16 : $Builtin.Word, %15 : $Builtin.Word, %17 : $Builtin.Int8), scope 119 // user: %39
  %19 = builtin "ptrtoint_Word"(%12 : $Builtin.RawPointer) : $Builtin.Word, scope 119 // user: %20
  %20 = struct $StaticString (%19 : $Builtin.Word, %13 : $Builtin.Word, %17 : $Builtin.Int8), scope 119 // user: %39
  %21 = integer_literal $Builtin.Int64, 3687, scope 119 // user: %22
  %22 = struct $UInt (%21 : $Builtin.Int64), scope 119 // user: %39
  %23 = builtin "assert_configuration"() : $Builtin.Int32, scope 119 // users: %28, %25
  %24 = integer_literal $Builtin.Int32, 0, scope 119 // user: %25
  %25 = builtin "cmp_eq_Int32"(%23 : $Builtin.Int32, %24 : $Builtin.Int32) : $Builtin.Int1, scope 119 // user: %26
  cond_br %25, bb5, bb4, scope 119                // id: %26

bb4:                                              // Preds: bb3
  %27 = integer_literal $Builtin.Int32, 1, scope 119 // user: %28
  %28 = builtin "cmp_eq_Int32"(%23 : $Builtin.Int32, %27 : $Builtin.Int32) : $Builtin.Int1, scope 119 // user: %29
  cond_fail %28 : $Builtin.Int1, "Unexpectedly found nil while unwrapping an Optional value", scope 119 // id: %29
  %30 = builtin "conditionallyUnreachable"() : $Never, scope 119
  unreachable , scope 119                         // id: %31

bb5:                                              // Preds: bb3
  %32 = string_literal utf8 "Fatal error", scope 119 // user: %34
  %33 = integer_literal $Builtin.Word, 11, scope 119 // user: %35
  %34 = builtin "ptrtoint_Word"(%32 : $Builtin.RawPointer) : $Builtin.Word, scope 119 // user: %35
  %35 = struct $StaticString (%34 : $Builtin.Word, %33 : $Builtin.Word, %17 : $Builtin.Int8), scope 119 // user: %39
  %36 = integer_literal $Builtin.Int32, 1, scope 119 // user: %37
  %37 = struct $UInt32 (%36 : $Builtin.Int32), scope 119 // user: %39
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %38 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 119 // user: %39
  %39 = apply %38(%35, %18, %20, %22, %37) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 119
  unreachable , scope 119                         // id: %40

// %41                                            // user: %86
bb6(%41 : $UnsafeMutablePointer<AnyObject>):      // Preds: bb2
  %42 = struct $Int (%3 : $Builtin.Int64), scope 119 // users: %83, %48
  // function_ref _CocoaArrayWrapper.endIndex.getter
  %43 = function_ref @$ss18_CocoaArrayWrapperV8endIndexSivg : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 119 // user: %46
  %44 = struct_extract %1 : $_CocoaArrayWrapper, #_CocoaArrayWrapper.buffer, scope 119 // users: %85, %49, %45
  strong_retain %44 : $AnyObject, scope 119       // id: %45
  %46 = apply %43(%1) : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 119 // user: %48
  // function_ref specialized RandomAccessCollection<>.distance(from:to:)
  %47 = function_ref @$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE8distance4from2toSiAB_ABtFs18_CocoaArrayWrapperV_Tgq5 : $@convention(method) (Int, Int, @guaranteed _CocoaArrayWrapper) -> Int, scope 119 // user: %48
  %48 = apply %47(%42, %46, %1) : $@convention(method) (Int, Int, @guaranteed _CocoaArrayWrapper) -> Int, scope 119 // users: %53, %50
  strong_release %44 : $AnyObject, scope 119      // id: %49
  %50 = struct_extract %48 : $Int, #Int._value, scope 119 // user: %51
  %51 = builtin "cmp_slt_Int64"(%4 : $Builtin.Int64, %50 : $Builtin.Int64) : $Builtin.Int1, scope 119 // user: %52
  cond_br %51, bb8, bb7, scope 119                // id: %52

bb7:                                              // Preds: bb6
  br bb9(%48 : $Int), scope 119                   // id: %53

bb8:                                              // Preds: bb6
  br bb9(%2 : $Int), scope 119                    // id: %54

// %55                                            // users: %88, %87, %83, %56
bb9(%55 : $Int):                                  // Preds: bb8 bb7
  %56 = struct_extract %55 : $Int, #Int._value, scope 119 // users: %78, %75
  %57 = string_literal utf8 "Range requires lowerBound <= upperBound", scope 119 // user: %59
  %58 = integer_literal $Builtin.Word, 39, scope 119 // users: %64, %61
  %59 = builtin "ptrtoint_Word"(%57 : $Builtin.RawPointer) : $Builtin.Word, scope 119 // user: %61
  %60 = integer_literal $Builtin.Int8, 2, scope 119 // users: %96, %64, %61
  %61 = struct $StaticString (%59 : $Builtin.Word, %58 : $Builtin.Word, %60 : $Builtin.Int8), scope 119 // user: %100
  %62 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface", scope 119 // user: %63
  %63 = builtin "ptrtoint_Word"(%62 : $Builtin.RawPointer) : $Builtin.Word, scope 119 // user: %64
  %64 = struct $StaticString (%63 : $Builtin.Word, %58 : $Builtin.Word, %60 : $Builtin.Int8), scope 119 // user: %100
  %65 = integer_literal $Builtin.Int64, 16142, scope 119 // user: %66
  %66 = struct $UInt (%65 : $Builtin.Int64), scope 119 // user: %100
  %67 = builtin "assert_configuration"() : $Builtin.Int32, scope 119 // users: %72, %69
  %68 = integer_literal $Builtin.Int32, 0, scope 119 // user: %69
  %69 = builtin "cmp_eq_Int32"(%67 : $Builtin.Int32, %68 : $Builtin.Int32) : $Builtin.Int1, scope 119 // user: %70
  cond_br %69, bb13, bb10, scope 119              // id: %70

bb10:                                             // Preds: bb9
  %71 = integer_literal $Builtin.Int32, 1, scope 119 // user: %72
  %72 = builtin "cmp_eq_Int32"(%67 : $Builtin.Int32, %71 : $Builtin.Int32) : $Builtin.Int1, scope 119 // user: %73
  cond_br %72, bb12, bb11, scope 119              // id: %73

bb11:                                             // Preds: bb10
  br bb15, scope 119                              // id: %74

bb12:                                             // Preds: bb10
  %75 = builtin "cmp_slt_Int64"(%56 : $Builtin.Int64, %3 : $Builtin.Int64) : $Builtin.Int1, scope 119 // user: %76
  cond_fail %75 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 119 // id: %76
  br bb15, scope 119                              // id: %77

bb13:                                             // Preds: bb9
  %78 = builtin "cmp_slt_Int64"(%56 : $Builtin.Int64, %3 : $Builtin.Int64) : $Builtin.Int1, scope 119 // user: %80
  %79 = integer_literal $Builtin.Int1, 0, scope 119 // user: %80
  %80 = builtin "int_expect_Int1"(%78 : $Builtin.Int1, %79 : $Builtin.Int1) : $Builtin.Int1, scope 119 // user: %81
  cond_br %80, bb17, bb14, scope 119              // id: %81

bb14:                                             // Preds: bb13
  br bb15, scope 119                              // id: %82

bb15:                                             // Preds: bb14 bb12 bb11
  %83 = struct $Range<Int> (%42 : $Int, %55 : $Int), scope 119 // user: %86
  // function_ref _CocoaArrayWrapper._copyContents(subRange:initializing:)
  %84 = function_ref @$ss18_CocoaArrayWrapperV13_copyContents8subRange12initializingSpyyXlGSnySiG_AFtF : $@convention(method) (Range<Int>, UnsafeMutablePointer<AnyObject>, @owned _CocoaArrayWrapper) -> UnsafeMutablePointer<AnyObject>, scope 119 // user: %86
  strong_retain %44 : $AnyObject, scope 119       // id: %85
  %86 = apply %84(%83, %41, %1) : $@convention(method) (Range<Int>, UnsafeMutablePointer<AnyObject>, @owned _CocoaArrayWrapper) -> UnsafeMutablePointer<AnyObject>, scope 119
  %87 = struct $IndexingIterator<_CocoaArrayWrapper> (%1 : $_CocoaArrayWrapper, %55 : $Int), scope 119 // user: %88
  br bb16(%87 : $IndexingIterator<_CocoaArrayWrapper>, %55 : $Int), scope 119 // id: %88

// %89                                            // user: %91
// %90                                            // user: %91
bb16(%89 : $IndexingIterator<_CocoaArrayWrapper>, %90 : $Int): // Preds: bb15 bb1
  %91 = tuple (%89 : $IndexingIterator<_CocoaArrayWrapper>, %90 : $Int), scope 119 // user: %92
  return %91 : $(IndexingIterator<_CocoaArrayWrapper>, Int), scope 119 // id: %92

bb17:                                             // Preds: bb13
  %93 = string_literal utf8 "Fatal error", scope 119 // user: %95
  %94 = integer_literal $Builtin.Word, 11, scope 119 // user: %96
  %95 = builtin "ptrtoint_Word"(%93 : $Builtin.RawPointer) : $Builtin.Word, scope 119 // user: %96
  %96 = struct $StaticString (%95 : $Builtin.Word, %94 : $Builtin.Word, %60 : $Builtin.Int8), scope 119 // user: %100
  %97 = integer_literal $Builtin.Int32, 1, scope 119 // user: %98
  %98 = struct $UInt32 (%97 : $Builtin.Int32), scope 119 // user: %100
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %99 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 119 // user: %100
  %100 = apply %99(%96, %61, %64, %66, %98) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 119
  unreachable , scope 119                         // id: %101
} // end sil function '$ss18_CocoaArrayWrapperV13_copyContents12initializings16IndexingIteratorVyABG_SitSryyXlG_tF'

sil_scope 120 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV13_copyContents12initializings16IndexingIteratorVyAByxGG_SitSryxG_tF : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>, @owned _ContiguousArrayBuffer<τ_0_0>) -> (@owned IndexingIterator<_ContiguousArrayBuffer<τ_0_0>>, Int) }

// _ContiguousArrayBuffer._copyContents(initializing:), loc * "<compiler-generated>":0:0, scope 120
sil public_external [serialized] @$ss22_ContiguousArrayBufferV13_copyContents12initializings16IndexingIteratorVyAByxGG_SitSryxG_tF : $@convention(method) <Element> (UnsafeMutableBufferPointer<Element>, @owned _ContiguousArrayBuffer<Element>) -> (@owned IndexingIterator<_ContiguousArrayBuffer<Element>>, Int) {
[%1: escape v** => %r.0.s0.v**]
// %0                                             // users: %21, %2
// %1                                             // users: %63, %60, %54, %13, %9, %8
bb0(%0 : $UnsafeMutableBufferPointer<Element>, %1 : $_ContiguousArrayBuffer<Element>):
  %2 = struct_extract %0 : $UnsafeMutableBufferPointer<Element>, #UnsafeMutableBufferPointer.count, scope 120 // users: %18, %4
  %3 = integer_literal $Builtin.Int64, 0, scope 120 // users: %10, %5
  %4 = struct_extract %2 : $Int, #Int._value, scope 120 // users: %15, %5
  %5 = builtin "cmp_slt_Int64"(%3 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1, scope 120 // user: %6
  cond_br %5, bb2, bb1, scope 120                 // id: %6

bb1:                                              // Preds: bb0
  // function_ref _ContiguousArrayBuffer.startIndex.getter
  %7 = function_ref @$ss22_ContiguousArrayBufferV10startIndexSivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 120 // user: %8
  %8 = apply %7<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 120 // user: %9
  %9 = struct $IndexingIterator<_ContiguousArrayBuffer<Element>> (%1 : $_ContiguousArrayBuffer<Element>, %8 : $Int), scope 120 // user: %11
  %10 = struct $Int (%3 : $Builtin.Int64), scope 120 // user: %11
  br bb10(%9 : $IndexingIterator<_ContiguousArrayBuffer<Element>>, %10 : $Int), scope 120 // id: %11

bb2:                                              // Preds: bb0
  // function_ref _ContiguousArrayBuffer.count.getter
  %12 = function_ref @$ss22_ContiguousArrayBufferV5countSivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 120 // user: %13
  %13 = apply %12<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 120 // users: %17, %14
  %14 = struct_extract %13 : $Int, #Int._value, scope 120 // user: %15
  %15 = builtin "cmp_slt_Int64"(%4 : $Builtin.Int64, %14 : $Builtin.Int64) : $Builtin.Int1, scope 120 // user: %16
  cond_br %15, bb4, bb3, scope 120                // id: %16

bb3:                                              // Preds: bb2
  br bb5(%13 : $Int), scope 120                   // id: %17

bb4:                                              // Preds: bb2
  br bb5(%2 : $Int), scope 120                    // id: %18

// %19                                            // users: %64, %63, %58
bb5(%19 : $Int):                                  // Preds: bb4 bb3
  // function_ref UnsafeMutableBufferPointer.baseAddress.getter
  %20 = function_ref @$sSr11baseAddressSpyxGSgvg : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>) -> Optional<UnsafeMutablePointer<τ_0_0>>, scope 120 // user: %21
  %21 = apply %20<Element>(%0) : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>) -> Optional<UnsafeMutablePointer<τ_0_0>>, scope 120 // user: %22
  switch_enum %21 : $Optional<UnsafeMutablePointer<Element>>, case #Optional.some!enumelt: bb9, case #Optional.none!enumelt: bb6, scope 120 // id: %22

bb6:                                              // Preds: bb5
  %23 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface", scope 120 // user: %30
  %24 = integer_literal $Builtin.Word, 39, scope 120 // user: %31
  %25 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value", scope 120 // user: %27
  %26 = integer_literal $Builtin.Word, 57, scope 120 // user: %29
  %27 = builtin "ptrtoint_Word"(%25 : $Builtin.RawPointer) : $Builtin.Word, scope 120 // user: %29
  %28 = integer_literal $Builtin.Int8, 2, scope 120 // users: %46, %31, %29
  %29 = struct $StaticString (%27 : $Builtin.Word, %26 : $Builtin.Word, %28 : $Builtin.Int8), scope 120 // user: %50
  %30 = builtin "ptrtoint_Word"(%23 : $Builtin.RawPointer) : $Builtin.Word, scope 120 // user: %31
  %31 = struct $StaticString (%30 : $Builtin.Word, %24 : $Builtin.Word, %28 : $Builtin.Int8), scope 120 // user: %50
  %32 = integer_literal $Builtin.Int64, 6197, scope 120 // user: %33
  %33 = struct $UInt (%32 : $Builtin.Int64), scope 120 // user: %50
  %34 = builtin "assert_configuration"() : $Builtin.Int32, scope 120 // users: %39, %36
  %35 = integer_literal $Builtin.Int32, 0, scope 120 // user: %36
  %36 = builtin "cmp_eq_Int32"(%34 : $Builtin.Int32, %35 : $Builtin.Int32) : $Builtin.Int1, scope 120 // user: %37
  cond_br %36, bb8, bb7, scope 120                // id: %37

bb7:                                              // Preds: bb6
  %38 = integer_literal $Builtin.Int32, 1, scope 120 // user: %39
  %39 = builtin "cmp_eq_Int32"(%34 : $Builtin.Int32, %38 : $Builtin.Int32) : $Builtin.Int1, scope 120 // user: %40
  cond_fail %39 : $Builtin.Int1, "Unexpectedly found nil while unwrapping an Optional value", scope 120 // id: %40
  %41 = builtin "conditionallyUnreachable"() : $Never, scope 120
  unreachable , scope 120                         // id: %42

bb8:                                              // Preds: bb6
  %43 = string_literal utf8 "Fatal error", scope 120 // user: %45
  %44 = integer_literal $Builtin.Word, 11, scope 120 // user: %46
  %45 = builtin "ptrtoint_Word"(%43 : $Builtin.RawPointer) : $Builtin.Word, scope 120 // user: %46
  %46 = struct $StaticString (%45 : $Builtin.Word, %44 : $Builtin.Word, %28 : $Builtin.Int8), scope 120 // user: %50
  %47 = integer_literal $Builtin.Int32, 1, scope 120 // user: %48
  %48 = struct $UInt32 (%47 : $Builtin.Int32), scope 120 // user: %50
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %49 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 120 // user: %50
  %50 = apply %49(%46, %29, %31, %33, %48) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 120
  unreachable , scope 120                         // id: %51

// %52                                            // user: %58
bb9(%52 : $UnsafeMutablePointer<Element>):        // Preds: bb5
  // function_ref _ContiguousArrayBuffer.firstElementAddress.getter
  %53 = function_ref @$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 120 // user: %54
  %54 = apply %53<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 120 // user: %55
  %55 = struct_extract %54 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 120 // user: %56
  %56 = struct $UnsafePointer<Element> (%55 : $Builtin.RawPointer), scope 120 // user: %58
  // function_ref UnsafeMutablePointer.initialize(from:count:)
  %57 = function_ref @$sSp10initialize4from5countySPyxG_SitF : $@convention(method) <τ_0_0> (UnsafePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 120 // user: %58
  %58 = apply %57<Element>(%56, %19, %52) : $@convention(method) <τ_0_0> (UnsafePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 120
  // function_ref _ContiguousArrayBuffer.owner.getter
  %59 = function_ref @$ss22_ContiguousArrayBufferV5owneryXlvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> @owned AnyObject, scope 120 // user: %60
  %60 = apply %59<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> @owned AnyObject, scope 120 // users: %62, %61
  fix_lifetime %60 : $AnyObject, scope 120        // id: %61
  strong_release %60 : $AnyObject, scope 120      // id: %62
  %63 = struct $IndexingIterator<_ContiguousArrayBuffer<Element>> (%1 : $_ContiguousArrayBuffer<Element>, %19 : $Int), scope 120 // user: %64
  br bb10(%63 : $IndexingIterator<_ContiguousArrayBuffer<Element>>, %19 : $Int), scope 120 // id: %64

// %65                                            // user: %67
// %66                                            // user: %67
bb10(%65 : $IndexingIterator<_ContiguousArrayBuffer<Element>>, %66 : $Int): // Preds: bb9 bb1
  %67 = tuple (%65 : $IndexingIterator<_ContiguousArrayBuffer<Element>>, %66 : $Int), scope 120 // user: %68
  return %67 : $(IndexingIterator<_ContiguousArrayBuffer<Element>>, Int), scope 120 // id: %68
} // end sil function '$ss22_ContiguousArrayBufferV13_copyContents12initializings16IndexingIteratorVyAByxGG_SitSryxG_tF'

sil_scope 121 { loc * "<compiler-generated>":0:0 parent @$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE8distance4from2toSiAB_ABtFs18_CocoaArrayWrapperV_Tgq5 : $@convention(method) (Int, Int, @guaranteed _CocoaArrayWrapper) -> Int }

// specialized RandomAccessCollection<>.distance(from:to:), loc * "<compiler-generated>":0:0, scope 121
sil shared [serialized] @$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE8distance4from2toSiAB_ABtFs18_CocoaArrayWrapperV_Tgq5 : $@convention(method) (Int, Int, @guaranteed _CocoaArrayWrapper) -> Int {
[%2: read v**.c*.v**, write v**.c*.v**, copy v**.c*.v**, destroy v**.c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // user: %3
// %1                                             // user: %4
// %2                                             // users: %53, %7
bb0(%0 : $Int, %1 : $Int, %2 : $_CocoaArrayWrapper):
  %3 = struct_extract %0 : $Int, #Int._value, scope 121 // users: %78, %49, %47, %44, %42
  %4 = struct_extract %1 : $Int, #Int._value, scope 121 // users: %78, %73, %71, %68, %66
  %5 = integer_literal $Builtin.Int64, 0, scope 121 // users: %71, %66, %57, %47, %42, %27
  // function_ref _CocoaArrayWrapper.endIndex.getter
  %6 = function_ref @$ss18_CocoaArrayWrapperV8endIndexSivg : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 121 // users: %53, %7
  %7 = apply %6(%2) : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 121 // user: %8
  %8 = struct_extract %7 : $Int, #Int._value, scope 121 // users: %49, %44, %27
  %9 = string_literal utf8 "ClosedRange requires lowerBound <= upperBound", scope 121 // user: %11
  %10 = integer_literal $Builtin.Word, 45, scope 121 // user: %13
  %11 = builtin "ptrtoint_Word"(%9 : $Builtin.RawPointer) : $Builtin.Word, scope 121 // user: %13
  %12 = integer_literal $Builtin.Int8, 2, scope 121 // users: %118, %109, %98, %89, %34, %17, %13
  %13 = struct $StaticString (%11 : $Builtin.Word, %10 : $Builtin.Word, %12 : $Builtin.Int8), scope 121 // users: %122, %102
  %14 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface", scope 121 // user: %16
  %15 = integer_literal $Builtin.Word, 39, scope 121 // user: %17
  %16 = builtin "ptrtoint_Word"(%14 : $Builtin.RawPointer) : $Builtin.Word, scope 121 // user: %17
  %17 = struct $StaticString (%16 : $Builtin.Word, %15 : $Builtin.Word, %12 : $Builtin.Int8), scope 121 // users: %122, %113, %102, %93
  %18 = integer_literal $Builtin.Int64, 5684, scope 121 // user: %19
  %19 = struct $UInt (%18 : $Builtin.Int64), scope 121 // users: %122, %102
  %20 = builtin "assert_configuration"() : $Builtin.Int32, scope 121 // users: %63, %39, %22
  %21 = integer_literal $Builtin.Int32, 0, scope 121 // user: %22
  %22 = builtin "cmp_eq_Int32"(%20 : $Builtin.Int32, %21 : $Builtin.Int32) : $Builtin.Int1, scope 121 // users: %61, %37, %24
  %23 = integer_literal $Builtin.Int1, 0, scope 121 // users: %74, %58, %50, %28, %24
  %24 = builtin "int_expect_Int1"(%22 : $Builtin.Int1, %23 : $Builtin.Int1) : $Builtin.Int1, scope 121 // users: %55, %25
  cond_br %24, bb2, bb1, scope 121                // id: %25

bb1:                                              // Preds: bb0
  br bb4, scope 121                               // id: %26

bb2:                                              // Preds: bb0
  %27 = builtin "cmp_slt_Int64"(%8 : $Builtin.Int64, %5 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %28
  %28 = builtin "int_expect_Int1"(%27 : $Builtin.Int1, %23 : $Builtin.Int1) : $Builtin.Int1, scope 121 // user: %29
  cond_br %28, bb30, bb3, scope 121               // id: %29

bb3:                                              // Preds: bb2
  br bb4, scope 121                               // id: %30

bb4:                                              // Preds: bb3 bb1
  %31 = string_literal utf8 "Index out of bounds", scope 121 // user: %33
  %32 = integer_literal $Builtin.Word, 19, scope 121 // user: %34
  %33 = builtin "ptrtoint_Word"(%31 : $Builtin.RawPointer) : $Builtin.Word, scope 121 // user: %34
  %34 = struct $StaticString (%33 : $Builtin.Word, %32 : $Builtin.Word, %12 : $Builtin.Int8), scope 121 // users: %113, %93
  %35 = integer_literal $Builtin.Int64, 4462, scope 121 // user: %36
  %36 = struct $UInt (%35 : $Builtin.Int64), scope 121 // users: %113, %93
  cond_br %22, bb8, bb5, scope 121                // id: %37

bb5:                                              // Preds: bb4
  %38 = integer_literal $Builtin.Int32, 1, scope 121 // user: %39
  %39 = builtin "cmp_eq_Int32"(%20 : $Builtin.Int32, %38 : $Builtin.Int32) : $Builtin.Int1, scope 121 // user: %40
  cond_br %39, bb7, bb6, scope 121                // id: %40

bb6:                                              // Preds: bb5
  br bb11, scope 121                              // id: %41

bb7:                                              // Preds: bb5
  %42 = builtin "cmp_slt_Int64"(%3 : $Builtin.Int64, %5 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %43
  cond_fail %42 : $Builtin.Int1, "Index out of bounds", scope 121 // id: %43
  %44 = builtin "cmp_slt_Int64"(%8 : $Builtin.Int64, %3 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %45
  cond_fail %44 : $Builtin.Int1, "Index out of bounds", scope 121 // id: %45
  br bb11, scope 121                              // id: %46

bb8:                                              // Preds: bb4
  %47 = builtin "cmp_slt_Int64"(%3 : $Builtin.Int64, %5 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %48
  cond_br %47, bb28, bb9, scope 121               // id: %48

bb9:                                              // Preds: bb8
  %49 = builtin "cmp_slt_Int64"(%8 : $Builtin.Int64, %3 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %50
  %50 = builtin "int_expect_Int1"(%49 : $Builtin.Int1, %23 : $Builtin.Int1) : $Builtin.Int1, scope 121 // user: %51
  cond_br %50, bb27, bb10, scope 121              // id: %51

bb10:                                             // Preds: bb9
  br bb11, scope 121                              // id: %52

bb11:                                             // Preds: bb10 bb7 bb6
  %53 = apply %6(%2) : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 121 // user: %54
  %54 = struct_extract %53 : $Int, #Int._value, scope 121 // users: %73, %68, %57
  cond_br %24, bb13, bb12, scope 121              // id: %55

bb12:                                             // Preds: bb11
  br bb15, scope 121                              // id: %56

bb13:                                             // Preds: bb11
  %57 = builtin "cmp_slt_Int64"(%54 : $Builtin.Int64, %5 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %58
  %58 = builtin "int_expect_Int1"(%57 : $Builtin.Int1, %23 : $Builtin.Int1) : $Builtin.Int1, scope 121 // user: %59
  cond_br %58, bb26, bb14, scope 121              // id: %59

bb14:                                             // Preds: bb13
  br bb15, scope 121                              // id: %60

bb15:                                             // Preds: bb14 bb12
  cond_br %22, bb19, bb16, scope 121              // id: %61

bb16:                                             // Preds: bb15
  %62 = integer_literal $Builtin.Int32, 1, scope 121 // user: %63
  %63 = builtin "cmp_eq_Int32"(%20 : $Builtin.Int32, %62 : $Builtin.Int32) : $Builtin.Int1, scope 121 // user: %64
  cond_br %63, bb18, bb17, scope 121              // id: %64

bb17:                                             // Preds: bb16
  br bb22, scope 121                              // id: %65

bb18:                                             // Preds: bb16
  %66 = builtin "cmp_slt_Int64"(%4 : $Builtin.Int64, %5 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %67
  cond_fail %66 : $Builtin.Int1, "Index out of bounds", scope 121 // id: %67
  %68 = builtin "cmp_slt_Int64"(%54 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %69
  cond_fail %68 : $Builtin.Int1, "Index out of bounds", scope 121 // id: %69
  br bb22, scope 121                              // id: %70

bb19:                                             // Preds: bb15
  %71 = builtin "cmp_slt_Int64"(%4 : $Builtin.Int64, %5 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %72
  cond_br %71, bb24, bb20, scope 121              // id: %72

bb20:                                             // Preds: bb19
  %73 = builtin "cmp_slt_Int64"(%54 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %74
  %74 = builtin "int_expect_Int1"(%73 : $Builtin.Int1, %23 : $Builtin.Int1) : $Builtin.Int1, scope 121 // user: %75
  cond_br %74, bb23, bb21, scope 121              // id: %75

bb21:                                             // Preds: bb20
  br bb22, scope 121                              // id: %76

bb22:                                             // Preds: bb21 bb18 bb17
  %77 = integer_literal $Builtin.Int1, -1, scope 121 // user: %78
  %78 = builtin "ssub_with_overflow_Int64"(%4 : $Builtin.Int64, %3 : $Builtin.Int64, %77 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 121 // users: %80, %79
  %79 = tuple_extract %78 : $(Builtin.Int64, Builtin.Int1), 0, scope 121 // user: %82
  %80 = tuple_extract %78 : $(Builtin.Int64, Builtin.Int1), 1, scope 121 // user: %81
  cond_fail %80 : $Builtin.Int1, "arithmetic overflow", scope 121 // id: %81
  %82 = struct $Int (%79 : $Builtin.Int64), scope 121 // user: %83
  return %82 : $Int, scope 121                    // id: %83

bb23:                                             // Preds: bb20
  br bb25, scope 121                              // id: %84

bb24:                                             // Preds: bb19
  br bb25, scope 121                              // id: %85

bb25:                                             // Preds: bb24 bb23
  %86 = string_literal utf8 "Fatal error", scope 121 // user: %88
  %87 = integer_literal $Builtin.Word, 11, scope 121 // user: %89
  %88 = builtin "ptrtoint_Word"(%86 : $Builtin.RawPointer) : $Builtin.Word, scope 121 // user: %89
  %89 = struct $StaticString (%88 : $Builtin.Word, %87 : $Builtin.Word, %12 : $Builtin.Int8), scope 121 // user: %93
  %90 = integer_literal $Builtin.Int32, 1, scope 121 // user: %91
  %91 = struct $UInt32 (%90 : $Builtin.Int32), scope 121 // user: %93
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %92 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 121 // user: %93
  %93 = apply %92(%89, %34, %17, %36, %91) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 121
  unreachable , scope 121                         // id: %94

bb26:                                             // Preds: bb13
  %95 = string_literal utf8 "Fatal error", scope 121 // user: %97
  %96 = integer_literal $Builtin.Word, 11, scope 121 // user: %98
  %97 = builtin "ptrtoint_Word"(%95 : $Builtin.RawPointer) : $Builtin.Word, scope 121 // user: %98
  %98 = struct $StaticString (%97 : $Builtin.Word, %96 : $Builtin.Word, %12 : $Builtin.Int8), scope 121 // user: %102
  %99 = integer_literal $Builtin.Int32, 1, scope 121 // user: %100
  %100 = struct $UInt32 (%99 : $Builtin.Int32), scope 121 // user: %102
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %101 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 121 // user: %102
  %102 = apply %101(%98, %13, %17, %19, %100) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 121
  unreachable , scope 121                         // id: %103

bb27:                                             // Preds: bb9
  br bb29, scope 121                              // id: %104

bb28:                                             // Preds: bb8
  br bb29, scope 121                              // id: %105

bb29:                                             // Preds: bb28 bb27
  %106 = string_literal utf8 "Fatal error", scope 121 // user: %108
  %107 = integer_literal $Builtin.Word, 11, scope 121 // user: %109
  %108 = builtin "ptrtoint_Word"(%106 : $Builtin.RawPointer) : $Builtin.Word, scope 121 // user: %109
  %109 = struct $StaticString (%108 : $Builtin.Word, %107 : $Builtin.Word, %12 : $Builtin.Int8), scope 121 // user: %113
  %110 = integer_literal $Builtin.Int32, 1, scope 121 // user: %111
  %111 = struct $UInt32 (%110 : $Builtin.Int32), scope 121 // user: %113
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %112 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 121 // user: %113
  %113 = apply %112(%109, %34, %17, %36, %111) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 121
  unreachable , scope 121                         // id: %114

bb30:                                             // Preds: bb2
  %115 = string_literal utf8 "Fatal error", scope 121 // user: %117
  %116 = integer_literal $Builtin.Word, 11, scope 121 // user: %118
  %117 = builtin "ptrtoint_Word"(%115 : $Builtin.RawPointer) : $Builtin.Word, scope 121 // user: %118
  %118 = struct $StaticString (%117 : $Builtin.Word, %116 : $Builtin.Word, %12 : $Builtin.Int8), scope 121 // user: %122
  %119 = integer_literal $Builtin.Int32, 1, scope 121 // user: %120
  %120 = struct $UInt32 (%119 : $Builtin.Int32), scope 121 // user: %122
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %121 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 121 // user: %122
  %122 = apply %121(%118, %13, %17, %19, %120) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 121
  unreachable , scope 121                         // id: %123
} // end sil function '$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE8distance4from2toSiAB_ABtFs18_CocoaArrayWrapperV_Tgq5'

sil_scope 122 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV10startIndexSivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int }

// _ContiguousArrayBuffer.startIndex.getter, loc * "<compiler-generated>":0:0, scope 122
sil public_external [serialized] @$ss22_ContiguousArrayBufferV10startIndexSivg : $@convention(method) <Element> (@guaranteed _ContiguousArrayBuffer<Element>) -> Int {
[%0: noescape **]
bb0(%0 : $_ContiguousArrayBuffer<Element>):
  %1 = integer_literal $Builtin.Int64, 0, scope 122 // user: %2
  %2 = struct $Int (%1 : $Builtin.Int64), scope 122 // user: %3
  return %2 : $Int, scope 122                     // id: %3
} // end sil function '$ss22_ContiguousArrayBufferV10startIndexSivg'


// _CocoaArrayWrapper.subscript.getter, loc * "<compiler-generated>":0:0, scope 0
sil @$ss18_CocoaArrayWrapperVyyXlSicig : $@convention(method) (Int, @guaranteed _CocoaArrayWrapper) -> @owned AnyObject

sil_scope 123 { loc * "<compiler-generated>":0:0 parent @$sSS12_createEmpty19withInitialCapacitySSSi_tFZ : $@convention(method) (Int, @thin String.Type) -> @owned String }

// static String._createEmpty(withInitialCapacity:), loc * "<compiler-generated>":0:0, scope 123
sil shared [serialized] [_semantics "inline_late"] [_semantics "string.init_empty_with_capacity"] @$sSS12_createEmpty19withInitialCapacitySSSi_tFZ : $@convention(method) (Int, @thin String.Type) -> @owned String {
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %18, %11
bb0(%0 : $Int, %1 : $@thin String.Type):
  %2 = alloc_stack $_StringGuts, scope 123        // users: %21, %20, %18, %9
  %3 = integer_literal $Builtin.Int64, 0, scope 123 // user: %6
  %4 = integer_literal $Builtin.Int64, -2305843009213693952, scope 123 // user: %5
  %5 = value_to_bridge_object %4 : $Builtin.Int64, scope 123 // user: %7
  %6 = struct $UInt64 (%3 : $Builtin.Int64), scope 123 // user: %7
  %7 = struct $_StringObject (%6 : $UInt64, %5 : $Builtin.BridgeObject), scope 123 // user: %8
  %8 = struct $_StringGuts (%7 : $_StringObject), scope 123 // user: %9
  store %8 to %2 : $*_StringGuts, scope 123       // id: %9
  %10 = integer_literal $Builtin.Int64, 15, scope 123 // user: %12
  %11 = struct_extract %0 : $Int, #Int._value, scope 123 // user: %12
  %12 = builtin "cmp_slt_Int64"(%10 : $Builtin.Int64, %11 : $Builtin.Int64) : $Builtin.Int1, scope 123 // user: %14
  %13 = integer_literal $Builtin.Int1, 0, scope 123 // user: %14
  %14 = builtin "int_expect_Int1"(%12 : $Builtin.Int1, %13 : $Builtin.Int1) : $Builtin.Int1, scope 123 // user: %15
  cond_br %14, bb2, bb1, scope 123                // id: %15

bb1:                                              // Preds: bb0
  br bb3, scope 123                               // id: %16

bb2:                                              // Preds: bb0
  // function_ref _StringGuts.grow(_:)
  %17 = function_ref @$ss11_StringGutsV4growyySiF : $@convention(method) (Int, @inout _StringGuts) -> (), scope 123 // user: %18
  %18 = apply %17(%0, %2) : $@convention(method) (Int, @inout _StringGuts) -> (), scope 123
  br bb3, scope 123                               // id: %19

bb3:                                              // Preds: bb2 bb1
  %20 = load %2 : $*_StringGuts, scope 123        // user: %22
  dealloc_stack %2 : $*_StringGuts, scope 123     // id: %21
  %22 = struct $String (%20 : $_StringGuts), scope 123 // user: %23
  return %22 : $String, scope 123                 // id: %23
} // end sil function '$sSS12_createEmpty19withInitialCapacitySSSi_tFZ'

sil_scope 124 { loc * "<compiler-generated>":0:0 parent @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String }

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:), loc * "<compiler-generated>":0:0, scope 124
sil public_external [serialized] [always_inline] [readonly] [_semantics "string.makeUTF8"] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String {
// %0                                             // users: %335, %186, %164, %139, %91, %83
// %1                                             // user: %4
// %2                                             // user: %326
bb0(%0 : $Builtin.RawPointer, %1 : $Builtin.Word, %2 : $Builtin.Int1, %3 : $@thin String.Type):
  %4 = builtin "sextOrBitCast_Word_Int64"(%1 : $Builtin.Word) : $Builtin.Int64, scope 124 // users: %27, %23
  %5 = string_literal utf8 "UnsafeBufferPointer with negative count", scope 124 // user: %7
  %6 = integer_literal $Builtin.Word, 39, scope 124 // users: %51, %39, %12, %9
  %7 = builtin "ptrtoint_Word"(%5 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %9
  %8 = integer_literal $Builtin.Int8, 2, scope 124 // users: %367, %320, %310, %301, %264, %254, %199, %104, %51, %39, %12, %9
  %9 = struct $StaticString (%7 : $Builtin.Word, %6 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %371
  %10 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface", scope 124 // user: %11
  %11 = builtin "ptrtoint_Word"(%10 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %12
  %12 = struct $StaticString (%11 : $Builtin.Word, %6 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // users: %371, %324, %314, %305, %268, %258
  %13 = integer_literal $Builtin.Int64, 35439, scope 124 // user: %14
  %14 = struct $UInt (%13 : $Builtin.Int64), scope 124 // user: %371
  %15 = builtin "assert_configuration"() : $Builtin.Int32, scope 124 // users: %204, %160, %109, %79, %56, %44, %17
  %16 = integer_literal $Builtin.Int32, 0, scope 124 // user: %17
  %17 = builtin "cmp_eq_Int32"(%15 : $Builtin.Int32, %16 : $Builtin.Int32) : $Builtin.Int1, scope 124 // users: %158, %77, %54, %42, %19
  %18 = integer_literal $Builtin.Int1, 0, scope 124 // users: %338, %245, %224, %176, %156, %148, %129, %87, %75, %24, %19
  %19 = builtin "int_expect_Int1"(%17 : $Builtin.Int1, %18 : $Builtin.Int1) : $Builtin.Int1, scope 124 // users: %202, %107, %20
  cond_br %19, bb2, bb1, scope 124                // id: %20

bb1:                                              // Preds: bb0
  br bb4, scope 124                               // id: %21

bb2:                                              // Preds: bb0
  %22 = integer_literal $Builtin.Int64, 0, scope 124 // user: %23
  %23 = builtin "cmp_slt_Int64"(%4 : $Builtin.Int64, %22 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %24
  %24 = builtin "int_expect_Int1"(%23 : $Builtin.Int1, %18 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %25
  cond_br %24, bb90, bb3, scope 124               // id: %25

bb3:                                              // Preds: bb2
  br bb4, scope 124                               // id: %26

bb4:                                              // Preds: bb3 bb1
  %27 = builtin "assumeNonNegative_Int64"(%4 : $Builtin.Int64) : $Builtin.Int64, scope 124 // users: %329, %327, %289, %156, %75, %48, %47, %46, %35, %32, %29
  %28 = integer_literal $Builtin.Int64, 0, scope 124 // users: %349, %281, %270, %223, %216, %209, %207, %186, %186, %186, %184, %175, %172, %165, %164, %164, %164, %162, %155, %128, %121, %114, %112, %94, %94, %94, %92, %92, %91, %91, %91, %91, %89, %86, %85, %84, %84, %83, %83, %83, %83, %81, %74, %74, %72, %71, %71, %71, %69, %63, %58, %58, %58, %46, %46, %46, %29
  %29 = builtin "cmp_eq_Int64"(%27 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %30
  cond_br %29, bb87, bb5, scope 124               // id: %30

bb5:                                              // Preds: bb4
  %31 = integer_literal $Builtin.Int64, 15, scope 124 // user: %32
  %32 = builtin "cmp_slt_Int64"(%31 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %33
  cond_br %32, bb83, bb6, scope 124               // id: %33

bb6:                                              // Preds: bb5
  %34 = integer_literal $Builtin.Int64, 8, scope 124 // users: %245, %156, %148, %94, %75, %59, %58, %35
  %35 = builtin "cmp_slt_Int64"(%34 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int1, scope 124 // users: %154, %73, %36
  cond_br %35, bb12, bb7, scope 124               // id: %36

bb7:                                              // Preds: bb6
  %37 = string_literal utf8 "Range requires lowerBound <= upperBound", scope 124 // user: %38
  %38 = builtin "ptrtoint_Word"(%37 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %39
  %39 = struct $StaticString (%38 : $Builtin.Word, %6 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // users: %48, %47, %46
  %40 = integer_literal $Builtin.Int64, 16142, scope 124 // user: %41
  %41 = struct $UInt (%40 : $Builtin.Int64), scope 124 // users: %48, %47, %46
  cond_br %17, bb11, bb8, scope 124               // id: %42

bb8:                                              // Preds: bb7
  %43 = integer_literal $Builtin.Int32, 1, scope 124 // user: %44
  %44 = builtin "cmp_eq_Int32"(%15 : $Builtin.Int32, %43 : $Builtin.Int32) : $Builtin.Int1, scope 124 // user: %45
  cond_br %44, bb10, bb9, scope 124               // id: %45

bb9:                                              // Preds: bb8
  br bb33(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %27 : $Builtin.Int64, %39 : $StaticString, %41 : $UInt), scope 124 // id: %46

bb10:                                             // Preds: bb8
  br bb16(%27 : $Builtin.Int64, %39 : $StaticString, %41 : $UInt), scope 124 // id: %47

bb11:                                             // Preds: bb7
  br bb17(%27 : $Builtin.Int64, %39 : $StaticString, %41 : $UInt), scope 124 // id: %48

bb12:                                             // Preds: bb6
  %49 = string_literal utf8 "Range requires lowerBound <= upperBound", scope 124 // user: %50
  %50 = builtin "ptrtoint_Word"(%49 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %51
  %51 = struct $StaticString (%50 : $Builtin.Word, %6 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // users: %94, %59, %58
  %52 = integer_literal $Builtin.Int64, 16142, scope 124 // user: %53
  %53 = struct $UInt (%52 : $Builtin.Int64), scope 124 // users: %94, %59, %58
  cond_br %17, bb32, bb13, scope 124              // id: %54

bb13:                                             // Preds: bb12
  %55 = integer_literal $Builtin.Int32, 1, scope 124 // user: %56
  %56 = builtin "cmp_eq_Int32"(%15 : $Builtin.Int32, %55 : $Builtin.Int32) : $Builtin.Int1, scope 124 // user: %57
  cond_br %56, bb15, bb14, scope 124              // id: %57

bb14:                                             // Preds: bb13
  br bb33(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %34 : $Builtin.Int64, %51 : $StaticString, %53 : $UInt), scope 124 // id: %58

bb15:                                             // Preds: bb13
  br bb16(%34 : $Builtin.Int64, %51 : $StaticString, %53 : $UInt), scope 124 // id: %59

// %60                                            // users: %65, %63
// %61                                            // user: %65
// %62                                            // user: %65
bb16(%60 : $Builtin.Int64, %61 : $StaticString, %62 : $UInt): // Preds: bb15 bb10
  %63 = builtin "cmp_slt_Int64"(%60 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %64
  cond_fail %63 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 124 // id: %64
  br bb17(%60 : $Builtin.Int64, %61 : $StaticString, %62 : $UInt), scope 124 // id: %65

// %66                                            // users: %71, %69
// %67                                            // users: %93, %91, %85, %83, %71
// %68                                            // users: %93, %91, %85, %83, %71
bb17(%66 : $Builtin.Int64, %67 : $StaticString, %68 : $UInt): // Preds: bb16 bb11
  %69 = builtin "cmp_eq_Int64"(%66 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %70
  cond_br %69, bb19, bb18, scope 124              // id: %70

bb18:                                             // Preds: bb17
  br bb33(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %66 : $Builtin.Int64, %67 : $StaticString, %68 : $UInt), scope 124 // id: %71

bb19:                                             // Preds: bb17
  %72 = struct $UInt64 (%28 : $Builtin.Int64), scope 124 // users: %92, %91, %85, %84, %83, %74
  cond_br %35, bb21, bb20, scope 124              // id: %73

bb20:                                             // Preds: bb19
  br bb74(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %72 : $UInt64), scope 124 // id: %74

bb21:                                             // Preds: bb19
  %75 = builtin "ssub_with_overflow_Int64"(%27 : $Builtin.Int64, %34 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 124 // user: %76
  %76 = tuple_extract %75 : $(Builtin.Int64, Builtin.Int1), 0, scope 124 // users: %91, %89, %86, %85, %83, %81
  cond_br %17, bb27, bb22, scope 124              // id: %77

bb22:                                             // Preds: bb21
  %78 = integer_literal $Builtin.Int32, 1, scope 124 // user: %79
  %79 = builtin "cmp_eq_Int32"(%15 : $Builtin.Int32, %78 : $Builtin.Int32) : $Builtin.Int1, scope 124 // user: %80
  cond_br %79, bb26, bb23, scope 124              // id: %80

bb23:                                             // Preds: bb22
  %81 = builtin "cmp_eq_Int64"(%76 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %82
  cond_br %81, bb25, bb24, scope 124              // id: %82

bb24:                                             // Preds: bb23
  br bb57(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %72 : $UInt64, %0 : $Builtin.RawPointer, %76 : $Builtin.Int64, %67 : $StaticString, %68 : $UInt), scope 124 // id: %83

bb25:                                             // Preds: bb23
  br bb73(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %72 : $UInt64), scope 124 // id: %84

bb26:                                             // Preds: bb22
  br bb52(%28 : $Builtin.Int64, %72 : $UInt64, %76 : $Builtin.Int64, %67 : $StaticString, %68 : $UInt), scope 124 // id: %85

bb27:                                             // Preds: bb21
  %86 = builtin "cmp_slt_Int64"(%76 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %87
  %87 = builtin "int_expect_Int1"(%86 : $Builtin.Int1, %18 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %88
  cond_br %87, bb31, bb28, scope 124              // id: %88

bb28:                                             // Preds: bb27
  %89 = builtin "cmp_eq_Int64"(%76 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %90
  cond_br %89, bb30, bb29, scope 124              // id: %90

bb29:                                             // Preds: bb28
  br bb57(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %72 : $UInt64, %0 : $Builtin.RawPointer, %76 : $Builtin.Int64, %67 : $StaticString, %68 : $UInt), scope 124 // id: %91

bb30:                                             // Preds: bb28
  br bb73(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %72 : $UInt64), scope 124 // id: %92

bb31:                                             // Preds: bb27
  br bb79(%67 : $StaticString, %68 : $UInt), scope 124 // id: %93

bb32:                                             // Preds: bb12
  br bb33(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %34 : $Builtin.Int64, %51 : $StaticString, %53 : $UInt), scope 124 // id: %94

// %95                                            // users: %148, %145
// %96                                            // user: %147
// %97                                            // users: %138, %134, %123, %121, %116, %114
// %98                                            // users: %152, %150, %128, %123, %116, %112
// %99                                            // users: %314, %295, %178, %166, %164, %152
// %100                                           // users: %314, %295, %178, %166, %164, %152
bb33(%95 : $Builtin.Int64, %96 : $Builtin.Int64, %97 : $Builtin.Int64, %98 : $Builtin.Int64, %99 : $StaticString, %100 : $UInt): // Preds: bb43 bb32 bb18 bb14 bb9
  %101 = string_literal utf8 "Index out of range", scope 124 // user: %103
  %102 = integer_literal $Builtin.Word, 18, scope 124 // user: %104
  %103 = builtin "ptrtoint_Word"(%101 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %104
  %104 = struct $StaticString (%103 : $Builtin.Word, %102 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %324
  %105 = integer_literal $Builtin.Int64, 16002, scope 124 // user: %106
  %106 = struct $UInt (%105 : $Builtin.Int64), scope 124 // user: %324
  cond_br %19, bb37, bb34, scope 124              // id: %107

bb34:                                             // Preds: bb33
  %108 = integer_literal $Builtin.Int32, 1, scope 124 // user: %109
  %109 = builtin "cmp_eq_Int32"(%15 : $Builtin.Int32, %108 : $Builtin.Int32) : $Builtin.Int1, scope 124 // user: %110
  cond_br %109, bb36, bb35, scope 124             // id: %110

bb35:                                             // Preds: bb34
  br bb42, scope 124                              // id: %111

bb36:                                             // Preds: bb34
  %112 = builtin "cmp_slt_Int64"(%98 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %113
  cond_fail %112 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 124 // id: %113
  %114 = builtin "cmp_slt_Int64"(%97 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %115
  cond_fail %114 : $Builtin.Int1, "Index out of bounds", scope 124 // id: %115
  %116 = builtin "cmp_slt_Int64"(%97 : $Builtin.Int64, %98 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %118
  %117 = integer_literal $Builtin.Int1, -1, scope 124 // user: %118
  %118 = builtin "xor_Int1"(%116 : $Builtin.Int1, %117 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %119
  cond_fail %118 : $Builtin.Int1, "Index out of bounds", scope 124 // id: %119
  br bb42, scope 124                              // id: %120

bb37:                                             // Preds: bb33
  %121 = builtin "cmp_slt_Int64"(%97 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %122
  cond_br %121, bb81, bb38, scope 124             // id: %122

bb38:                                             // Preds: bb37
  %123 = builtin "cmp_slt_Int64"(%97 : $Builtin.Int64, %98 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %125
  %124 = integer_literal $Builtin.Int1, -1, scope 124 // user: %125
  %125 = builtin "int_expect_Int1"(%123 : $Builtin.Int1, %124 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %126
  cond_br %125, bb40, bb39, scope 124             // id: %126

bb39:                                             // Preds: bb38
  br bb82, scope 124                              // id: %127

bb40:                                             // Preds: bb38
  %128 = builtin "cmp_slt_Int64"(%98 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %129
  %129 = builtin "int_expect_Int1"(%128 : $Builtin.Int1, %18 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %130
  cond_br %129, bb80, bb41, scope 124             // id: %130

bb41:                                             // Preds: bb40
  br bb42, scope 124                              // id: %131

bb42:                                             // Preds: bb41 bb36 bb35
  %132 = integer_literal $Builtin.Int64, 1, scope 124 // user: %134
  %133 = integer_literal $Builtin.Int1, -1, scope 124 // user: %134
  %134 = builtin "sadd_with_overflow_Int64"(%97 : $Builtin.Int64, %132 : $Builtin.Int64, %133 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 124 // users: %136, %135
  %135 = tuple_extract %134 : $(Builtin.Int64, Builtin.Int1), 0, scope 124 // users: %152, %150
  %136 = tuple_extract %134 : $(Builtin.Int64, Builtin.Int1), 1, scope 124 // user: %137
  cond_fail %136 : $Builtin.Int1, "arithmetic overflow", scope 124 // id: %137
  %138 = builtin "truncOrBitCast_Int64_Word"(%97 : $Builtin.Int64) : $Builtin.Word, scope 124 // user: %140
  %139 = pointer_to_address %0 : $Builtin.RawPointer to [strict] $*UInt8, scope 124 // user: %140
  %140 = index_addr [stack_protection] %139 : $*UInt8, %138 : $Builtin.Word, scope 124 // user: %141
  %141 = struct_element_addr %140 : $*UInt8, #UInt8._value, scope 124 // user: %142
  %142 = load %141 : $*Builtin.Int8, scope 124    // user: %143
  %143 = builtin "zextOrBitCast_Int8_Int64"(%142 : $Builtin.Int8) : $Builtin.Int64, scope 124 // user: %146
  %144 = integer_literal $Builtin.Int64, 63, scope 124 // user: %145
  %145 = builtin "and_Int64"(%95 : $Builtin.Int64, %144 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %146
  %146 = builtin "shl_Int64"(%143 : $Builtin.Int64, %145 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %147
  %147 = builtin "or_Int64"(%96 : $Builtin.Int64, %146 : $Builtin.Int64) : $Builtin.Int64, scope 124 // users: %178, %166, %165, %164, %155, %153, %152
  %148 = builtin "sadd_with_overflow_Int64"(%95 : $Builtin.Int64, %34 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 124 // user: %149
  %149 = tuple_extract %148 : $(Builtin.Int64, Builtin.Int1), 0, scope 124 // user: %152
  %150 = builtin "cmp_eq_Int64"(%135 : $Builtin.Int64, %98 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %151
  cond_br %150, bb44, bb43, scope 124             // id: %151

bb43:                                             // Preds: bb42
  br bb33(%149 : $Builtin.Int64, %147 : $Builtin.Int64, %135 : $Builtin.Int64, %98 : $Builtin.Int64, %99 : $StaticString, %100 : $UInt), scope 124 // id: %152

bb44:                                             // Preds: bb42
  %153 = struct $UInt64 (%147 : $Builtin.Int64), scope 124 // users: %178, %166, %165, %164, %155
  cond_br %35, bb46, bb45, scope 124              // id: %154

bb45:                                             // Preds: bb44
  br bb74(%28 : $Builtin.Int64, %147 : $Builtin.Int64, %153 : $UInt64), scope 124 // id: %155

bb46:                                             // Preds: bb44
  %156 = builtin "ssub_with_overflow_Int64"(%27 : $Builtin.Int64, %34 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 124 // user: %157
  %157 = tuple_extract %156 : $(Builtin.Int64, Builtin.Int1), 0, scope 124 // users: %178, %175, %166, %164, %162
  cond_br %17, bb53, bb47, scope 124              // id: %158

bb47:                                             // Preds: bb46
  %159 = integer_literal $Builtin.Int32, 1, scope 124 // user: %160
  %160 = builtin "cmp_eq_Int32"(%15 : $Builtin.Int32, %159 : $Builtin.Int32) : $Builtin.Int1, scope 124 // user: %161
  cond_br %160, bb51, bb48, scope 124             // id: %161

bb48:                                             // Preds: bb47
  %162 = builtin "cmp_eq_Int64"(%157 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %163
  cond_br %162, bb50, bb49, scope 124             // id: %163

bb49:                                             // Preds: bb48
  br bb57(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %147 : $Builtin.Int64, %153 : $UInt64, %0 : $Builtin.RawPointer, %157 : $Builtin.Int64, %99 : $StaticString, %100 : $UInt), scope 124 // id: %164

bb50:                                             // Preds: bb48
  br bb73(%28 : $Builtin.Int64, %147 : $Builtin.Int64, %153 : $UInt64), scope 124 // id: %165

bb51:                                             // Preds: bb47
  br bb52(%147 : $Builtin.Int64, %153 : $UInt64, %157 : $Builtin.Int64, %99 : $StaticString, %100 : $UInt), scope 124 // id: %166

// %167                                           // user: %174
// %168                                           // user: %174
// %169                                           // users: %174, %172
// %170                                           // user: %174
// %171                                           // user: %174
bb52(%167 : $Builtin.Int64, %168 : $UInt64, %169 : $Builtin.Int64, %170 : $StaticString, %171 : $UInt): // Preds: bb51 bb26
  %172 = builtin "cmp_slt_Int64"(%169 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %173
  cond_fail %172 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 124 // id: %173
  br bb55(%167 : $Builtin.Int64, %168 : $UInt64, %169 : $Builtin.Int64, %170 : $StaticString, %171 : $UInt), scope 124 // id: %174

bb53:                                             // Preds: bb46
  %175 = builtin "cmp_slt_Int64"(%157 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %176
  %176 = builtin "int_expect_Int1"(%175 : $Builtin.Int1, %18 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %177
  cond_br %176, bb78, bb54, scope 124             // id: %177

bb54:                                             // Preds: bb53
  br bb55(%147 : $Builtin.Int64, %153 : $UInt64, %157 : $Builtin.Int64, %99 : $StaticString, %100 : $UInt), scope 124 // id: %178

// %179                                           // users: %270, %186
// %180                                           // users: %270, %186
// %181                                           // users: %186, %184
// %182                                           // user: %186
// %183                                           // user: %186
bb55(%179 : $Builtin.Int64, %180 : $UInt64, %181 : $Builtin.Int64, %182 : $StaticString, %183 : $UInt): // Preds: bb54 bb52
  %184 = builtin "cmp_eq_Int64"(%181 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %185
  cond_br %184, bb72, bb56, scope 124             // id: %185

bb56:                                             // Preds: bb55
  br bb57(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %179 : $Builtin.Int64, %180 : $UInt64, %0 : $Builtin.RawPointer, %181 : $Builtin.Int64, %182 : $StaticString, %183 : $UInt), scope 124 // id: %186

// %187                                           // users: %245, %242
// %188                                           // user: %244
// %189                                           // users: %233, %229, %218, %216, %211, %209
// %190                                           // users: %250, %249
// %191                                           // users: %250, %249
// %192                                           // users: %249, %234
// %193                                           // users: %249, %247, %223, %218, %211, %207
// %194                                           // users: %258, %249
// %195                                           // users: %258, %249
bb57(%187 : $Builtin.Int64, %188 : $Builtin.Int64, %189 : $Builtin.Int64, %190 : $Builtin.Int64, %191 : $UInt64, %192 : $Builtin.RawPointer, %193 : $Builtin.Int64, %194 : $StaticString, %195 : $UInt): // Preds: bb67 bb56 bb49 bb29 bb24
  %196 = string_literal utf8 "Index out of range", scope 124 // user: %198
  %197 = integer_literal $Builtin.Word, 18, scope 124 // user: %199
  %198 = builtin "ptrtoint_Word"(%196 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %199
  %199 = struct $StaticString (%198 : $Builtin.Word, %197 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %268
  %200 = integer_literal $Builtin.Int64, 16002, scope 124 // user: %201
  %201 = struct $UInt (%200 : $Builtin.Int64), scope 124 // user: %268
  cond_br %19, bb61, bb58, scope 124              // id: %202

bb58:                                             // Preds: bb57
  %203 = integer_literal $Builtin.Int32, 1, scope 124 // user: %204
  %204 = builtin "cmp_eq_Int32"(%15 : $Builtin.Int32, %203 : $Builtin.Int32) : $Builtin.Int1, scope 124 // user: %205
  cond_br %204, bb60, bb59, scope 124             // id: %205

bb59:                                             // Preds: bb58
  br bb66, scope 124                              // id: %206

bb60:                                             // Preds: bb58
  %207 = builtin "cmp_slt_Int64"(%193 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %208
  cond_fail %207 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 124 // id: %208
  %209 = builtin "cmp_slt_Int64"(%189 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %210
  cond_fail %209 : $Builtin.Int1, "Index out of bounds", scope 124 // id: %210
  %211 = builtin "cmp_slt_Int64"(%189 : $Builtin.Int64, %193 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %213
  %212 = integer_literal $Builtin.Int1, -1, scope 124 // user: %213
  %213 = builtin "xor_Int1"(%211 : $Builtin.Int1, %212 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %214
  cond_fail %213 : $Builtin.Int1, "Index out of bounds", scope 124 // id: %214
  br bb66, scope 124                              // id: %215

bb61:                                             // Preds: bb57
  %216 = builtin "cmp_slt_Int64"(%189 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %217
  cond_br %216, bb70, bb62, scope 124             // id: %217

bb62:                                             // Preds: bb61
  %218 = builtin "cmp_slt_Int64"(%189 : $Builtin.Int64, %193 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %220
  %219 = integer_literal $Builtin.Int1, -1, scope 124 // user: %220
  %220 = builtin "int_expect_Int1"(%218 : $Builtin.Int1, %219 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %221
  cond_br %220, bb64, bb63, scope 124             // id: %221

bb63:                                             // Preds: bb62
  br bb71, scope 124                              // id: %222

bb64:                                             // Preds: bb62
  %223 = builtin "cmp_slt_Int64"(%193 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %224
  %224 = builtin "int_expect_Int1"(%223 : $Builtin.Int1, %18 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %225
  cond_br %224, bb69, bb65, scope 124             // id: %225

bb65:                                             // Preds: bb64
  br bb66, scope 124                              // id: %226

bb66:                                             // Preds: bb65 bb60 bb59
  %227 = integer_literal $Builtin.Int64, 1, scope 124 // user: %229
  %228 = integer_literal $Builtin.Int1, -1, scope 124 // user: %229
  %229 = builtin "sadd_with_overflow_Int64"(%189 : $Builtin.Int64, %227 : $Builtin.Int64, %228 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 124 // users: %231, %230
  %230 = tuple_extract %229 : $(Builtin.Int64, Builtin.Int1), 0, scope 124 // users: %249, %247
  %231 = tuple_extract %229 : $(Builtin.Int64, Builtin.Int1), 1, scope 124 // user: %232
  cond_fail %231 : $Builtin.Int1, "arithmetic overflow", scope 124 // id: %232
  %233 = builtin "truncOrBitCast_Int64_Word"(%189 : $Builtin.Int64) : $Builtin.Word, scope 124 // user: %237
  %234 = pointer_to_address %192 : $Builtin.RawPointer to [strict] $*UInt8, scope 124 // user: %236
  %235 = integer_literal $Builtin.Word, 8, scope 124 // user: %236
  %236 = index_addr [stack_protection] %234 : $*UInt8, %235 : $Builtin.Word, scope 124 // user: %237
  %237 = index_addr [stack_protection] %236 : $*UInt8, %233 : $Builtin.Word, scope 124 // user: %238
  %238 = struct_element_addr %237 : $*UInt8, #UInt8._value, scope 124 // user: %239
  %239 = load %238 : $*Builtin.Int8, scope 124    // user: %240
  %240 = builtin "zextOrBitCast_Int8_Int64"(%239 : $Builtin.Int8) : $Builtin.Int64, scope 124 // user: %243
  %241 = integer_literal $Builtin.Int64, 63, scope 124 // user: %242
  %242 = builtin "and_Int64"(%187 : $Builtin.Int64, %241 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %243
  %243 = builtin "shl_Int64"(%240 : $Builtin.Int64, %242 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %244
  %244 = builtin "or_Int64"(%188 : $Builtin.Int64, %243 : $Builtin.Int64) : $Builtin.Int64, scope 124 // users: %250, %249
  %245 = builtin "sadd_with_overflow_Int64"(%187 : $Builtin.Int64, %34 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 124 // user: %246
  %246 = tuple_extract %245 : $(Builtin.Int64, Builtin.Int1), 0, scope 124 // user: %249
  %247 = builtin "cmp_eq_Int64"(%230 : $Builtin.Int64, %193 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %248
  cond_br %247, bb68, bb67, scope 124             // id: %248

bb67:                                             // Preds: bb66
  br bb57(%246 : $Builtin.Int64, %244 : $Builtin.Int64, %230 : $Builtin.Int64, %190 : $Builtin.Int64, %191 : $UInt64, %192 : $Builtin.RawPointer, %193 : $Builtin.Int64, %194 : $StaticString, %195 : $UInt), scope 124 // id: %249

bb68:                                             // Preds: bb66
  br bb73(%244 : $Builtin.Int64, %190 : $Builtin.Int64, %191 : $UInt64), scope 124 // id: %250

bb69:                                             // Preds: bb64
  %251 = string_literal utf8 "Fatal error", scope 124 // user: %253
  %252 = integer_literal $Builtin.Word, 11, scope 124 // user: %254
  %253 = builtin "ptrtoint_Word"(%251 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %254
  %254 = struct $StaticString (%253 : $Builtin.Word, %252 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %258
  %255 = integer_literal $Builtin.Int32, 1, scope 124 // user: %256
  %256 = struct $UInt32 (%255 : $Builtin.Int32), scope 124 // user: %258
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %257 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124 // user: %258
  %258 = apply %257(%254, %194, %12, %195, %256) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124
  unreachable , scope 124                         // id: %259

bb70:                                             // Preds: bb61
  br bb71, scope 124                              // id: %260

bb71:                                             // Preds: bb70 bb63
  %261 = string_literal utf8 "Fatal error", scope 124 // user: %263
  %262 = integer_literal $Builtin.Word, 11, scope 124 // user: %264
  %263 = builtin "ptrtoint_Word"(%261 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %264
  %264 = struct $StaticString (%263 : $Builtin.Word, %262 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %268
  %265 = integer_literal $Builtin.Int32, 1, scope 124 // user: %266
  %266 = struct $UInt32 (%265 : $Builtin.Int32), scope 124 // user: %268
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %267 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124 // user: %268
  %268 = apply %267(%264, %199, %12, %201, %266) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124
  unreachable , scope 124                         // id: %269

bb72:                                             // Preds: bb55
  br bb73(%28 : $Builtin.Int64, %179 : $Builtin.Int64, %180 : $UInt64), scope 124 // id: %270

// %271                                           // user: %274
// %272                                           // user: %274
// %273                                           // user: %274
bb73(%271 : $Builtin.Int64, %272 : $Builtin.Int64, %273 : $UInt64): // Preds: bb72 bb68 bb50 bb30 bb25
  br bb74(%271 : $Builtin.Int64, %272 : $Builtin.Int64, %273 : $UInt64), scope 124 // id: %274

// %275                                           // users: %291, %278
// %276                                           // user: %278
// %277                                           // user: %293
bb74(%275 : $Builtin.Int64, %276 : $Builtin.Int64, %277 : $UInt64): // Preds: bb73 bb45 bb20
  %278 = builtin "or_Int64"(%276 : $Builtin.Int64, %275 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %280
  %279 = integer_literal $Builtin.Int64, -9187201950435737472, scope 124 // user: %280
  %280 = builtin "and_Int64"(%278 : $Builtin.Int64, %279 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %281
  %281 = builtin "cmp_eq_Int64"(%280 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %282
  cond_br %281, bb76, bb75, scope 124             // id: %282

bb75:                                             // Preds: bb74
  %283 = integer_literal $Builtin.Int64, -6917529027641081856, scope 124 // user: %284
  br bb77(%283 : $Builtin.Int64), scope 124       // id: %284

bb76:                                             // Preds: bb74
  %285 = integer_literal $Builtin.Int64, -2305843009213693952, scope 124 // user: %286
  br bb77(%285 : $Builtin.Int64), scope 124       // id: %286

// %287                                           // user: %290
bb77(%287 : $Builtin.Int64):                      // Preds: bb76 bb75
  %288 = integer_literal $Builtin.Int64, 56, scope 124 // user: %289
  %289 = builtin "shl_Int64"(%27 : $Builtin.Int64, %288 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %290
  %290 = builtin "or_Int64"(%287 : $Builtin.Int64, %289 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %291
  %291 = builtin "or_Int64"(%275 : $Builtin.Int64, %290 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %292
  %292 = struct $UInt64 (%291 : $Builtin.Int64), scope 124 // user: %293
  %293 = tuple (%277 : $UInt64, %292 : $UInt64), scope 124 // user: %294
  br bb88(%293 : $(UInt64, UInt64)), scope 124    // id: %294

bb78:                                             // Preds: bb53
  br bb79(%99 : $StaticString, %100 : $UInt), scope 124 // id: %295

// %296                                           // user: %305
// %297                                           // user: %305
bb79(%296 : $StaticString, %297 : $UInt):         // Preds: bb78 bb31
  %298 = string_literal utf8 "Fatal error", scope 124 // user: %300
  %299 = integer_literal $Builtin.Word, 11, scope 124 // user: %301
  %300 = builtin "ptrtoint_Word"(%298 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %301
  %301 = struct $StaticString (%300 : $Builtin.Word, %299 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %305
  %302 = integer_literal $Builtin.Int32, 1, scope 124 // user: %303
  %303 = struct $UInt32 (%302 : $Builtin.Int32), scope 124 // user: %305
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %304 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124 // user: %305
  %305 = apply %304(%301, %296, %12, %297, %303) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124
  unreachable , scope 124                         // id: %306

bb80:                                             // Preds: bb40
  %307 = string_literal utf8 "Fatal error", scope 124 // user: %309
  %308 = integer_literal $Builtin.Word, 11, scope 124 // user: %310
  %309 = builtin "ptrtoint_Word"(%307 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %310
  %310 = struct $StaticString (%309 : $Builtin.Word, %308 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %314
  %311 = integer_literal $Builtin.Int32, 1, scope 124 // user: %312
  %312 = struct $UInt32 (%311 : $Builtin.Int32), scope 124 // user: %314
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %313 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124 // user: %314
  %314 = apply %313(%310, %99, %12, %100, %312) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124
  unreachable , scope 124                         // id: %315

bb81:                                             // Preds: bb37
  br bb82, scope 124                              // id: %316

bb82:                                             // Preds: bb81 bb39
  %317 = string_literal utf8 "Fatal error", scope 124 // user: %319
  %318 = integer_literal $Builtin.Word, 11, scope 124 // user: %320
  %319 = builtin "ptrtoint_Word"(%317 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %320
  %320 = struct $StaticString (%319 : $Builtin.Word, %318 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %324
  %321 = integer_literal $Builtin.Int32, 1, scope 124 // user: %322
  %322 = struct $UInt32 (%321 : $Builtin.Int32), scope 124 // user: %324
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %323 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124 // user: %324
  %324 = apply %323(%320, %104, %12, %106, %322) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124
  unreachable , scope 124                         // id: %325

bb83:                                             // Preds: bb5
  cond_br %2, bb85, bb84, scope 124               // id: %326

bb84:                                             // Preds: bb83
  br bb86(%27 : $Builtin.Int64), scope 124        // id: %327

bb85:                                             // Preds: bb83
  %328 = integer_literal $Builtin.Int64, -4611686018427387904, scope 124 // user: %329
  %329 = builtin "or_Int64"(%27 : $Builtin.Int64, %328 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %330
  br bb86(%329 : $Builtin.Int64), scope 124       // id: %330

// %331                                           // user: %333
bb86(%331 : $Builtin.Int64):                      // Preds: bb85 bb84
  %332 = integer_literal $Builtin.Int64, 1152921504606846976, scope 124 // user: %333
  %333 = builtin "or_Int64"(%331 : $Builtin.Int64, %332 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %334
  %334 = struct $UInt64 (%333 : $Builtin.Int64), scope 124 // user: %343
  %335 = builtin "ptrtoint_Word"(%0 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %336
  %336 = builtin "zextOrBitCast_Word_Int64"(%335 : $Builtin.Word) : $Builtin.Int64, scope 124 // user: %338
  %337 = integer_literal $Builtin.Int64, 32, scope 124 // user: %338
  %338 = builtin "usub_with_overflow_Int64"(%336 : $Builtin.Int64, %337 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 124 // user: %339
  %339 = tuple_extract %338 : $(Builtin.Int64, Builtin.Int1), 0, scope 124 // user: %341
  %340 = integer_literal $Builtin.Int64, -9223372036854775808, scope 124 // user: %341
  %341 = builtin "stringObjectOr_Int64"(%339 : $Builtin.Int64, %340 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %342
  %342 = value_to_bridge_object %341 : $Builtin.Int64, scope 124 // user: %343
  %343 = struct $_StringObject (%334 : $UInt64, %342 : $Builtin.BridgeObject), scope 124 // user: %344
  %344 = struct $_StringGuts (%343 : $_StringObject), scope 124 // user: %345
  %345 = struct $String (%344 : $_StringGuts), scope 124 // user: %346
  br bb89(%345 : $String), scope 124              // id: %346

bb87:                                             // Preds: bb4
  %347 = integer_literal $Builtin.Int64, -2305843009213693952, scope 124 // user: %348
  %348 = value_to_bridge_object %347 : $Builtin.Int64, scope 124 // user: %350
  %349 = struct $UInt64 (%28 : $Builtin.Int64), scope 124 // user: %351
  %350 = unchecked_trivial_bit_cast %348 : $Builtin.BridgeObject to $UInt64, scope 124 // user: %351
  %351 = tuple (%349 : $UInt64, %350 : $UInt64), scope 124 // user: %352
  br bb88(%351 : $(UInt64, UInt64)), scope 124    // id: %352

// %353                                           // users: %355, %354
bb88(%353 : $(UInt64, UInt64)):                   // Preds: bb87 bb77
  %354 = tuple_extract %353 : $(UInt64, UInt64), 0, scope 124 // user: %358
  %355 = tuple_extract %353 : $(UInt64, UInt64), 1, scope 124 // user: %356
  %356 = struct_extract %355 : $UInt64, #UInt64._value, scope 124 // user: %357
  %357 = value_to_bridge_object %356 : $Builtin.Int64, scope 124 // user: %358
  %358 = struct $_StringObject (%354 : $UInt64, %357 : $Builtin.BridgeObject), scope 124 // user: %359
  %359 = struct $_StringGuts (%358 : $_StringObject), scope 124 // user: %360
  %360 = struct $String (%359 : $_StringGuts), scope 124 // user: %361
  br bb89(%360 : $String), scope 124              // id: %361

// %362                                           // user: %363
bb89(%362 : $String):                             // Preds: bb88 bb86
  return %362 : $String, scope 124                // id: %363

bb90:                                             // Preds: bb2
  %364 = string_literal utf8 "Fatal error", scope 124 // user: %366
  %365 = integer_literal $Builtin.Word, 11, scope 124 // user: %367
  %366 = builtin "ptrtoint_Word"(%364 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %367
  %367 = struct $StaticString (%366 : $Builtin.Word, %365 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %371
  %368 = integer_literal $Builtin.Int32, 1, scope 124 // user: %369
  %369 = struct $UInt32 (%368 : $Builtin.Int32), scope 124 // user: %371
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %370 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124 // user: %371
  %371 = apply %370(%367, %9, %12, %14, %369) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124
  unreachable , scope 124                         // id: %372
} // end sil function '$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC'


// String.append(_:), loc * "<compiler-generated>":0:0, scope 0
sil [_semantics "string.append"] @$sSS6appendyySSF : $@convention(method) (@guaranteed String, @inout String) -> ()


// _typeName(_:qualified:), loc * "<compiler-generated>":0:0, scope 0
sil [_semantics "typeName"] @$ss9_typeName_9qualifiedSSypXp_SbtF : $@convention(thin) (@thick any Any.Type, Bool) -> @owned String

sil_scope 125 { loc * "<compiler-generated>":0:0 parent @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String }

// String.init(stringInterpolation:), loc * "<compiler-generated>":0:0, scope 125
sil public_external [serialized] [readonly] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String {
[%0: escape v** => %r.v**, escape v**.c*.v** => %r.v**.c*.v**]
// %0                                             // user: %2
bb0(%0 : $DefaultStringInterpolation, %1 : $@thin String.Type):
  %2 = struct_extract %0 : $DefaultStringInterpolation, #DefaultStringInterpolation._storage, scope 125 // user: %3
  return %2 : $String, scope 125                  // id: %3
} // end sil function '$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC'


// _assertionFailure(_:_:flags:), loc * "<compiler-generated>":0:0, scope 0
sil [noinline] [_semantics "programtermination_point"] @$ss17_assertionFailure__5flagss5NeverOs12StaticStringV_SSs6UInt32VtF : $@convention(thin) (StaticString, @guaranteed String, UInt32) -> Never

sil_scope 126 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV4cast02toB2OfAByqd__Gqd__m_tlF : $@convention(method) <τ_0_0><τ_1_0> (@thick τ_1_0.Type, @owned _ArrayBuffer<τ_0_0>) -> @owned _ArrayBuffer<τ_1_0> }

// _ArrayBuffer.cast<A>(toBufferOf:), loc * "<compiler-generated>":0:0, scope 126
sil public_external [serialized] @$ss12_ArrayBufferV4cast02toB2OfAByqd__Gqd__m_tlF : $@convention(method) <Element><U> (@thick U.Type, @owned _ArrayBuffer<Element>) -> @owned _ArrayBuffer<U> {
[%1: escape v** => %r.s0.v**, escape v**.c*.v** => %r.s0.v**.c*.v**]
// %1                                             // user: %3
bb0(%0 : $@thick U.Type, %1 : $_ArrayBuffer<Element>):
  %2 = metatype $@thin _ArrayBuffer<U>.Type, scope 126 // user: %5
  %3 = struct_extract %1 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 126 // user: %5
  // function_ref _ArrayBuffer.init(storage:)
  %4 = function_ref @$ss12_ArrayBufferV7storageAByxGs14_BridgeStorageVys012__ContiguousaE4BaseCG_tcfC : $@convention(method) <τ_0_0> (@owned _BridgeStorage<__ContiguousArrayStorageBase>, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0>, scope 126 // user: %5
  %5 = apply %4<U>(%3, %2) : $@convention(method) <τ_0_0> (@owned _BridgeStorage<__ContiguousArrayStorageBase>, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0>, scope 126 // user: %6
  return %5 : $_ArrayBuffer<U>, scope 126         // id: %6
} // end sil function '$ss12_ArrayBufferV4cast02toB2OfAByqd__Gqd__m_tlF'


// _StringGuts.grow(_:), loc * "<compiler-generated>":0:0, scope 0
sil @$ss11_StringGutsV4growyySiF : $@convention(method) (Int, @inout _StringGuts) -> ()

sil_scope 127 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV7storageAByxGs14_BridgeStorageVys012__ContiguousaE4BaseCG_tcfC : $@convention(method) <τ_0_0> (@owned _BridgeStorage<__ContiguousArrayStorageBase>, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0> }

// _ArrayBuffer.init(storage:), loc * "<compiler-generated>":0:0, scope 127
sil public_external [serialized] @$ss12_ArrayBufferV7storageAByxGs14_BridgeStorageVys012__ContiguousaE4BaseCG_tcfC : $@convention(method) <Element> (@owned _BridgeStorage<__ContiguousArrayStorageBase>, @thin _ArrayBuffer<Element>.Type) -> @owned _ArrayBuffer<Element> {
[%0: escape v** => %r.s0.v**, escape v**.c*.v** => %r.s0.v**.c*.v**]
// %0                                             // user: %2
bb0(%0 : $_BridgeStorage<__ContiguousArrayStorageBase>, %1 : $@thin _ArrayBuffer<Element>.Type):
  %2 = struct $_ArrayBuffer<Element> (%0 : $_BridgeStorage<__ContiguousArrayStorageBase>), scope 127 // user: %3
  return %2 : $_ArrayBuffer<Element>, scope 127   // id: %3
} // end sil function '$ss12_ArrayBufferV7storageAByxGs14_BridgeStorageVys012__ContiguousaE4BaseCG_tcfC'

sil_scope 128 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV16beginCOWMutationSbyF : $@convention(method) <τ_0_0> (@inout _ContiguousArrayBuffer<τ_0_0>) -> Bool }

// _ContiguousArrayBuffer.beginCOWMutation(), loc * "<compiler-generated>":0:0, scope 128
sil shared [serialized] @$ss22_ContiguousArrayBufferV16beginCOWMutationSbyF : $@convention(method) <Element> (@inout _ContiguousArrayBuffer<Element>) -> Bool {
[%0: escape v** -> %0.s0.v**, escape v**.c*.v** -> %0.s0.v**.c*.v**, read s0.v**, write v**, destroy v**]
[global: destroy]
// %0                                             // users: %6, %1
bb0(%0 : $*_ContiguousArrayBuffer<Element>):
  %1 = struct_element_addr %0 : $*_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 128 // user: %2
  %2 = load %1 : $*__ContiguousArrayStorageBase, scope 128 // user: %3
  (%3, %4) = begin_cow_mutation %2 : $__ContiguousArrayStorageBase, scope 128 // users: %7, %5
  %5 = struct $_ContiguousArrayBuffer<Element> (%4 : $__ContiguousArrayStorageBase), scope 128 // user: %6
  store %5 to %0 : $*_ContiguousArrayBuffer<Element>, scope 128 // id: %6
  cond_br %3, bb2, bb1, scope 128                 // id: %7

bb1:                                              // Preds: bb0
  %8 = integer_literal $Builtin.Int1, 0, scope 128 // user: %9
  br bb3(%8 : $Builtin.Int1), scope 128           // id: %9

bb2:                                              // Preds: bb0
  %10 = integer_literal $Builtin.Int1, -1, scope 128 // user: %11
  br bb3(%10 : $Builtin.Int1), scope 128          // id: %11

// %12                                            // user: %13
bb3(%12 : $Builtin.Int1):                         // Preds: bb2 bb1
  %13 = struct $Bool (%12 : $Builtin.Int1), scope 128 // user: %14
  return %13 : $Bool, scope 128                   // id: %14
} // end sil function '$ss22_ContiguousArrayBufferV16beginCOWMutationSbyF'

sil_scope 129 { loc * "<compiler-generated>":0:0 parent @$ss15ContiguousArrayV5countSivg : $@convention(method) <τ_0_0> (@guaranteed ContiguousArray<τ_0_0>) -> Int }

// ContiguousArray.count.getter, loc * "<compiler-generated>":0:0, scope 129
sil public_external [serialized] @$ss15ContiguousArrayV5countSivg : $@convention(method) <Element> (@guaranteed ContiguousArray<Element>) -> Int {
[%0: noescape **]
// %0                                             // user: %2
bb0(%0 : $ContiguousArray<Element>):
  // function_ref ContiguousArray._getCount()
  %1 = function_ref @$ss15ContiguousArrayV9_getCountSiyF : $@convention(method) <τ_0_0> (@guaranteed ContiguousArray<τ_0_0>) -> Int, scope 129 // user: %2
  %2 = apply %1<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed ContiguousArray<τ_0_0>) -> Int, scope 129 // user: %3
  return %2 : $Int, scope 129                     // id: %3
} // end sil function '$ss15ContiguousArrayV5countSivg'

sil_scope 130 { loc * "<compiler-generated>":0:0 parent @$ss15ContiguousArrayV9_getCountSiyF : $@convention(method) <τ_0_0> (@guaranteed ContiguousArray<τ_0_0>) -> Int }

// ContiguousArray._getCount(), loc * "<compiler-generated>":0:0, scope 130
sil public_external [serialized] [_semantics "array.get_count"] @$ss15ContiguousArrayV9_getCountSiyF : $@convention(method) <Element> (@guaranteed ContiguousArray<Element>) -> Int {
[%0: noescape **]
// %0                                             // user: %1
bb0(%0 : $ContiguousArray<Element>):
  %1 = struct_extract %0 : $ContiguousArray<Element>, #ContiguousArray._buffer, scope 130 // user: %2
  %2 = struct_extract %1 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 130 // user: %3
  %3 = ref_element_addr [immutable] %2 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 130 // user: %4
  %4 = struct_element_addr %3 : $*_ArrayBody, #_ArrayBody._storage, scope 130 // user: %5
  %5 = struct_element_addr %4 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 130 // user: %6
  %6 = struct_element_addr %5 : $*Int, #Int._value, scope 130 // user: %7
  %7 = load %6 : $*Builtin.Int64, scope 130       // user: %8
  %8 = builtin "assumeNonNegative_Int64"(%7 : $Builtin.Int64) : $Builtin.Int64, scope 130 // user: %9
  %9 = struct $Int (%8 : $Builtin.Int64), scope 130 // user: %10
  return %9 : $Int, scope 130                     // id: %10
} // end sil function '$ss15ContiguousArrayV9_getCountSiyF'

sil_vtable ViewController {
  #ViewController.deinit!deallocator: @$s8TestSwan14ViewControllerCfD	// ViewController.__deallocating_deinit
}

sil_vtable AppDelegate {
  #AppDelegate.deinit!deallocator: @$s8TestSwan11AppDelegateCfD	// AppDelegate.__deallocating_deinit
}

sil_vtable ResourceBundleClass {
  #ResourceBundleClass.deinit!deallocator: @$s8TestSwan19ResourceBundleClass33_7E57A1E4A3086DE18043CF46058E5058LLCfD	// ResourceBundleClass.__deallocating_deinit
}

sil_vtable [serialized] _ContiguousArrayStorage {
  #__SwiftNativeNSArray.init!allocator: (__SwiftNativeNSArray.Type) -> () -> __SwiftNativeNSArray : @$ss41__SwiftNativeNSArrayWithContiguousStorageCABycfC [inherited]	// __SwiftNativeNSArrayWithContiguousStorage.__allocating_init()
  #__ContiguousArrayStorageBase.init!allocator: (__ContiguousArrayStorageBase.Type) -> (()) -> __ContiguousArrayStorageBase : @$ss23_ContiguousArrayStorageC16_doNotCallMeBaseAByxGyt_tcfC [override]	// _ContiguousArrayStorage.__allocating_init(_doNotCallMeBase:)
  #__ContiguousArrayStorageBase.canStoreElements: (__ContiguousArrayStorageBase) -> (any Any.Type) -> Bool : @$ss23_ContiguousArrayStorageC16canStoreElements13ofDynamicTypeSbypXp_tF [override]	// _ContiguousArrayStorage.canStoreElements(ofDynamicType:)
  #__ContiguousArrayStorageBase.staticElementType!getter: (__ContiguousArrayStorageBase) -> () -> any Any.Type : @$ss23_ContiguousArrayStorageC17staticElementTypeypXpvg [override]	// _ContiguousArrayStorage.staticElementType.getter
  #_ContiguousArrayStorage.deinit!deallocator: @$ss23_ContiguousArrayStorageCfD	// _ContiguousArrayStorage.__deallocating_deinit
}

sil_vtable [serialized] __SwiftNativeNSArrayWithContiguousStorage {
  #__SwiftNativeNSArray.init!allocator: (__SwiftNativeNSArray.Type) -> () -> __SwiftNativeNSArray : @$ss41__SwiftNativeNSArrayWithContiguousStorageCABycfC [override]	// __SwiftNativeNSArrayWithContiguousStorage.__allocating_init()
  #__SwiftNativeNSArrayWithContiguousStorage.deinit!deallocator: @$ss41__SwiftNativeNSArrayWithContiguousStorageCfD	// __SwiftNativeNSArrayWithContiguousStorage.__deallocating_deinit
}




CompileSwift normal x86_64 (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -c /Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift /Users/v/Developer/TestSwan/TestSwan/ViewController.swift /Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift -supplementary-output-file-map /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/supplementaryOutputs-2 -emit-localized-strings -emit-localized-strings-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64 -target x86_64-apple-macos14.0 -enable-objc-interop -stack-check -sdk /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk -I /Users/v/Developer/TestSwan/build/Release -F /Users/v/Developer/TestSwan/build/Release -no-color-diagnostics -g -swift-version 5 -enforce-exclusivity\=checked -O -sil-based-debuginfo -serialize-debugging-options -const-gather-protocols-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan_const_extract_protocols.json -enable-bare-slash-regex -empty-abi-descriptor -validate-clang-modules-once -clang-build-session-file /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/org.llvm.clang/ModuleCache.noindex/Session.modulevalidation -Xcc -working-directory -Xcc /Users/v/Developer/TestSwan -resource-dir /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -Xllvm -sil-print-debuginfo -Xllvm -sil-print-before\=SerializeSILPass -Xcc -ivfsstatcache -Xcc /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/com.apple.DeveloperTools/15.0.1-15A507/Xcode/SDKStatCaches.noindex/macosx14.0-23A334-a6d624f38f346a2334bec600b7c81604.sdkstatcache -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-generated-files.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-own-target-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-all-target-headers.hmap -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-project-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/Release/include -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources-normal/x86_64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/x86_64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources -module-name TestSwan -frontend-parseable-output -disable-clang-spi -target-sdk-version 14.0 -target-sdk-name macosx14.0 -external-plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/lib/swift/host/plugins\#/Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/local/lib/swift/host/plugins\#/Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins\#/Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins\#/Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -enable-default-cmo -num-threads 12 -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/NSTextField+Extension.o -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/ViewController.o -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/AppDelegate.o -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/GeneratedAssetSymbols.o -index-unit-output-path /TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/NSTextField+Extension.o -index-unit-output-path /TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/ViewController.o -index-unit-output-path /TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/AppDelegate.o -index-unit-output-path /TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/GeneratedAssetSymbols.o

SwiftCompile normal arm64 Compiling\ NSTextField+Extension.swift,\ ViewController.swift,\ AppDelegate.swift,\ GeneratedAssetSymbols.swift /Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift /Users/v/Developer/TestSwan/TestSwan/ViewController.swift /Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-swiftTaskExecution -- /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c /Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift /Users/v/Developer/TestSwan/TestSwan/ViewController.swift /Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift -supplementary-output-file-map /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/supplementaryOutputs-1 -emit-localized-strings -emit-localized-strings-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64 -target arm64-apple-macos14.0 -Xllvm -aarch64-use-tbi -enable-objc-interop -stack-check -sdk /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk -I /Users/v/Developer/TestSwan/build/Release -F /Users/v/Developer/TestSwan/build/Release -no-color-diagnostics -g -swift-version 5 -enforce-exclusivity\=checked -O -sil-based-debuginfo -serialize-debugging-options -const-gather-protocols-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan_const_extract_protocols.json -enable-bare-slash-regex -empty-abi-descriptor -validate-clang-modules-once -clang-build-session-file /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/org.llvm.clang/ModuleCache.noindex/Session.modulevalidation -Xcc -working-directory -Xcc /Users/v/Developer/TestSwan -resource-dir /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -Xllvm -sil-print-debuginfo -Xllvm -sil-print-before\=SerializeSILPass -Xcc -ivfsstatcache -Xcc /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/com.apple.DeveloperTools/15.0.1-15A507/Xcode/SDKStatCaches.noindex/macosx14.0-23A334-a6d624f38f346a2334bec600b7c81604.sdkstatcache -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-generated-files.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-own-target-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-all-target-headers.hmap -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-project-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/Release/include -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources-normal/arm64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/arm64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources -module-name TestSwan -frontend-parseable-output -disable-clang-spi -target-sdk-version 14.0 -target-sdk-name macosx14.0 -external-plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/lib/swift/host/plugins\#/Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/local/lib/swift/host/plugins\#/Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins\#/Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins\#/Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -enable-default-cmo -num-threads 12 -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/NSTextField+Extension.o -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/ViewController.o -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/AppDelegate.o -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/GeneratedAssetSymbols.o -index-unit-output-path /TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/NSTextField+Extension.o -index-unit-output-path /TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/ViewController.o -index-unit-output-path /TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/AppDelegate.o -index-unit-output-path /TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/GeneratedAssetSymbols.o
  *** SIL module before #2756, stage HighLevel,Module+StackPromote, pass 10: SerializeSILPass (serialize-sil)
sil_stage canonical

import Builtin
import Swift
import SwiftShims

// _swiftEmptyArrayStorage
// clang name: _swiftEmptyArrayStorage
sil_global public_external @_swiftEmptyArrayStorage : $_SwiftEmptyArrayStorage

sil_scope 1 { loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":13:17 parent @$s8TestSwan14ViewControllerC11viewDidLoadyyFTo : $@convention(objc_method) (ViewController) -> () }
sil_scope 2 { loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":13:17 parent 1 }
sil_scope 3 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":13:17 parent @$s8TestSwan14ViewControllerC11viewDidLoadyyF : $@convention(method) (@guaranteed ViewController) -> () inlined_at 2 }

// @objc ViewController.viewDidLoad(), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":13:17, scope 1
sil private [thunk] @$s8TestSwan14ViewControllerC11viewDidLoadyyFTo : $@convention(objc_method) (ViewController) -> () {
[%0: read c*.v**, write c*.v**, copy c*.v**, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %3, %2, %1
bb0(%0 : $ViewController):
  debug_value %0 : $ViewController, let, name "self", argno 1, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":13:17, scope 3 // id: %1
  %2 = upcast %0 : $ViewController to $NSViewController, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":14:5, scope 3 // user: %4
  %3 = objc_super_method %0 : $ViewController, #NSViewController.viewDidLoad!foreign : (NSViewController) -> () -> (), $@convention(objc_method) (NSViewController) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":14:11, scope 3 // user: %4
  %4 = apply %3(%2) : $@convention(objc_method) (NSViewController) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":14:11, scope 3
  %5 = tuple (), loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":17:3, scope 3 // user: %6
  return %5 : $(), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":13:17, scope 1 // id: %6
} // end sil function '$s8TestSwan14ViewControllerC11viewDidLoadyyFTo'

sil_scope 4 { loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16 parent @$s8TestSwan14ViewControllerC17representedObjectypSgvgTo : $@convention(objc_method) (ViewController) -> @autoreleased Optional<AnyObject> }
sil_scope 5 { loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16 parent 4 }
sil_scope 6 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16 parent @$s8TestSwan14ViewControllerC17representedObjectypSgvg : $@convention(method) (@guaranteed ViewController) -> @out Optional<Any> inlined_at 5 }

// @objc ViewController.representedObject.getter, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4
sil private [thunk] @$s8TestSwan14ViewControllerC17representedObjectypSgvgTo : $@convention(objc_method) (ViewController) -> @autoreleased Optional<AnyObject> {
[%0: read c*.v**, write c*.v**, copy **, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %18, %15, %5, %4, %3, %2
bb0(%0 : $ViewController):
  %1 = alloc_stack $Optional<Any>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // users: %17, %14, %11, %35, %21, %20
  debug_value %0 : $ViewController, let, name "self", argno 1, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 6 // id: %2
  %3 = upcast %0 : $ViewController to $NSViewController, scope 6 // user: %6
  %4 = objc_super_method %0 : $ViewController, #NSViewController.representedObject!getter.foreign : (NSViewController) -> () -> Any?, $@convention(objc_method) (NSViewController) -> @autoreleased Optional<AnyObject>, scope 6 // user: %6
  strong_retain %0 : $ViewController, loc * "<compiler-generated>":0:0, scope 4 // id: %5
  %6 = apply %4(%3) : $@convention(objc_method) (NSViewController) -> @autoreleased Optional<AnyObject>, scope 6 // users: %13, %7
  switch_enum %6 : $Optional<AnyObject>, case #Optional.some!enumelt: bb1, case #Optional.none!enumelt: bb2, scope 6 // id: %7

// %8                                             // user: %9
bb1(%8 : $AnyObject):                             // Preds: bb0
  %9 = unchecked_ref_cast %8 : $AnyObject to $Optional<AnyObject>, scope 6 // user: %12
  // function_ref _bridgeAnyObjectToAny(_:)
  %10 = function_ref @$ss018_bridgeAnyObjectToB0yypyXlSgF : $@convention(thin) (@guaranteed Optional<AnyObject>) -> @out Any, scope 6 // user: %12
  %11 = init_enum_data_addr %1 : $*Optional<Any>, #Optional.some!enumelt, scope 6 // user: %12
  %12 = apply %10(%11, %9) : $@convention(thin) (@guaranteed Optional<AnyObject>) -> @out Any, scope 6
  release_value %6 : $Optional<AnyObject>, loc * "<compiler-generated>":0:0, scope 4 // id: %13
  inject_enum_addr %1 : $*Optional<Any>, #Optional.some!enumelt, scope 6 // id: %14
  strong_release %0 : $ViewController, loc * "<compiler-generated>":0:0, scope 4 // id: %15
  br bb3, scope 6                                 // id: %16

bb2:                                              // Preds: bb0
  inject_enum_addr %1 : $*Optional<Any>, #Optional.none!enumelt, scope 6 // id: %17
  strong_release %0 : $ViewController, loc * "<compiler-generated>":0:0, scope 4 // id: %18
  br bb3, scope 6                                 // id: %19

bb3:                                              // Preds: bb2 bb1
  switch_enum_addr %1 : $*Optional<Any>, case #Optional.some!enumelt: bb4, case #Optional.none!enumelt: bb5, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // id: %20

bb4:                                              // Preds: bb3
  %21 = unchecked_take_enum_data_addr %1 : $*Optional<Any>, #Optional.some!enumelt, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // users: %30, %22
  %22 = open_existential_addr immutable_access %21 : $*Any to $*@opened("2DF1C52E-8BDA-11EE-A51F-86803A041461", Any) Self, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // users: %26, %24, %23
  %23 = alloc_stack $@opened("2DF1C52E-8BDA-11EE-A51F-86803A041461", Any) Self, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // type-defs: %22; users: %27, %29, %26, %24
  copy_addr %22 to [init] %23 : $*@opened("2DF1C52E-8BDA-11EE-A51F-86803A041461", Any) Self, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // id: %24
  // function_ref _bridgeAnythingToObjectiveC<A>(_:)
  %25 = function_ref @$ss27_bridgeAnythingToObjectiveCyyXlxlF : $@convention(thin) <τ_0_0> (@in_guaranteed τ_0_0) -> @owned AnyObject, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // user: %26
  %26 = apply %25<@opened("2DF1C52E-8BDA-11EE-A51F-86803A041461", Any) Self>(%23) : $@convention(thin) <τ_0_0> (@in_guaranteed τ_0_0) -> @owned AnyObject, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // type-defs: %22; user: %28
  destroy_addr %23 : $*@opened("2DF1C52E-8BDA-11EE-A51F-86803A041461", Any) Self, loc * "<compiler-generated>":0:0, scope 4 // id: %27
  %28 = enum $Optional<AnyObject>, #Optional.some!enumelt, %26 : $AnyObject, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // user: %31
  dealloc_stack %23 : $*@opened("2DF1C52E-8BDA-11EE-A51F-86803A041461", Any) Self, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // id: %29
  destroy_addr %21 : $*Any, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // id: %30
  br bb6(%28 : $Optional<AnyObject>), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // id: %31

bb5:                                              // Preds: bb3
  %32 = enum $Optional<AnyObject>, #Optional.none!enumelt, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // user: %33
  br bb6(%32 : $Optional<AnyObject>), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // id: %33

// %34                                            // user: %36
bb6(%34 : $Optional<AnyObject>):                  // Preds: bb5 bb4
  dealloc_stack %1 : $*Optional<Any>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // id: %35
  return %34 : $Optional<AnyObject>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 4 // id: %36
} // end sil function '$s8TestSwan14ViewControllerC17representedObjectypSgvgTo'

sil_scope 7 {  parent @$ss27_bridgeAnythingToObjectiveCyyXlxlF : $@convention(thin) <τ_0_0> (@in_guaranteed τ_0_0) -> @owned AnyObject }

// _bridgeAnythingToObjectiveC<A>(_:), scope 7
sil public_external [serialized] @$ss27_bridgeAnythingToObjectiveCyyXlxlF : $@convention(thin) <T> (@in_guaranteed T) -> @owned AnyObject {
// %0                                             // users: %32, %26
bb0(%0 : $*T):
  %1 = metatype $@thick T.Type, scope 7           // users: %10, %2
  %2 = builtin "canBeClass"<T>(%1 : $@thick T.Type) : $Builtin.Int8, scope 7 // users: %7, %4
  %3 = integer_literal $Builtin.Int8, 0, scope 7  // user: %4
  %4 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %3 : $Builtin.Int8) : $Builtin.Int1, scope 7 // user: %5
  cond_br %4, bb7, bb1, scope 7                   // id: %5

bb1:                                              // Preds: bb0
  %6 = integer_literal $Builtin.Int8, 1, scope 7  // user: %7
  %7 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %6 : $Builtin.Int8) : $Builtin.Int1, scope 7 // user: %8
  cond_br %7, bb5, bb2, scope 7                   // id: %8

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %9 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 7 // user: %10
  %10 = apply %9<T>(%1) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 7 // user: %11
  %11 = struct_extract %10 : $Bool, #Bool._value, scope 7 // user: %13
  %12 = integer_literal $Builtin.Int1, -1, scope 7 // user: %13
  %13 = builtin "int_expect_Int1"(%11 : $Builtin.Int1, %12 : $Builtin.Int1) : $Builtin.Int1, scope 7 // user: %14
  cond_br %13, bb4, bb3, scope 7                  // id: %14

bb3:                                              // Preds: bb2
  br bb8, scope 7                                 // id: %15

bb4:                                              // Preds: bb2
  br bb6, scope 7                                 // id: %16

bb5:                                              // Preds: bb1
  br bb6, scope 7                                 // id: %17

bb6:                                              // Preds: bb5 bb4
  %18 = builtin "sizeof"<T>() : $Builtin.Word, scope 7 // user: %19
  %19 = builtin "sextOrBitCast_Word_Int64"(%18 : $Builtin.Word) : $Builtin.Int64, scope 7 // user: %22
  %20 = builtin "sizeof"<AnyObject>() : $Builtin.Word, scope 7 // user: %21
  %21 = builtin "sextOrBitCast_Word_Int64"(%20 : $Builtin.Word) : $Builtin.Int64, scope 7 // user: %22
  %22 = builtin "cmp_eq_Int64"(%19 : $Builtin.Int64, %21 : $Builtin.Int64) : $Builtin.Int1, scope 7 // user: %24
  %23 = integer_literal $Builtin.Int1, -1, scope 7 // user: %24
  %24 = builtin "xor_Int1"(%22 : $Builtin.Int1, %23 : $Builtin.Int1) : $Builtin.Int1, scope 7 // user: %25
  cond_fail %24 : $Builtin.Int1, "Can't unsafeBitCast between types of different sizes", scope 7 // id: %25
  %26 = unchecked_addr_cast %0 : $*T to $*AnyObject, scope 7 // user: %27
  %27 = load %26 : $*AnyObject, scope 7           // users: %29, %28
  strong_retain %27 : $AnyObject, scope 7         // id: %28
  br bb9(%27 : $AnyObject), scope 7               // id: %29

bb7:                                              // Preds: bb0
  br bb8, scope 7                                 // id: %30

bb8:                                              // Preds: bb7 bb3
  %31 = alloc_stack $T, scope 7                   // users: %35, %34, %32
  copy_addr %0 to [init] %31 : $*T, scope 7       // id: %32
  // function_ref _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)
  %33 = function_ref @$ss38_bridgeAnythingNonVerbatimToObjectiveCyyXlxnlF : $@convention(thin) <τ_0_0> (@in τ_0_0) -> @owned AnyObject, scope 7 // user: %34
  %34 = apply %33<T>(%31) : $@convention(thin) <τ_0_0> (@in τ_0_0) -> @owned AnyObject, scope 7 // user: %36
  dealloc_stack %31 : $*T, scope 7                // id: %35
  br bb9(%34 : $AnyObject), scope 7               // id: %36

// %37                                            // user: %38
bb9(%37 : $AnyObject):                            // Preds: bb8 bb6
  return %37 : $AnyObject, scope 7                // id: %38
} // end sil function '$ss27_bridgeAnythingToObjectiveCyyXlxlF'

sil_scope 8 { loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16 parent @$s8TestSwan14ViewControllerC17representedObjectypSgvsTo : $@convention(objc_method) (Optional<AnyObject>, ViewController) -> () }

// @objc ViewController.representedObject.setter, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8
sil private [thunk] @$s8TestSwan14ViewControllerC17representedObjectypSgvsTo : $@convention(objc_method) (Optional<AnyObject>, ViewController) -> () {
[%0: read v**.c*.v**, write v**.c*.v**, copy **, destroy v**.c*.v**]
[%1: read c*.v**, write c*.v**, copy **, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %11, %9, %3
// %1                                             // users: %19, %8, %15, %18
bb0(%0 : $Optional<AnyObject>, %1 : $ViewController):
  %2 = alloc_stack $Optional<Any>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // users: %20, %18, %14, %12, %7
  switch_enum %0 : $Optional<AnyObject>, case #Optional.some!enumelt: bb1, case #Optional.none!enumelt: bb2, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // id: %3

// %4                                             // user: %5
bb1(%4 : $AnyObject):                             // Preds: bb0
  %5 = unchecked_ref_cast %4 : $AnyObject to $Optional<AnyObject>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // user: %10
  // function_ref _bridgeAnyObjectToAny(_:)
  %6 = function_ref @$ss018_bridgeAnyObjectToB0yypyXlSgF : $@convention(thin) (@guaranteed Optional<AnyObject>) -> @out Any, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // user: %10
  %7 = init_enum_data_addr %2 : $*Optional<Any>, #Optional.some!enumelt, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // user: %10
  strong_retain %1 : $ViewController, loc * "<compiler-generated>":0:0, scope 8 // id: %8
  retain_value %0 : $Optional<AnyObject>, loc * "<compiler-generated>":0:0, scope 8 // id: %9
  %10 = apply %6(%7, %5) : $@convention(thin) (@guaranteed Optional<AnyObject>) -> @out Any, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8
  release_value %0 : $Optional<AnyObject>, loc * "<compiler-generated>":0:0, scope 8 // id: %11
  inject_enum_addr %2 : $*Optional<Any>, #Optional.some!enumelt, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // id: %12
  br bb3, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // id: %13

bb2:                                              // Preds: bb0
  inject_enum_addr %2 : $*Optional<Any>, #Optional.none!enumelt, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // id: %14
  strong_retain %1 : $ViewController, loc * "<compiler-generated>":0:0, scope 8 // id: %15
  br bb3, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // id: %16

bb3:                                              // Preds: bb2 bb1
  // function_ref ViewController.representedObject.setter
  %17 = function_ref @$s8TestSwan14ViewControllerC17representedObjectypSgvs : $@convention(method) (@in Optional<Any>, @guaranteed ViewController) -> (), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // user: %18
  %18 = apply %17(%2, %1) : $@convention(method) (@in Optional<Any>, @guaranteed ViewController) -> (), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // user: %21
  strong_release %1 : $ViewController, loc * "<compiler-generated>":0:0, scope 8 // id: %19
  dealloc_stack %2 : $*Optional<Any>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // id: %20
  return %18 : $(), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 8 // id: %21
} // end sil function '$s8TestSwan14ViewControllerC17representedObjectypSgvsTo'


// _bridgeAnyObjectToAny(_:), scope 0
sil @$ss018_bridgeAnyObjectToB0yypyXlSgF : $@convention(thin) (@guaranteed Optional<AnyObject>) -> @out Any

sil_scope 9 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16 parent @$s8TestSwan14ViewControllerC17representedObjectypSgvs : $@convention(method) (@in Optional<Any>, @guaranteed ViewController) -> () }
sil_scope 10 {  parent 9 }
sil_scope 11 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":20:5 parent @$s8TestSwan14ViewControllerC17representedObjectypSgvW : $@convention(method) (@guaranteed ViewController) -> () inlined_at 10 }

// ViewController.representedObject.setter, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 9
sil hidden @$s8TestSwan14ViewControllerC17representedObjectypSgvs : $@convention(method) (@in Optional<Any>, @guaranteed ViewController) -> () {
[%0: read v**, write v**, copy v**, destroy v**]
[%1: read c*.v**, write c*.v**, copy c*.v**, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0 "value"                                     // users: %25, %6, %2
// %1 "self"                                      // users: %27, %23, %4, %3
bb0(%0 : $*Optional<Any>, %1 : $ViewController):
  debug_value %0 : $*Optional<Any>, let, name "value", argno 1, implicit, expr op_deref, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 9 // id: %2
  debug_value %1 : $ViewController, let, name "self", argno 2, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 9 // id: %3
  %4 = upcast %1 : $ViewController to $NSViewController, scope 9 // user: %24
  %5 = alloc_stack $Optional<Any>, scope 9        // users: %22, %8, %7, %6
  copy_addr %0 to [init] %5 : $*Optional<Any>, scope 9 // id: %6
  switch_enum_addr %5 : $*Optional<Any>, case #Optional.some!enumelt: bb1, case #Optional.none!enumelt: bb2, scope 9 // id: %7

bb1:                                              // Preds: bb0
  %8 = unchecked_take_enum_data_addr %5 : $*Optional<Any>, #Optional.some!enumelt, scope 9 // users: %17, %9
  %9 = open_existential_addr immutable_access %8 : $*Any to $*@opened("2DF1CB1E-8BDA-11EE-A51F-86803A041461", Any) Self, scope 9 // users: %13, %11, %10
  %10 = alloc_stack $@opened("2DF1CB1E-8BDA-11EE-A51F-86803A041461", Any) Self, scope 9 // type-defs: %9; users: %14, %16, %13, %11
  copy_addr %9 to [init] %10 : $*@opened("2DF1CB1E-8BDA-11EE-A51F-86803A041461", Any) Self, scope 9 // id: %11
  // function_ref _bridgeAnythingToObjectiveC<A>(_:)
  %12 = function_ref @$ss27_bridgeAnythingToObjectiveCyyXlxlF : $@convention(thin) <τ_0_0> (@in_guaranteed τ_0_0) -> @owned AnyObject, scope 9 // user: %13
  %13 = apply %12<@opened("2DF1CB1E-8BDA-11EE-A51F-86803A041461", Any) Self>(%10) : $@convention(thin) <τ_0_0> (@in_guaranteed τ_0_0) -> @owned AnyObject, scope 9 // type-defs: %9; user: %15
  destroy_addr %10 : $*@opened("2DF1CB1E-8BDA-11EE-A51F-86803A041461", Any) Self, loc * "<compiler-generated>":0:0, scope 9 // id: %14
  %15 = enum $Optional<AnyObject>, #Optional.some!enumelt, %13 : $AnyObject, scope 9 // user: %18
  dealloc_stack %10 : $*@opened("2DF1CB1E-8BDA-11EE-A51F-86803A041461", Any) Self, scope 9 // id: %16
  destroy_addr %8 : $*Any, scope 9                // id: %17
  br bb3(%15 : $Optional<AnyObject>), scope 9     // id: %18

bb2:                                              // Preds: bb0
  %19 = enum $Optional<AnyObject>, #Optional.none!enumelt, scope 9 // user: %20
  br bb3(%19 : $Optional<AnyObject>), scope 9     // id: %20

// %21                                            // users: %26, %24
bb3(%21 : $Optional<AnyObject>):                  // Preds: bb2 bb1
  dealloc_stack %5 : $*Optional<Any>, scope 9     // id: %22
  %23 = objc_super_method %1 : $ViewController, #NSViewController.representedObject!setter.foreign : (NSViewController) -> (Any?) -> (), $@convention(objc_method) (Optional<AnyObject>, NSViewController) -> (), scope 9 // user: %24
  %24 = apply %23(%21, %4) : $@convention(objc_method) (Optional<AnyObject>, NSViewController) -> (), scope 9
  destroy_addr %0 : $*Optional<Any>, loc * "<compiler-generated>":0:0, scope 9 // id: %25
  release_value %21 : $Optional<AnyObject>, loc * "<compiler-generated>":0:0, scope 9 // id: %26
  debug_value %1 : $ViewController, let, name "self", argno 1, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":20:5, scope 11 // id: %27
  %28 = tuple (), loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 9 // user: %29
  return %28 : $(), loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":19:16, scope 9 // id: %29
} // end sil function '$s8TestSwan14ViewControllerC17representedObjectypSgvs'

sil_scope 12 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40 parent @$s8TestSwan14ViewControllerC7nibName6bundleACSSSg_So8NSBundleCSgtcfc : $@convention(method) (@owned Optional<String>, @owned Optional<Bundle>, @owned ViewController) -> @owned ViewController }
sil_scope 13 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:7 parent 12 }
sil_scope 14 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:28 parent 12 }
sil_scope 15 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:40 parent 14 }
sil_scope 16 { loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":12:15 parent @$sSo11NSTextFieldC8TestSwanE5labelAByFZ : $@convention(method) (@thick NSTextField.Type) -> @owned NSTextField inlined_at 15 }
sil_scope 17 { loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":13:17 parent 16 inlined_at 15 }
sil_scope 18 { loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":13:17 parent 17 inlined_at 15 }
sil_scope 19 {  parent @$sSo11NSTextFieldCABycfC : $@convention(method) (@thick NSTextField.Type) -> @owned NSTextField inlined_at 18 }
sil_scope 20 {  parent 19 inlined_at 18 }
sil_scope 21 {  parent @$sSo11NSTextFieldCABycfcTO : $@convention(method) (@owned NSTextField) -> @owned NSTextField inlined_at 20 }
sil_scope 22 { loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":13:9 parent 16 inlined_at 15 }

// ViewController.init(nibName:bundle:), loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 12
sil hidden @$s8TestSwan14ViewControllerC7nibName6bundleACSSSg_So8NSBundleCSgtcfc : $@convention(method) (@owned Optional<String>, @owned Optional<Bundle>, @owned ViewController) -> @owned ViewController {
[%0: read v**.c*.v**, write v**.c*.v**, copy **, destroy v**.c*.v**]
[%1: read v**.c*.v**, write v**.c*.v**, copy v**.c*.v**, destroy v**.c*.v**]
[%2: read c*.v**, write c*.v**, copy **, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0 "nibNameOrNil"                              // users: %46, %37, %35, %32, %3
// %1 "nibBundleOrNil"                            // users: %45, %44, %4
// %2 "self"                                      // users: %30, %9, %43, %6, %31, %5
bb0(%0 : $Optional<String>, %1 : $Optional<Bundle>, %2 : $ViewController):
  debug_value %0 : $Optional<String>, let, name "nibNameOrNil", argno 1, implicit, scope 12 // id: %3
  debug_value %1 : $Optional<Bundle>, let, name "nibBundleOrNil", argno 2, implicit, scope 12 // id: %4
  debug_value %2 : $ViewController, let, name "self", implicit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 12 // id: %5
  %6 = ref_element_addr %2 : $ViewController, #ViewController.label, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:7, scope 13 // user: %29
  %7 = alloc_ref [objc] $NSTextField, scope 19    // users: %10, %8
  %8 = objc_method %7 : $NSTextField, #NSTextField.init!initializer.foreign : (NSTextField.Type) -> () -> NSTextField, $@convention(objc_method) (@owned NSTextField) -> @owned NSTextField, scope 21 // user: %10
  strong_retain %2 : $ViewController, loc * "<compiler-generated>":0:0, scope 12 // id: %9
  %10 = apply %8(%7) : $@convention(objc_method) (@owned NSTextField) -> @owned NSTextField, scope 21 // users: %29, %27, %26, %21, %20, %19, %18, %17, %16, %15, %14, %11
  debug_value %10 : $NSTextField, let, name "label", loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":13:9, scope 22 // id: %11
  %12 = integer_literal $Builtin.Int1, 0, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:23, scope 22 // user: %13
  %13 = struct $Bool (%12 : $Builtin.Int1), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:23, scope 22 // users: %21, %19, %17, %15
  %14 = objc_method %10 : $NSTextField, #NSTextField.isBezeled!setter.foreign : (NSTextField) -> (Bool) -> (), $@convention(objc_method) (Bool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:21, scope 22 // user: %15
  %15 = apply %14(%13, %10) : $@convention(objc_method) (Bool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:21, scope 22
  %16 = objc_method %10 : $NSTextField, #NSTextField.isBordered!setter.foreign : (NSTextField) -> (Bool) -> (), $@convention(objc_method) (Bool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":15:22, scope 22 // user: %17
  %17 = apply %16(%13, %10) : $@convention(objc_method) (Bool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":15:22, scope 22
  %18 = objc_method %10 : $NSTextField, #NSTextField.isEditable!setter.foreign : (NSTextField) -> (Bool) -> (), $@convention(objc_method) (Bool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":16:22, scope 22 // user: %19
  %19 = apply %18(%13, %10) : $@convention(objc_method) (Bool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":16:22, scope 22
  %20 = objc_method %10 : $NSTextField, #NSTextField.isSelectable!setter.foreign : (NSTextField) -> (Bool) -> (), $@convention(objc_method) (Bool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":17:24, scope 22 // user: %21
  %21 = apply %20(%13, %10) : $@convention(objc_method) (Bool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":17:24, scope 22
  %22 = metatype $@objc_metatype NSColor.Type, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:29, scope 22 // users: %24, %23
  %23 = objc_method %22 : $@objc_metatype NSColor.Type, #NSColor.clear!getter.foreign : (NSColor.Type) -> () -> NSColor, $@convention(objc_method) (@objc_metatype NSColor.Type) -> @autoreleased NSColor, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:30, scope 22 // user: %24
  %24 = apply %23(%22) : $@convention(objc_method) (@objc_metatype NSColor.Type) -> @autoreleased NSColor, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:30, scope 22 // users: %28, %25
  %25 = unchecked_ref_cast %24 : $NSColor to $Optional<NSColor>, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:30, scope 22 // user: %27
  %26 = objc_method %10 : $NSTextField, #NSTextField.backgroundColor!setter.foreign : (NSTextField) -> (NSColor?) -> (), $@convention(objc_method) (Optional<NSColor>, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:27, scope 22 // user: %27
  %27 = apply %26(%25, %10) : $@convention(objc_method) (Optional<NSColor>, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:27, scope 22
  strong_release %24 : $NSColor, loc * "<compiler-generated>":0:0, scope 12 // id: %28
  store %10 to %6 : $*NSTextField, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:40, scope 14 // id: %29
  strong_release %2 : $ViewController, loc * "<compiler-generated>":0:0, scope 12 // id: %30
  %31 = upcast %2 : $ViewController to $NSViewController, scope 14 // user: %44
  switch_enum %0 : $Optional<String>, case #Optional.some!enumelt: bb1, case #Optional.none!enumelt: bb2, scope 14 // id: %32

// %33                                            // user: %36
bb1(%33 : $String):                               // Preds: bb0
  // function_ref String._bridgeToObjectiveC()
  %34 = function_ref @$sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF : $@convention(method) (@guaranteed String) -> @owned NSString, scope 14 // user: %36
  retain_value %0 : $Optional<String>, loc * "<compiler-generated>":0:0, scope 12 // id: %35
  %36 = apply %34(%33) : $@convention(method) (@guaranteed String) -> @owned NSString, scope 14 // user: %38
  release_value %0 : $Optional<String>, loc * "<compiler-generated>":0:0, scope 12 // id: %37
  %38 = enum $Optional<NSString>, #Optional.some!enumelt, %36 : $NSString, scope 14 // user: %39
  br bb3(%38 : $Optional<NSString>), scope 14     // id: %39

bb2:                                              // Preds: bb0
  %40 = enum $Optional<NSString>, #Optional.none!enumelt, scope 14 // user: %41
  br bb3(%40 : $Optional<NSString>), scope 14     // id: %41

// %42                                            // users: %47, %44
bb3(%42 : $Optional<NSString>):                   // Preds: bb2 bb1
  %43 = objc_super_method %2 : $ViewController, #NSViewController.init!initializer.foreign : (NSViewController.Type) -> (String?, Bundle?) -> NSViewController, $@convention(objc_method) (Optional<NSString>, Optional<Bundle>, @owned NSViewController) -> @owned NSViewController, scope 14 // user: %44
  %44 = apply %43(%42, %1, %31) : $@convention(objc_method) (Optional<NSString>, Optional<Bundle>, @owned NSViewController) -> @owned NSViewController, scope 14 // user: %48
  release_value %1 : $Optional<Bundle>, loc * "<compiler-generated>":0:0, scope 12 // id: %45
  release_value %0 : $Optional<String>, loc * "<compiler-generated>":0:0, scope 12 // id: %46
  release_value %42 : $Optional<NSString>, loc * "<compiler-generated>":0:0, scope 12 // id: %47
  %48 = unchecked_ref_cast %44 : $NSViewController to $ViewController, scope 14 // user: %49
  return %48 : $ViewController, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 14 // id: %49
} // end sil function '$s8TestSwan14ViewControllerC7nibName6bundleACSSSg_So8NSBundleCSgtcfc'

sil_scope 23 { loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40 parent @$s8TestSwan14ViewControllerC7nibName6bundleACSSSg_So8NSBundleCSgtcfcTo : $@convention(objc_method) (Optional<NSString>, Optional<Bundle>, @owned ViewController) -> @owned ViewController }

// @objc ViewController.init(nibName:bundle:), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23
sil private [thunk] @$s8TestSwan14ViewControllerC7nibName6bundleACSSSg_So8NSBundleCSgtcfcTo : $@convention(objc_method) (Optional<NSString>, Optional<Bundle>, @owned ViewController) -> @owned ViewController {
[%0: read v**.c*.v**, copy v**.c*.v**]
[%1: read v**.c*.v**, write v**.c*.v**, copy v**.**, destroy v**.c*.v**]
[%2: read c*.v**, write c*.v**, copy **, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %7, %3
// %1                                             // users: %14, %15
// %2                                             // user: %15
bb0(%0 : $Optional<NSString>, %1 : $Optional<Bundle>, %2 : $ViewController):
  switch_enum %0 : $Optional<NSString>, case #Optional.some!enumelt: bb1, case #Optional.none!enumelt: bb2, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // id: %3

bb1(%4 : $NSString):                              // Preds: bb0
  // function_ref static String._unconditionallyBridgeFromObjectiveC(_:)
  %5 = function_ref @$sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ : $@convention(method) (@guaranteed Optional<NSString>, @thin String.Type) -> @owned String, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // user: %7
  %6 = metatype $@thin String.Type, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // user: %7
  %7 = apply %5(%0, %6) : $@convention(method) (@guaranteed Optional<NSString>, @thin String.Type) -> @owned String, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // user: %8
  %8 = enum $Optional<String>, #Optional.some!enumelt, %7 : $String, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // user: %9
  br bb3(%8 : $Optional<String>), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // id: %9

bb2:                                              // Preds: bb0
  %10 = enum $Optional<String>, #Optional.none!enumelt, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // user: %11
  br bb3(%10 : $Optional<String>), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // id: %11

// %12                                            // user: %15
bb3(%12 : $Optional<String>):                     // Preds: bb2 bb1
  // function_ref ViewController.init(nibName:bundle:)
  %13 = function_ref @$s8TestSwan14ViewControllerC7nibName6bundleACSSSg_So8NSBundleCSgtcfc : $@convention(method) (@owned Optional<String>, @owned Optional<Bundle>, @owned ViewController) -> @owned ViewController, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // user: %15
  retain_value %1 : $Optional<Bundle>, loc * "<compiler-generated>":0:0, scope 23 // id: %14
  %15 = apply %13(%12, %1, %2) : $@convention(method) (@owned Optional<String>, @owned Optional<Bundle>, @owned ViewController) -> @owned ViewController, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // user: %16
  return %15 : $ViewController, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 23 // id: %16
} // end sil function '$s8TestSwan14ViewControllerC7nibName6bundleACSSSg_So8NSBundleCSgtcfcTo'


// static String._unconditionallyBridgeFromObjectiveC(_:), scope 0
sil [available 10.10] [readonly] @$sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ : $@convention(method) (@guaranteed Optional<NSString>, @thin String.Type) -> @owned String

sil_scope 24 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40 parent @$s8TestSwan14ViewControllerC5coderACSgSo7NSCoderC_tcfc : $@convention(method) (@owned NSCoder, @owned ViewController) -> @owned Optional<ViewController> }
sil_scope 25 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:7 parent 24 }
sil_scope 26 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:28 parent 24 }
sil_scope 27 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:40 parent 26 }
sil_scope 28 { loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":12:15 parent @$sSo11NSTextFieldC8TestSwanE5labelAByFZ : $@convention(method) (@thick NSTextField.Type) -> @owned NSTextField inlined_at 27 }
sil_scope 29 { loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":13:17 parent 28 inlined_at 27 }
sil_scope 30 { loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":13:17 parent 29 inlined_at 27 }
sil_scope 31 {  parent @$sSo11NSTextFieldCABycfC : $@convention(method) (@thick NSTextField.Type) -> @owned NSTextField inlined_at 30 }
sil_scope 32 {  parent 31 inlined_at 30 }
sil_scope 33 {  parent @$sSo11NSTextFieldCABycfcTO : $@convention(method) (@owned NSTextField) -> @owned NSTextField inlined_at 32 }
sil_scope 34 { loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":13:9 parent 28 inlined_at 27 }

// ViewController.init(coder:), loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 24
sil hidden @$s8TestSwan14ViewControllerC5coderACSgSo7NSCoderC_tcfc : $@convention(method) (@owned NSCoder, @owned ViewController) -> @owned Optional<ViewController> {
[%0: read c*.v**, write c*.v**, copy c*.v**, destroy c*.v**]
[%1: read c*.v**, write c*.v**, copy **, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0 "coder"                                     // users: %32, %31, %2
// %1 "self"                                      // users: %28, %7, %30, %4, %29, %3
bb0(%0 : $NSCoder, %1 : $ViewController):
  debug_value %0 : $NSCoder, let, name "coder", argno 1, implicit, scope 24 // id: %2
  debug_value %1 : $ViewController, let, name "self", implicit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 24 // id: %3
  %4 = ref_element_addr %1 : $ViewController, #ViewController.label, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:7, scope 25 // user: %27
  %5 = alloc_ref [objc] $NSTextField, scope 31    // users: %8, %6
  %6 = objc_method %5 : $NSTextField, #NSTextField.init!initializer.foreign : (NSTextField.Type) -> () -> NSTextField, $@convention(objc_method) (@owned NSTextField) -> @owned NSTextField, scope 33 // user: %8
  strong_retain %1 : $ViewController, loc * "<compiler-generated>":0:0, scope 24 // id: %7
  %8 = apply %6(%5) : $@convention(objc_method) (@owned NSTextField) -> @owned NSTextField, scope 33 // users: %27, %25, %24, %19, %18, %17, %16, %15, %14, %13, %12, %9
  debug_value %8 : $NSTextField, let, name "label", loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":13:9, scope 34 // id: %9
  %10 = integer_literal $Builtin.Int1, 0, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:23, scope 34 // user: %11
  %11 = struct $Bool (%10 : $Builtin.Int1), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:23, scope 34 // users: %19, %17, %15, %13
  %12 = objc_method %8 : $NSTextField, #NSTextField.isBezeled!setter.foreign : (NSTextField) -> (Bool) -> (), $@convention(objc_method) (Bool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:21, scope 34 // user: %13
  %13 = apply %12(%11, %8) : $@convention(objc_method) (Bool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":14:21, scope 34
  %14 = objc_method %8 : $NSTextField, #NSTextField.isBordered!setter.foreign : (NSTextField) -> (Bool) -> (), $@convention(objc_method) (Bool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":15:22, scope 34 // user: %15
  %15 = apply %14(%11, %8) : $@convention(objc_method) (Bool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":15:22, scope 34
  %16 = objc_method %8 : $NSTextField, #NSTextField.isEditable!setter.foreign : (NSTextField) -> (Bool) -> (), $@convention(objc_method) (Bool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":16:22, scope 34 // user: %17
  %17 = apply %16(%11, %8) : $@convention(objc_method) (Bool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":16:22, scope 34
  %18 = objc_method %8 : $NSTextField, #NSTextField.isSelectable!setter.foreign : (NSTextField) -> (Bool) -> (), $@convention(objc_method) (Bool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":17:24, scope 34 // user: %19
  %19 = apply %18(%11, %8) : $@convention(objc_method) (Bool, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":17:24, scope 34
  %20 = metatype $@objc_metatype NSColor.Type, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:29, scope 34 // users: %22, %21
  %21 = objc_method %20 : $@objc_metatype NSColor.Type, #NSColor.clear!getter.foreign : (NSColor.Type) -> () -> NSColor, $@convention(objc_method) (@objc_metatype NSColor.Type) -> @autoreleased NSColor, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:30, scope 34 // user: %22
  %22 = apply %21(%20) : $@convention(objc_method) (@objc_metatype NSColor.Type) -> @autoreleased NSColor, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:30, scope 34 // users: %26, %23
  %23 = unchecked_ref_cast %22 : $NSColor to $Optional<NSColor>, loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:30, scope 34 // user: %25
  %24 = objc_method %8 : $NSTextField, #NSTextField.backgroundColor!setter.foreign : (NSTextField) -> (NSColor?) -> (), $@convention(objc_method) (Optional<NSColor>, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:27, scope 34 // user: %25
  %25 = apply %24(%23, %8) : $@convention(objc_method) (Optional<NSColor>, NSTextField) -> (), loc "/Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift":18:27, scope 34
  strong_release %22 : $NSColor, loc * "<compiler-generated>":0:0, scope 24 // id: %26
  store %8 to %4 : $*NSTextField, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":11:40, scope 26 // id: %27
  strong_release %1 : $ViewController, loc * "<compiler-generated>":0:0, scope 24 // id: %28
  %29 = upcast %1 : $ViewController to $NSViewController, scope 26 // user: %31
  %30 = objc_super_method %1 : $ViewController, #NSViewController.init!initializer.foreign : (NSViewController.Type) -> (NSCoder) -> NSViewController?, $@convention(objc_method) (NSCoder, @owned NSViewController) -> @owned Optional<NSViewController>, scope 26 // user: %31
  %31 = apply %30(%0, %29) : $@convention(objc_method) (NSCoder, @owned NSViewController) -> @owned Optional<NSViewController>, scope 26 // users: %33, %36
  strong_release %0 : $NSCoder, loc * "<compiler-generated>":0:0, scope 24 // id: %32
  switch_enum %31 : $Optional<NSViewController>, case #Optional.some!enumelt: bb2, case #Optional.none!enumelt: bb1, forwarding: @owned, scope 26 // id: %33

bb1:                                              // Preds: bb0
  %34 = enum $Optional<ViewController>, #Optional.none!enumelt, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 24 // user: %35
  br bb3(%34 : $Optional<ViewController>), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 24 // id: %35

bb2:                                              // Preds: bb0
  %36 = unchecked_enum_data %31 : $Optional<NSViewController>, #Optional.some!enumelt, scope 26 // user: %37
  %37 = unchecked_ref_cast %36 : $NSViewController to $ViewController, scope 26 // user: %38
  %38 = enum $Optional<ViewController>, #Optional.some!enumelt, %37 : $ViewController, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 26 // user: %39
  br bb3(%38 : $Optional<ViewController>), loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 26 // id: %39

// %40                                            // user: %41
bb3(%40 : $Optional<ViewController>):             // Preds: bb2 bb1
  return %40 : $Optional<ViewController>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 24 // id: %41
} // end sil function '$s8TestSwan14ViewControllerC5coderACSgSo7NSCoderC_tcfc'

sil_scope 35 { loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40 parent @$s8TestSwan14ViewControllerC5coderACSgSo7NSCoderC_tcfcTo : $@convention(objc_method) (NSCoder, @owned ViewController) -> @owned Optional<ViewController> }

// @objc ViewController.init(coder:), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 35
sil private [thunk] @$s8TestSwan14ViewControllerC5coderACSgSo7NSCoderC_tcfcTo : $@convention(objc_method) (NSCoder, @owned ViewController) -> @owned Optional<ViewController> {
[%0: read c*.v**, write c*.v**, copy **, destroy c*.v**]
[%1: read c*.v**, write c*.v**, copy **, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %3, %4
// %1                                             // user: %4
bb0(%0 : $NSCoder, %1 : $ViewController):
  // function_ref ViewController.init(coder:)
  %2 = function_ref @$s8TestSwan14ViewControllerC5coderACSgSo7NSCoderC_tcfc : $@convention(method) (@owned NSCoder, @owned ViewController) -> @owned Optional<ViewController>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 35 // user: %4
  strong_retain %0 : $NSCoder, loc * "<compiler-generated>":0:0, scope 35 // id: %3
  %4 = apply %2(%0, %1) : $@convention(method) (@owned NSCoder, @owned ViewController) -> @owned Optional<ViewController>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 35 // user: %5
  return %4 : $Optional<ViewController>, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:40, scope 35 // id: %5
} // end sil function '$s8TestSwan14ViewControllerC5coderACSgSo7NSCoderC_tcfcTo'

sil_scope 36 { loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7 parent @$s8TestSwan14ViewControllerCfD : $@convention(method) (@owned ViewController) -> () }

// ViewController.__deallocating_deinit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 36
sil hidden @$s8TestSwan14ViewControllerCfD : $@convention(method) (@owned ViewController) -> () {
[%0: read c*.v**, write c*.v**, copy c*.v**, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0 "self"                                      // users: %3, %2, %1
bb0(%0 : $ViewController):
  debug_value %0 : $ViewController, let, name "self", argno 1, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 36 // id: %1
  %2 = objc_super_method %0 : $ViewController, #NSViewController.deinit!deallocator.foreign : (NSViewController) -> () -> (), $@convention(objc_method) (NSViewController) -> (), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 36 // user: %4
  %3 = upcast %0 : $ViewController to $NSViewController, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 36 // user: %4
  %4 = apply %2(%3) : $@convention(objc_method) (NSViewController) -> (), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 36
  %5 = tuple (), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 36 // user: %6
  return %5 : $(), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 36 // id: %6
} // end sil function '$s8TestSwan14ViewControllerCfD'

sil_scope 37 { loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7 parent @$s8TestSwan14ViewControllerCfETo : $@convention(objc_method) (ViewController) -> () }

// @objc ViewController.__ivar_destroyer, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 37
sil hidden @$s8TestSwan14ViewControllerCfETo : $@convention(objc_method) (ViewController) -> () {
[%0: noescape, noescape c*.v**, read c0.v**, copy c*.v**, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0 "self"                                      // users: %2, %1
bb0(%0 : $ViewController):
  debug_value %0 : $ViewController, let, name "self", argno 1, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 37 // id: %1
  %2 = ref_element_addr %0 : $ViewController, #ViewController.label, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":26:1, scope 37 // user: %3
  %3 = load %2 : $*NSTextField, loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":26:1, scope 37 // user: %4
  strong_release %3 : $NSTextField, loc * "<compiler-generated>":0:0, scope 37 // id: %4
  %5 = tuple (), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 37 // user: %6
  return %5 : $(), loc * "/Users/v/Developer/TestSwan/TestSwan/ViewController.swift":10:7, scope 37 // id: %6
} // end sil function '$s8TestSwan14ViewControllerCfETo'

sil_scope 38 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8 parent @$s8TestSwan11AppDelegateC29applicationDidFinishLaunchingyy10Foundation12NotificationVFTo : $@convention(objc_method) (NSNotification, AppDelegate) -> () }
sil_scope 39 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8 parent 38 }
sil_scope 40 { loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8 parent @$s8TestSwan11AppDelegateC29applicationDidFinishLaunchingyy10Foundation12NotificationVF : $@convention(method) (@in_guaranteed Notification, @guaranteed AppDelegate) -> () inlined_at 39 }

// @objc AppDelegate.applicationDidFinishLaunching(_:), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8, scope 38
sil private [thunk] @$s8TestSwan11AppDelegateC29applicationDidFinishLaunchingyy10Foundation12NotificationVFTo : $@convention(objc_method) (NSNotification, AppDelegate) -> () {
[%0: read v**.c*.v**, copy v**.c*.v**]
[%1: noescape **]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // user: %3
// %1                                             // user: %8
bb0(%0 : $NSNotification, %1 : $AppDelegate):
  // function_ref static Notification._unconditionallyBridgeFromObjectiveC(_:)
  %2 = function_ref @$s10Foundation12NotificationV36_unconditionallyBridgeFromObjectiveCyACSo14NSNotificationCSgFZ : $@convention(method) (@guaranteed Optional<NSNotification>, @thin Notification.Type) -> @out Notification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8, scope 38 // user: %6
  %3 = enum $Optional<NSNotification>, #Optional.some!enumelt, %0 : $NSNotification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8, scope 38 // user: %6
  %4 = metatype $@thin Notification.Type, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8, scope 38 // user: %6
  %5 = alloc_stack $Notification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8, scope 38 // users: %7, %10, %11, %6
  %6 = apply %2(%5, %3, %4) : $@convention(method) (@guaranteed Optional<NSNotification>, @thin Notification.Type) -> @out Notification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8, scope 38
  debug_value %5 : $*Notification, let, name "aNotification", argno 1, expr op_deref, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:40, scope 40 // id: %7
  debug_value %1 : $AppDelegate, let, name "self", argno 2, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8, scope 40 // id: %8
  %9 = tuple (), loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":18:3, scope 40 // user: %12
  destroy_addr %5 : $*Notification, loc * "<compiler-generated>":0:0, scope 38 // id: %10
  dealloc_stack %5 : $*Notification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":18:3, scope 38 // id: %11
  return %9 : $(), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":16:8, scope 38 // id: %12
} // end sil function '$s8TestSwan11AppDelegateC29applicationDidFinishLaunchingyy10Foundation12NotificationVFTo'


// static Notification._unconditionallyBridgeFromObjectiveC(_:), scope 0
sil [available 10.10] [readonly] @$s10Foundation12NotificationV36_unconditionallyBridgeFromObjectiveCyACSo14NSNotificationCSgFZ : $@convention(method) (@guaranteed Optional<NSNotification>, @thin Notification.Type) -> @out Notification

sil_scope 41 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8 parent @$s8TestSwan11AppDelegateC24applicationWillTerminateyy10Foundation12NotificationVFTo : $@convention(objc_method) (NSNotification, AppDelegate) -> () }
sil_scope 42 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8 parent 41 }
sil_scope 43 { loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8 parent @$s8TestSwan11AppDelegateC24applicationWillTerminateyy10Foundation12NotificationVF : $@convention(method) (@in_guaranteed Notification, @guaranteed AppDelegate) -> () inlined_at 42 }

// @objc AppDelegate.applicationWillTerminate(_:), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8, scope 41
sil private [thunk] @$s8TestSwan11AppDelegateC24applicationWillTerminateyy10Foundation12NotificationVFTo : $@convention(objc_method) (NSNotification, AppDelegate) -> () {
[%0: read v**.c*.v**, copy v**.c*.v**]
[%1: noescape **]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // user: %3
// %1                                             // user: %8
bb0(%0 : $NSNotification, %1 : $AppDelegate):
  // function_ref static Notification._unconditionallyBridgeFromObjectiveC(_:)
  %2 = function_ref @$s10Foundation12NotificationV36_unconditionallyBridgeFromObjectiveCyACSo14NSNotificationCSgFZ : $@convention(method) (@guaranteed Optional<NSNotification>, @thin Notification.Type) -> @out Notification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8, scope 41 // user: %6
  %3 = enum $Optional<NSNotification>, #Optional.some!enumelt, %0 : $NSNotification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8, scope 41 // user: %6
  %4 = metatype $@thin Notification.Type, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8, scope 41 // user: %6
  %5 = alloc_stack $Notification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8, scope 41 // users: %7, %10, %11, %6
  %6 = apply %2(%5, %3, %4) : $@convention(method) (@guaranteed Optional<NSNotification>, @thin Notification.Type) -> @out Notification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8, scope 41
  debug_value %5 : $*Notification, let, name "aNotification", argno 1, expr op_deref, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:35, scope 43 // id: %7
  debug_value %1 : $AppDelegate, let, name "self", argno 2, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8, scope 43 // id: %8
  %9 = tuple (), loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":22:3, scope 43 // user: %12
  destroy_addr %5 : $*Notification, loc * "<compiler-generated>":0:0, scope 41 // id: %10
  dealloc_stack %5 : $*Notification, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":22:3, scope 41 // id: %11
  return %9 : $(), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":20:8, scope 41 // id: %12
} // end sil function '$s8TestSwan11AppDelegateC24applicationWillTerminateyy10Foundation12NotificationVFTo'

sil_scope 44 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":24:8 parent @$s8TestSwan11AppDelegateC40applicationSupportsSecureRestorableStateySbSo13NSApplicationCFTo : $@convention(objc_method) (NSApplication, AppDelegate) -> ObjCBool }
sil_scope 45 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":24:8 parent 44 }
sil_scope 46 { loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":24:8 parent @$s8TestSwan11AppDelegateC40applicationSupportsSecureRestorableStateySbSo13NSApplicationCF : $@convention(method) (@guaranteed NSApplication, @guaranteed AppDelegate) -> Bool inlined_at 45 }
sil_scope 47 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":24:8 parent 44 }
sil_scope 48 {  parent @$s10ObjectiveC22_convertBoolToObjCBoolyAA0eF0VSbF : $@convention(thin) (Bool) -> ObjCBool inlined_at 47 }

// @objc AppDelegate.applicationSupportsSecureRestorableState(_:), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":24:8, scope 44
sil private [thunk] @$s8TestSwan11AppDelegateC40applicationSupportsSecureRestorableStateySbSo13NSApplicationCFTo : $@convention(objc_method) (NSApplication, AppDelegate) -> ObjCBool {
[%0: noescape **]
[%1: noescape **]
[global: ]
// %0                                             // user: %2
// %1                                             // user: %3
bb0(%0 : $NSApplication, %1 : $AppDelegate):
  debug_value %0 : $NSApplication, let, name "app", argno 1, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":24:51, scope 46 // id: %2
  debug_value %1 : $AppDelegate, let, name "self", argno 2, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":24:8, scope 46 // id: %3
  %4 = integer_literal $Builtin.Int1, -1, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":25:12, scope 46 // user: %5
  %5 = struct $Bool (%4 : $Builtin.Int1), loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":25:12, scope 46 // user: %6
  %6 = struct $ObjCBool (%5 : $Bool), scope 48    // user: %7
  return %6 : $ObjCBool, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":24:8, scope 44 // id: %7
} // end sil function '$s8TestSwan11AppDelegateC40applicationSupportsSecureRestorableStateySbSo13NSApplicationCFTo'

sil_scope 49 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:52 parent @$s8TestSwan11AppDelegateCACycfcTo : $@convention(objc_method) (@owned AppDelegate) -> @owned AppDelegate }
sil_scope 50 { loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:52 parent 49 }
sil_scope 51 { loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:52 parent @$s8TestSwan11AppDelegateCACycfc : $@convention(method) (@owned AppDelegate) -> @owned AppDelegate inlined_at 50 }

// @objc AppDelegate.init(), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:52, scope 49
sil private [thunk] @$s8TestSwan11AppDelegateCACycfcTo : $@convention(objc_method) (@owned AppDelegate) -> @owned AppDelegate {
[%0: read c*.v**, write c*.v**, copy c*.v**, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %3, %2, %1
bb0(%0 : $AppDelegate):
  debug_value %0 : $AppDelegate, let, name "self", implicit, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:52, scope 51 // id: %1
  %2 = upcast %0 : $AppDelegate to $NSObject, scope 51 // user: %4
  %3 = objc_super_method %0 : $AppDelegate, #NSObject.init!initializer.foreign : (NSObject.Type) -> () -> NSObject, $@convention(objc_method) (@owned NSObject) -> @owned NSObject, scope 51 // user: %4
  %4 = apply %3(%2) : $@convention(objc_method) (@owned NSObject) -> @owned NSObject, scope 51 // user: %5
  %5 = unchecked_ref_cast %4 : $NSObject to $AppDelegate, scope 51 // user: %6
  return %5 : $AppDelegate, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:52, scope 49 // id: %6
} // end sil function '$s8TestSwan11AppDelegateCACycfcTo'

sil_scope 52 { loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:7 parent @$s8TestSwan11AppDelegateCfD : $@convention(method) (@owned AppDelegate) -> () }

// AppDelegate.__deallocating_deinit, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:7, scope 52
sil hidden @$s8TestSwan11AppDelegateCfD : $@convention(method) (@owned AppDelegate) -> () {
[%0: read c*.v**, write c*.v**, copy c*.v**, destroy c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0 "self"                                      // users: %3, %2, %1
bb0(%0 : $AppDelegate):
  debug_value %0 : $AppDelegate, let, name "self", argno 1, implicit, loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:7, scope 52 // id: %1
  %2 = objc_super_method %0 : $AppDelegate, #NSObject.deinit!deallocator.foreign : (NSObject) -> () -> (), $@convention(objc_method) (NSObject) -> (), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:7, scope 52 // user: %4
  %3 = upcast %0 : $AppDelegate to $NSObject, loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:7, scope 52 // user: %4
  %4 = apply %2(%3) : $@convention(objc_method) (NSObject) -> (), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:7, scope 52
  %5 = tuple (), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:7, scope 52 // user: %6
  return %5 : $(), loc * "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":11:7, scope 52 // id: %6
} // end sil function '$s8TestSwan11AppDelegateCfD'

sil_scope 53 {  parent @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 }
sil_scope 54 { loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":10:1 parent 53 }
sil_scope 55 {  parent 54 }
sil_scope 56 {  parent @$s8TestSwan11AppDelegateC5$mainyyFZ : $@convention(method) (@thick AppDelegate.Type) -> () inlined_at 55 }
sil_scope 57 { loc "/Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift":10:1 parent 56 inlined_at 55 }
sil_scope 58 {  parent @$sSo21NSApplicationDelegateP6AppKitE4mainyyFZ8TestSwan0cB0C_Tg5 : $@convention(method) (@thick AppDelegate.Type) -> () inlined_at 57 }

// main, scope 53
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
[%1: noescape **]
[global: read,write,copy,destroy,allocate,deinit_barrier]
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = metatype $@thin CommandLine.Type, scope 58 // users: %6, %4
  // function_ref static CommandLine.argc.getter
  %3 = function_ref @$ss11CommandLineO4argcs5Int32VvgZ : $@convention(method) (@thin CommandLine.Type) -> Int32, scope 58 // user: %4
  %4 = apply %3(%2) : $@convention(method) (@thin CommandLine.Type) -> Int32, scope 58 // user: %8
  // function_ref static CommandLine.unsafeArgv.getter
  %5 = function_ref @$ss11CommandLineO10unsafeArgvSpySpys4Int8VGSgGvgZ : $@convention(method) (@thin CommandLine.Type) -> UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>, scope 58 // user: %6
  %6 = apply %5(%2) : $@convention(method) (@thin CommandLine.Type) -> UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>, scope 58 // user: %8
  // function_ref NSApplicationMain(_:_:)
  %7 = function_ref @$s6AppKit17NSApplicationMainys5Int32VAD_SpySpys4Int8VGSgGtF : $@convention(thin) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32, scope 58 // user: %8
  %8 = apply %7(%4, %6) : $@convention(thin) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32, scope 58 // user: %10
  // function_ref exit
  %9 = function_ref @exit : $@convention(c) (Int32) -> Never, scope 58 // user: %10
  %10 = apply %9(%8) : $@convention(c) (Int32) -> Never, scope 58
  unreachable , scope 58                          // id: %11
} // end sil function 'main'

sil_scope 59 { loc * "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15 parent @$s8TestSwan19ResourceBundleClass33_7E57A1E4A3086DE18043CF46058E5058LLCfD : $@convention(method) (@owned ResourceBundleClass) -> () }
sil_scope 60 { loc * "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15 parent 59 }
sil_scope 61 { loc "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15 parent @$s8TestSwan19ResourceBundleClass33_7E57A1E4A3086DE18043CF46058E5058LLCfd : $@convention(method) (@guaranteed ResourceBundleClass) -> @owned Builtin.NativeObject inlined_at 60 }

// ResourceBundleClass.__deallocating_deinit, loc * "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15, scope 59
sil private @$s8TestSwan19ResourceBundleClass33_7E57A1E4A3086DE18043CF46058E5058LLCfD : $@convention(method) (@owned ResourceBundleClass) -> () {
[%0: noescape **, read c*.v**, write c*.v**, copy c*.v**]
[global: read,write,copy]
// %0 "self"                                      // users: %3, %2, %1
bb0(%0 : $ResourceBundleClass):
  debug_value %0 : $ResourceBundleClass, let, name "self", argno 1, implicit, loc "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15, scope 59 // id: %1
  debug_value %0 : $ResourceBundleClass, let, name "self", argno 1, implicit, loc "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15, scope 61 // id: %2
  dealloc_ref %0 : $ResourceBundleClass, loc * "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15, scope 59 // id: %3
  %4 = tuple (), loc * "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15, scope 59 // user: %5
  return %4 : $(), loc * "/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift":18:15, scope 59 // id: %5
} // end sil function '$s8TestSwan19ResourceBundleClass33_7E57A1E4A3086DE18043CF46058E5058LLCfD'


// String._bridgeToObjectiveC(), scope 0
sil [available 10.10] [_semantics "convertToObjectiveC"] @$sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF : $@convention(method) (@guaranteed String) -> @owned NSString


// static CommandLine.argc.getter, loc * "<compiler-generated>":0:0, scope 0
sil @$ss11CommandLineO4argcs5Int32VvgZ : $@convention(method) (@thin CommandLine.Type) -> Int32


// static CommandLine.unsafeArgv.getter, loc * "<compiler-generated>":0:0, scope 0
sil @$ss11CommandLineO10unsafeArgvSpySpys4Int8VGSgGvgZ : $@convention(method) (@thin CommandLine.Type) -> UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>


// NSApplicationMain(_:_:), loc * "<compiler-generated>":0:0, scope 0
sil [available 10.9] @$s6AppKit17NSApplicationMainys5Int32VAD_SpySpys4Int8VGSgGtF : $@convention(thin) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32


// exit, loc * "<compiler-generated>":0:0, scope 0
// clang name: exit
sil [serialized] [clang exit] @exit : $@convention(c) (Int32) -> Never


// _swift_isClassOrObjCExistentialType, loc * "<compiler-generated>":0:0, scope 0
sil @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool


// _bridgeAnythingNonVerbatimToObjectiveC<A>(_:), loc * "<compiler-generated>":0:0, scope 0
sil @$ss38_bridgeAnythingNonVerbatimToObjectiveCyyXlxnlF : $@convention(thin) <τ_0_0> (@in τ_0_0) -> @owned AnyObject

sil_scope 62 {  parent @$sSa12_endMutationyyF : $@convention(method) <τ_0_0> (@inout Array<τ_0_0>) -> () }

// Array._endMutation(), scope 62
sil shared [serialized] [_semantics "array.end_mutation"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$sSa12_endMutationyyF : $@convention(method) <Element> (@inout Array<Element>) -> () {
[%0: noescape! **, read s0.s0.s0.v**, write v**]
[global: ]
// %0                                             // users: %9, %1
bb0(%0 : $*Array<Element>):
  %1 = struct_element_addr %0 : $*Array<Element>, #Array._buffer, scope 62 // user: %2
  %2 = struct_element_addr %1 : $*_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 62 // user: %3
  %3 = struct_element_addr %2 : $*_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 62 // user: %4
  %4 = load %3 : $*Builtin.BridgeObject, scope 62 // user: %5
  %5 = end_cow_mutation %4 : $Builtin.BridgeObject, scope 62 // user: %6
  %6 = struct $_BridgeStorage<__ContiguousArrayStorageBase> (%5 : $Builtin.BridgeObject), scope 62 // user: %7
  %7 = struct $_ArrayBuffer<Element> (%6 : $_BridgeStorage<__ContiguousArrayStorageBase>), scope 62 // user: %8
  %8 = struct $Array<Element> (%7 : $_ArrayBuffer<Element>), scope 62 // user: %9
  store %8 to %0 : $*Array<Element>, scope 62     // id: %9
  %10 = tuple (), scope 62                        // user: %11
  return %10 : $(), scope 62                      // id: %11
} // end sil function '$sSa12_endMutationyyF'

sil_scope 63 {  parent @$sSa16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout Array<τ_0_0>) -> () }

// Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:), scope 63
sil shared [serialized] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$sSa16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF : $@convention(method) <Element> (Bool, Int, Bool, @inout Array<Element>) -> () {
[%3: read s0.v**, write v**, copy v**, destroy v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // user: %7
// %1                                             // user: %7
// %2                                             // user: %7
// %3                                             // users: %9, %4
bb0(%0 : $Bool, %1 : $Int, %2 : $Bool, %3 : $*Array<Element>):
  %4 = struct_element_addr %3 : $*Array<Element>, #Array._buffer, scope 63 // user: %5
  %5 = load %4 : $*_ArrayBuffer<Element>, scope 63 // user: %7
  // function_ref _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)
  %6 = function_ref @$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @owned _ArrayBuffer<τ_0_0>) -> @owned _ArrayBuffer<τ_0_0>, scope 63 // user: %7
  %7 = apply %6<Element>(%0, %1, %2, %5) : $@convention(method) <τ_0_0> (Bool, Int, Bool, @owned _ArrayBuffer<τ_0_0>) -> @owned _ArrayBuffer<τ_0_0>, scope 63 // user: %8
  %8 = struct $Array<Element> (%7 : $_ArrayBuffer<Element>), scope 63 // user: %9
  store %8 to %3 : $*Array<Element>, scope 63     // id: %9
  %10 = tuple (), scope 63                        // user: %11
  return %10 : $(), scope 63                      // id: %11
} // end sil function '$sSa16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF'

sil_scope 64 {  parent @$sSa034_makeUniqueAndReserveCapacityIfNotB0yyF : $@convention(method) <τ_0_0> (@inout Array<τ_0_0>) -> () }

// Array._makeUniqueAndReserveCapacityIfNotUnique(), scope 64
sil public_external [serialized] [_semantics "array.make_mutable"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$sSa034_makeUniqueAndReserveCapacityIfNotB0yyF : $@convention(method) <Element> (@inout Array<Element>) -> () {
[%0: noescape! **]
// %0                                             // users: %20, %10, %1
bb0(%0 : $*Array<Element>):
  %1 = struct_element_addr %0 : $*Array<Element>, #Array._buffer, scope 64 // user: %3
  // function_ref _ArrayBuffer.beginCOWMutation()
  %2 = function_ref @$ss12_ArrayBufferV16beginCOWMutationSbyF : $@convention(method) <τ_0_0> (@inout _ArrayBuffer<τ_0_0>) -> Bool, scope 64 // user: %3
  %3 = apply %2<Element>(%1) : $@convention(method) <τ_0_0> (@inout _ArrayBuffer<τ_0_0>) -> Bool, scope 64 // user: %4
  %4 = struct_extract %3 : $Bool, #Bool._value, scope 64 // user: %6
  %5 = integer_literal $Builtin.Int1, -1, scope 64 // users: %18, %6
  %6 = builtin "int_expect_Int1"(%4 : $Builtin.Int1, %5 : $Builtin.Int1) : $Builtin.Int1, scope 64 // user: %7
  cond_br %6, bb2, bb1, scope 64                  // id: %7

bb1:                                              // Preds: bb0
  %8 = integer_literal $Builtin.Int1, 0, scope 64 // users: %15, %9
  %9 = struct $Bool (%8 : $Builtin.Int1), scope 64 // user: %20
  %10 = load %0 : $*Array<Element>, scope 64      // user: %12
  // function_ref Array.count.getter
  %11 = function_ref @$sSa5countSivg : $@convention(method) <τ_0_0> (@guaranteed Array<τ_0_0>) -> Int, scope 64 // user: %12
  %12 = apply %11<Element>(%10) : $@convention(method) <τ_0_0> (@guaranteed Array<τ_0_0>) -> Int, scope 64 // user: %14
  %13 = integer_literal $Builtin.Int64, 1, scope 64 // user: %15
  %14 = struct_extract %12 : $Int, #Int._value, scope 64 // user: %15
  %15 = builtin "sadd_with_overflow_Int64"(%14 : $Builtin.Int64, %13 : $Builtin.Int64, %8 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 64 // user: %16
  %16 = tuple_extract %15 : $(Builtin.Int64, Builtin.Int1), 0, scope 64 // user: %17
  %17 = struct $Int (%16 : $Builtin.Int64), scope 64 // user: %20
  %18 = struct $Bool (%5 : $Builtin.Int1), scope 64 // user: %20
  // function_ref Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)
  %19 = function_ref @$sSa16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout Array<τ_0_0>) -> (), scope 64 // user: %20
  %20 = apply %19<Element>(%9, %17, %18, %0) : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout Array<τ_0_0>) -> (), scope 64
  br bb3, scope 64                                // id: %21

bb2:                                              // Preds: bb0
  br bb3, scope 64                                // id: %22

bb3:                                              // Preds: bb2 bb1
  %23 = tuple (), scope 64                        // user: %24
  return %23 : $(), scope 64                      // id: %24
} // end sil function '$sSa034_makeUniqueAndReserveCapacityIfNotB0yyF'

sil_scope 65 {  parent @$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntF : $@convention(method) <τ_0_0> (Int, @in τ_0_0, @inout Array<τ_0_0>) -> () }

// Array._appendElementAssumeUniqueAndCapacity(_:newElement:), scope 65
sil public_external [serialized] [_semantics "array.mutate_unknown"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntF : $@convention(method) <Element> (Int, @in Element, @inout Array<Element>) -> () {
[%2: noescape! **]
// %0                                             // user: %4
// %1                                             // users: %35, %34
// %2                                             // user: %9
bb0(%0 : $Int, %1 : $*Element, %2 : $*Array<Element>):
  %3 = integer_literal $Builtin.Int64, 1, scope 65 // user: %6
  %4 = struct_extract %0 : $Int, #Int._value, scope 65 // users: %28, %6
  %5 = integer_literal $Builtin.Int1, 0, scope 65 // user: %6
  %6 = builtin "sadd_with_overflow_Int64"(%4 : $Builtin.Int64, %3 : $Builtin.Int64, %5 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 65 // user: %7
  %7 = tuple_extract %6 : $(Builtin.Int64, Builtin.Int1), 0, scope 65 // user: %8
  %8 = struct $Int (%7 : $Builtin.Int64), scope 65 // user: %21
  %9 = struct_element_addr %2 : $*Array<Element>, #Array._buffer, scope 65 // user: %10
  %10 = load %9 : $*_ArrayBuffer<Element>, scope 65 // users: %25, %15, %12
  // function_ref _ArrayBuffer._native.getter
  %11 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 65 // user: %15
  %12 = struct_extract %10 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 65 // user: %13
  %13 = struct_extract %12 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 65 // users: %26, %24, %16, %14
  strong_retain %13 : $Builtin.BridgeObject, scope 65 // id: %14
  %15 = apply %11<Element>(%10) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 65 // user: %17
  strong_release %13 : $Builtin.BridgeObject, scope 65 // id: %16
  %17 = struct_extract %15 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 65 // users: %22, %18
  %18 = ref_element_addr %17 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 65 // user: %19
  %19 = struct_element_addr %18 : $*_ArrayBody, #_ArrayBody._storage, scope 65 // user: %20
  %20 = struct_element_addr %19 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 65 // user: %21
  store %8 to %20 : $*Int, scope 65               // id: %21
  strong_release %17 : $__ContiguousArrayStorageBase, scope 65 // id: %22
  // function_ref _ArrayBuffer.mutableFirstElementAddress.getter
  %23 = function_ref @$ss12_ArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 65 // user: %25
  strong_retain %13 : $Builtin.BridgeObject, scope 65 // id: %24
  %25 = apply %23<Element>(%10) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 65 // user: %27
  strong_release %13 : $Builtin.BridgeObject, scope 65 // id: %26
  %27 = struct_extract %25 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 65 // user: %29
  %28 = builtin "truncOrBitCast_Int64_Word"(%4 : $Builtin.Int64) : $Builtin.Word, scope 65 // user: %30
  %29 = pointer_to_address %27 : $Builtin.RawPointer to [strict] $*Element, scope 65 // user: %30
  %30 = index_addr [stack_protection] %29 : $*Element, %28 : $Builtin.Word, scope 65 // user: %31
  %31 = address_to_pointer [stack_protection] %30 : $*Element to $Builtin.RawPointer, scope 65 // user: %32
  %32 = struct $UnsafeMutablePointer<Element> (%31 : $Builtin.RawPointer), scope 65 // user: %34
  // function_ref UnsafeMutablePointer.initialize(to:)
  %33 = function_ref @$sSp10initialize2toyx_tF : $@convention(method) <τ_0_0> (@in_guaranteed τ_0_0, UnsafeMutablePointer<τ_0_0>) -> (), scope 65 // user: %34
  %34 = apply %33<Element>(%1, %32) : $@convention(method) <τ_0_0> (@in_guaranteed τ_0_0, UnsafeMutablePointer<τ_0_0>) -> (), scope 65
  destroy_addr %1 : $*Element, scope 65           // id: %35
  %36 = tuple (), scope 65                        // user: %37
  return %36 : $(), scope 65                      // id: %37
} // end sil function '$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntF'

sil_scope 66 {  parent @$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @owned _ArrayBuffer<τ_0_0>) -> @owned _ArrayBuffer<τ_0_0> }

// _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:), scope 66
sil shared [serialized] [noinline] [_semantics "optimize.sil.specialize.owned2guarantee.never"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF : $@convention(method) <Element> (Bool, Int, Bool, @owned _ArrayBuffer<Element>) -> @owned _ArrayBuffer<Element> {
[%3: read v**.c*.v**, write v**.c*.v**, copy **, destroy v**.c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // user: %50
// %1                                             // users: %24, %10, %8
// %2                                             // user: %6
// %3                                             // users: %121, %106, %102, %88, %85, %40, %33, %27, %5
bb0(%0 : $Bool, %1 : $Int, %2 : $Bool, %3 : $_ArrayBuffer<Element>):
  // function_ref _ArrayBuffer.capacity.getter
  %4 = function_ref @$ss12_ArrayBufferV8capacitySivg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 66 // user: %5
  %5 = apply %4<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 66 // users: %13, %9
  %6 = struct_extract %2 : $Bool, #Bool._value, scope 66 // user: %7
  cond_br %6, bb2, bb1, scope 66                  // id: %7

bb1:                                              // Preds: bb0
  br bb7(%1 : $Int), scope 66                     // id: %8

bb2:                                              // Preds: bb0
  %9 = struct_extract %5 : $Int, #Int._value, scope 66 // users: %16, %11
  %10 = struct_extract %1 : $Int, #Int._value, scope 66 // users: %21, %11
  %11 = builtin "cmp_slt_Int64"(%9 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 66 // user: %12
  cond_br %11, bb4, bb3, scope 66                 // id: %12

bb3:                                              // Preds: bb2
  br bb7(%5 : $Int), scope 66                     // id: %13

bb4:                                              // Preds: bb2
  %14 = integer_literal $Builtin.Int64, 2, scope 66 // user: %16
  %15 = integer_literal $Builtin.Int1, -1, scope 66 // user: %16
  %16 = builtin "smul_with_overflow_Int64"(%9 : $Builtin.Int64, %14 : $Builtin.Int64, %15 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 66 // users: %18, %17
  %17 = tuple_extract %16 : $(Builtin.Int64, Builtin.Int1), 0, scope 66 // users: %21, %20
  %18 = tuple_extract %16 : $(Builtin.Int64, Builtin.Int1), 1, scope 66 // user: %19
  cond_fail %18 : $Builtin.Int1, "arithmetic overflow", scope 66 // id: %19
  %20 = struct $Int (%17 : $Builtin.Int64), scope 66 // user: %23
  %21 = builtin "cmp_slt_Int64"(%17 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 66 // user: %22
  cond_br %21, bb6, bb5, scope 66                 // id: %22

bb5:                                              // Preds: bb4
  br bb7(%20 : $Int), scope 66                    // id: %23

bb6:                                              // Preds: bb4
  br bb7(%1 : $Int), scope 66                     // id: %24

// %25                                            // user: %49
bb7(%25 : $Int):                                  // Preds: bb6 bb5 bb3 bb1
  // function_ref _ArrayBuffer._isNative.getter
  %26 = function_ref @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 66 // user: %27
  %27 = apply %26<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 66 // user: %28
  %28 = struct_extract %27 : $Bool, #Bool._value, scope 66 // user: %30
  %29 = integer_literal $Builtin.Int1, -1, scope 66 // user: %30
  %30 = builtin "int_expect_Int1"(%28 : $Builtin.Int1, %29 : $Builtin.Int1) : $Builtin.Int1, scope 66 // user: %31
  cond_br %30, bb9, bb8, scope 66                 // id: %31

bb8:                                              // Preds: bb7
  // function_ref _ArrayBuffer._nonNative.getter
  %32 = function_ref @$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 66 // user: %33
  %33 = apply %32<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 66 // users: %36, %35
  // function_ref _CocoaArrayWrapper.endIndex.getter
  %34 = function_ref @$ss18_CocoaArrayWrapperV8endIndexSivg : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 66 // user: %35
  %35 = apply %34(%33) : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 66 // user: %38
  %36 = struct_extract %33 : $_CocoaArrayWrapper, #_CocoaArrayWrapper.buffer, scope 66 // user: %37
  strong_release %36 : $AnyObject, scope 66       // id: %37
  br bb10(%35 : $Int), scope 66                   // id: %38

bb9:                                              // Preds: bb7
  // function_ref _ArrayBuffer._native.getter
  %39 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 66 // user: %40
  %40 = apply %39<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 66 // users: %43, %42
  // function_ref _ContiguousArrayBuffer.count.getter
  %41 = function_ref @$ss22_ContiguousArrayBufferV5countSivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 66 // user: %42
  %42 = apply %41<Element>(%40) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 66 // user: %45
  %43 = struct_extract %40 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 66 // user: %44
  strong_release %43 : $__ContiguousArrayStorageBase, scope 66 // id: %44
  br bb10(%42 : $Int), scope 66                   // id: %45

// %46                                            // users: %104, %81, %53, %49
bb10(%46 : $Int):                                 // Preds: bb9 bb8
  %47 = metatype $@thin _ContiguousArrayBuffer<Element>.Type, scope 66 // user: %49
  // function_ref _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)
  %48 = function_ref @$ss22_ContiguousArrayBufferV19_uninitializedCount15minimumCapacityAByxGSi_SitcfC : $@convention(method) <τ_0_0> (Int, Int, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 66 // user: %49
  %49 = apply %48<Element>(%46, %25, %47) : $@convention(method) <τ_0_0> (Int, Int, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 66 // users: %120, %100, %83
  %50 = struct_extract %0 : $Bool, #Bool._value, scope 66 // user: %51
  cond_br %50, bb19, bb11, scope 66               // id: %51

bb11:                                             // Preds: bb10
  %52 = integer_literal $Builtin.Int64, 0, scope 66 // users: %80, %75, %72
  %53 = struct_extract %46 : $Int, #Int._value, scope 66 // users: %75, %72
  %54 = string_literal utf8 "Range requires lowerBound <= upperBound", scope 66 // user: %56
  %55 = integer_literal $Builtin.Word, 39, scope 66 // users: %61, %58
  %56 = builtin "ptrtoint_Word"(%54 : $Builtin.RawPointer) : $Builtin.Word, scope 66 // user: %58
  %57 = integer_literal $Builtin.Int8, 2, scope 66 // users: %93, %61, %58
  %58 = struct $StaticString (%56 : $Builtin.Word, %55 : $Builtin.Word, %57 : $Builtin.Int8), scope 66 // user: %97
  %59 = string_literal utf8 "Swift/arm64e-apple-macos.swiftinterface", scope 66 // user: %60
  %60 = builtin "ptrtoint_Word"(%59 : $Builtin.RawPointer) : $Builtin.Word, scope 66 // user: %61
  %61 = struct $StaticString (%60 : $Builtin.Word, %55 : $Builtin.Word, %57 : $Builtin.Int8), scope 66 // user: %97
  %62 = integer_literal $Builtin.Int64, 16122, scope 66 // user: %63
  %63 = struct $UInt (%62 : $Builtin.Int64), scope 66 // user: %97
  %64 = builtin "assert_configuration"() : $Builtin.Int32, scope 66 // users: %69, %66
  %65 = integer_literal $Builtin.Int32, 0, scope 66 // user: %66
  %66 = builtin "cmp_eq_Int32"(%64 : $Builtin.Int32, %65 : $Builtin.Int32) : $Builtin.Int1, scope 66 // user: %67
  cond_br %66, bb15, bb12, scope 66               // id: %67

bb12:                                             // Preds: bb11
  %68 = integer_literal $Builtin.Int32, 1, scope 66 // user: %69
  %69 = builtin "cmp_eq_Int32"(%64 : $Builtin.Int32, %68 : $Builtin.Int32) : $Builtin.Int1, scope 66 // user: %70
  cond_br %69, bb14, bb13, scope 66               // id: %70

bb13:                                             // Preds: bb12
  br bb17, scope 66                               // id: %71

bb14:                                             // Preds: bb12
  %72 = builtin "cmp_slt_Int64"(%53 : $Builtin.Int64, %52 : $Builtin.Int64) : $Builtin.Int1, scope 66 // user: %73
  cond_fail %72 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 66 // id: %73
  br bb17, scope 66                               // id: %74

bb15:                                             // Preds: bb11
  %75 = builtin "cmp_slt_Int64"(%53 : $Builtin.Int64, %52 : $Builtin.Int64) : $Builtin.Int1, scope 66 // user: %77
  %76 = integer_literal $Builtin.Int1, 0, scope 66 // user: %77
  %77 = builtin "int_expect_Int1"(%75 : $Builtin.Int1, %76 : $Builtin.Int1) : $Builtin.Int1, scope 66 // user: %78
  cond_br %77, bb18, bb16, scope 66               // id: %78

bb16:                                             // Preds: bb15
  br bb17, scope 66                               // id: %79

bb17:                                             // Preds: bb16 bb14 bb13
  %80 = struct $Int (%52 : $Builtin.Int64), scope 66 // user: %81
  %81 = struct $Range<Int> (%80 : $Int, %46 : $Int), scope 66 // user: %88
  // function_ref _ContiguousArrayBuffer.mutableFirstElementAddress.getter
  %82 = function_ref @$ss22_ContiguousArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 66 // user: %83
  %83 = apply %82<Element>(%49) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 66 // user: %88
  // function_ref _ArrayBuffer._copyContents(subRange:initializing:)
  %84 = function_ref @$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF : $@convention(method) <τ_0_0> (Range<Int>, UnsafeMutablePointer<τ_0_0>, @owned _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 66 // user: %88
  %85 = struct_extract %3 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 66 // user: %86
  %86 = struct_extract %85 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 66 // user: %87
  strong_retain %86 : $Builtin.BridgeObject, scope 66 // id: %87
  %88 = apply %84<Element>(%81, %83, %3) : $@convention(method) <τ_0_0> (Range<Int>, UnsafeMutablePointer<τ_0_0>, @owned _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 66
  br bb20, scope 66                               // id: %89

bb18:                                             // Preds: bb15
  %90 = string_literal utf8 "Fatal error", scope 66 // user: %92
  %91 = integer_literal $Builtin.Word, 11, scope 66 // user: %93
  %92 = builtin "ptrtoint_Word"(%90 : $Builtin.RawPointer) : $Builtin.Word, scope 66 // user: %93
  %93 = struct $StaticString (%92 : $Builtin.Word, %91 : $Builtin.Word, %57 : $Builtin.Int8), scope 66 // user: %97
  %94 = integer_literal $Builtin.Int32, 1, scope 66 // user: %95
  %95 = struct $UInt32 (%94 : $Builtin.Int32), scope 66 // user: %97
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %96 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 66 // user: %97
  %97 = apply %96(%93, %58, %61, %63, %95) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 66
  unreachable , scope 66                          // id: %98

bb19:                                             // Preds: bb10
  // function_ref _ContiguousArrayBuffer.firstElementAddress.getter
  %99 = function_ref @$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 66 // user: %100
  %100 = apply %99<Element>(%49) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 66 // user: %104
  // function_ref _ArrayBuffer.mutableFirstElementAddress.getter
  %101 = function_ref @$ss12_ArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 66 // user: %102
  %102 = apply %101<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 66 // user: %104
  // function_ref UnsafeMutablePointer.moveInitialize(from:count:)
  %103 = function_ref @$sSp14moveInitialize4from5countySpyxG_SitF : $@convention(method) <τ_0_0> (UnsafeMutablePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 66 // user: %104
  %104 = apply %103<Element>(%102, %46, %100) : $@convention(method) <τ_0_0> (UnsafeMutablePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 66
  // function_ref _ArrayBuffer._native.getter
  %105 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 66 // user: %106
  %106 = apply %105<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 66 // user: %109
  %107 = integer_literal $Builtin.Int64, 0, scope 66 // user: %108
  %108 = struct $Int (%107 : $Builtin.Int64), scope 66 // user: %113
  %109 = struct_extract %106 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 66 // users: %114, %110
  %110 = ref_element_addr %109 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 66 // user: %111
  %111 = struct_element_addr %110 : $*_ArrayBody, #_ArrayBody._storage, scope 66 // user: %112
  %112 = struct_element_addr %111 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 66 // user: %113
  store %108 to %112 : $*Int, scope 66            // id: %113
  strong_release %109 : $__ContiguousArrayStorageBase, scope 66 // id: %114
  br bb20, scope 66                               // id: %115

bb20:                                             // Preds: bb19 bb17
  %116 = metatype $@thin _ArrayBuffer<Element>.Type, scope 66 // user: %120
  %117 = integer_literal $Builtin.Int64, 0, scope 66 // user: %118
  %118 = struct $Int (%117 : $Builtin.Int64), scope 66 // user: %120
  // function_ref _ArrayBuffer.init(_buffer:shiftedToStartIndex:)
  %119 = function_ref @$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfC : $@convention(method) <τ_0_0> (@owned _ContiguousArrayBuffer<τ_0_0>, Int, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0>, scope 66 // user: %120
  %120 = apply %119<Element>(%49, %118, %116) : $@convention(method) <τ_0_0> (@owned _ContiguousArrayBuffer<τ_0_0>, Int, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0>, scope 66 // user: %124
  %121 = struct_extract %3 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 66 // user: %122
  %122 = struct_extract %121 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 66 // user: %123
  strong_release %122 : $Builtin.BridgeObject, scope 66 // id: %123
  return %120 : $_ArrayBuffer<Element>, scope 66  // id: %124
} // end sil function '$ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF'

sil_scope 67 {  parent @$ss12_ArrayBufferV13_copyContents12initializings16IndexingIteratorVyAByxGG_SitSryxG_tF : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>, @owned _ArrayBuffer<τ_0_0>) -> (@owned IndexingIterator<_ArrayBuffer<τ_0_0>>, Int) }

// _ArrayBuffer._copyContents(initializing:), scope 67
sil public_external [serialized] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss12_ArrayBufferV13_copyContents12initializings16IndexingIteratorVyAByxGG_SitSryxG_tF : $@convention(method) <Element> (UnsafeMutableBufferPointer<Element>, @owned _ArrayBuffer<Element>) -> (@owned IndexingIterator<_ArrayBuffer<Element>>, Int) {
// %0                                             // users: %96, %19, %8
// %1                                             // users: %102, %94, %82, %30, %15, %14, %3
bb0(%0 : $UnsafeMutableBufferPointer<Element>, %1 : $_ArrayBuffer<Element>):
  // function_ref _ArrayBuffer._isNative.getter
  %2 = function_ref @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 67 // user: %3
  %3 = apply %2<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 67 // user: %4
  %4 = struct_extract %3 : $Bool, #Bool._value, scope 67 // user: %6
  %5 = integer_literal $Builtin.Int1, -1, scope 67 // user: %6
  %6 = builtin "int_expect_Int1"(%4 : $Builtin.Int1, %5 : $Builtin.Int1) : $Builtin.Int1, scope 67 // user: %7
  cond_br %6, bb16, bb1, scope 67                 // id: %7

bb1:                                              // Preds: bb0
  %8 = struct_extract %0 : $UnsafeMutableBufferPointer<Element>, #UnsafeMutableBufferPointer.count, scope 67 // user: %10
  %9 = integer_literal $Builtin.Int64, 0, scope 67 // users: %58, %49, %16, %11
  %10 = struct_extract %8 : $Int, #Int._value, scope 67 // users: %72, %58, %49, %11
  %11 = builtin "cmp_slt_Int64"(%9 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 67 // user: %12
  cond_br %11, bb3, bb2, scope 67                 // id: %12

bb2:                                              // Preds: bb1
  // function_ref _ArrayBuffer.startIndex.getter
  %13 = function_ref @$ss12_ArrayBufferV10startIndexSivg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 67 // user: %14
  %14 = apply %13<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 67 // user: %15
  %15 = struct $IndexingIterator<_ArrayBuffer<Element>> (%1 : $_ArrayBuffer<Element>, %14 : $Int), scope 67 // user: %17
  %16 = struct $Int (%9 : $Builtin.Int64), scope 67 // user: %17
  br bb17(%15 : $IndexingIterator<_ArrayBuffer<Element>>, %16 : $Int), scope 67 // id: %17

bb3:                                              // Preds: bb1
  // function_ref UnsafeMutableBufferPointer.baseAddress.getter
  %18 = function_ref @$sSr11baseAddressSpyxGSgvg : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>) -> Optional<UnsafeMutablePointer<τ_0_0>>, scope 67 // user: %19
  %19 = apply %18<Element>(%0) : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>) -> Optional<UnsafeMutablePointer<τ_0_0>>, scope 67 // user: %20
  switch_enum %19 : $Optional<UnsafeMutablePointer<Element>>, case #Optional.some!enumelt: bb5, case #Optional.none!enumelt: bb4, scope 67 // id: %20

bb4:                                              // Preds: bb3
  %21 = enum $Optional<UnsafeMutablePointer<AnyObject>>, #Optional.none!enumelt, scope 67 // user: %22
  br bb6(%21 : $Optional<UnsafeMutablePointer<AnyObject>>), scope 67 // id: %22

// %23                                            // user: %24
bb5(%23 : $UnsafeMutablePointer<Element>):        // Preds: bb3
  %24 = struct_extract %23 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 67 // user: %25
  %25 = struct $UnsafeMutablePointer<AnyObject> (%24 : $Builtin.RawPointer), scope 67 // user: %26
  %26 = enum $Optional<UnsafeMutablePointer<AnyObject>>, #Optional.some!enumelt, %25 : $UnsafeMutablePointer<AnyObject>, scope 67 // user: %27
  br bb6(%26 : $Optional<UnsafeMutablePointer<AnyObject>>), scope 67 // id: %27

// %28                                            // users: %74, %60
bb6(%28 : $Optional<UnsafeMutablePointer<AnyObject>>): // Preds: bb5 bb4
  // function_ref _ArrayBuffer._nonNative.getter
  %29 = function_ref @$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 67 // user: %30
  %30 = apply %29<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 67 // user: %76
  %31 = string_literal utf8 "UnsafeMutableBufferPointer with negative count", scope 67 // user: %33
  %32 = integer_literal $Builtin.Word, 46, scope 67 // user: %35
  %33 = builtin "ptrtoint_Word"(%31 : $Builtin.RawPointer) : $Builtin.Word, scope 67 // user: %35
  %34 = integer_literal $Builtin.Int8, 2, scope 67 // users: %87, %64, %55, %39, %35
  %35 = struct $StaticString (%33 : $Builtin.Word, %32 : $Builtin.Word, %34 : $Builtin.Int8), scope 67 // user: %91
  %36 = string_literal utf8 "Swift/arm64e-apple-macos.swiftinterface", scope 67 // user: %38
  %37 = integer_literal $Builtin.Word, 39, scope 67 // user: %39
  %38 = builtin "ptrtoint_Word"(%36 : $Builtin.RawPointer) : $Builtin.Word, scope 67 // user: %39
  %39 = struct $StaticString (%38 : $Builtin.Word, %37 : $Builtin.Word, %34 : $Builtin.Int8), scope 67 // users: %91, %68
  %40 = integer_literal $Builtin.Int64, 34896, scope 67 // user: %41
  %41 = struct $UInt (%40 : $Builtin.Int64), scope 67 // user: %91
  %42 = builtin "assert_configuration"() : $Builtin.Int32, scope 67 // user: %44
  %43 = integer_literal $Builtin.Int32, 0, scope 67 // user: %44
  %44 = builtin "cmp_eq_Int32"(%42 : $Builtin.Int32, %43 : $Builtin.Int32) : $Builtin.Int1, scope 67 // user: %46
  %45 = integer_literal $Builtin.Int1, 0, scope 67 // users: %50, %46
  %46 = builtin "int_expect_Int1"(%44 : $Builtin.Int1, %45 : $Builtin.Int1) : $Builtin.Int1, scope 67 // user: %47
  cond_br %46, bb8, bb7, scope 67                 // id: %47

bb7:                                              // Preds: bb6
  br bb14, scope 67                               // id: %48

bb8:                                              // Preds: bb6
  %49 = builtin "cmp_slt_Int64"(%10 : $Builtin.Int64, %9 : $Builtin.Int64) : $Builtin.Int1, scope 67 // user: %50
  %50 = builtin "int_expect_Int1"(%49 : $Builtin.Int1, %45 : $Builtin.Int1) : $Builtin.Int1, scope 67 // user: %51
  cond_br %50, bb15, bb9, scope 67                // id: %51

bb9:                                              // Preds: bb8
  %52 = string_literal utf8 "UnsafeMutableBufferPointer has a nil start and nonzero count", scope 67 // user: %54
  %53 = integer_literal $Builtin.Word, 60, scope 67 // user: %55
  %54 = builtin "ptrtoint_Word"(%52 : $Builtin.RawPointer) : $Builtin.Word, scope 67 // user: %55
  %55 = struct $StaticString (%54 : $Builtin.Word, %53 : $Builtin.Word, %34 : $Builtin.Int8), scope 67 // user: %68
  %56 = integer_literal $Builtin.Int64, 34898, scope 67 // user: %57
  %57 = struct $UInt (%56 : $Builtin.Int64), scope 67 // user: %68
  %58 = builtin "cmp_eq_Int64"(%10 : $Builtin.Int64, %9 : $Builtin.Int64) : $Builtin.Int1, scope 67 // user: %59
  cond_br %58, bb13, bb10, scope 67               // id: %59

bb10:                                             // Preds: bb9
  switch_enum %28 : $Optional<UnsafeMutablePointer<AnyObject>>, case #Optional.some!enumelt: bb12, case #Optional.none!enumelt: bb11, scope 67 // id: %60

bb11:                                             // Preds: bb10
  %61 = string_literal utf8 "Fatal error", scope 67 // user: %63
  %62 = integer_literal $Builtin.Word, 11, scope 67 // user: %64
  %63 = builtin "ptrtoint_Word"(%61 : $Builtin.RawPointer) : $Builtin.Word, scope 67 // user: %64
  %64 = struct $StaticString (%63 : $Builtin.Word, %62 : $Builtin.Word, %34 : $Builtin.Int8), scope 67 // user: %68
  %65 = integer_literal $Builtin.Int32, 1, scope 67 // user: %66
  %66 = struct $UInt32 (%65 : $Builtin.Int32), scope 67 // user: %68
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %67 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 67 // user: %68
  %68 = apply %67(%64, %55, %39, %57, %66) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 67
  unreachable , scope 67                          // id: %69

bb12:                                             // Preds: bb10
  br bb14, scope 67                               // id: %70

bb13:                                             // Preds: bb9
  br bb14, scope 67                               // id: %71

bb14:                                             // Preds: bb13 bb12 bb7
  %72 = builtin "assumeNonNegative_Int64"(%10 : $Builtin.Int64) : $Builtin.Int64, scope 67 // user: %73
  %73 = struct $Int (%72 : $Builtin.Int64), scope 67 // user: %74
  %74 = struct $UnsafeMutableBufferPointer<AnyObject> (%28 : $Optional<UnsafeMutablePointer<AnyObject>>, %73 : $Int), scope 67 // user: %76
  // function_ref _CocoaArrayWrapper._copyContents(initializing:)
  %75 = function_ref @$ss18_CocoaArrayWrapperV13_copyContents12initializings16IndexingIteratorVyABG_SitSryyXlG_tF : $@convention(method) (UnsafeMutableBufferPointer<AnyObject>, @owned _CocoaArrayWrapper) -> (@owned IndexingIterator<_CocoaArrayWrapper>, Int), scope 67 // user: %76
  %76 = apply %75(%74, %30) : $@convention(method) (UnsafeMutableBufferPointer<AnyObject>, @owned _CocoaArrayWrapper) -> (@owned IndexingIterator<_CocoaArrayWrapper>, Int), scope 67 // users: %81, %77
  %77 = tuple_extract %76 : $(IndexingIterator<_CocoaArrayWrapper>, Int), 0, scope 67 // user: %78
  %78 = struct_extract %77 : $IndexingIterator<_CocoaArrayWrapper>, #IndexingIterator._elements, scope 67 // user: %79
  %79 = struct_extract %78 : $_CocoaArrayWrapper, #_CocoaArrayWrapper.buffer, scope 67 // user: %80
  strong_release %79 : $AnyObject, scope 67       // id: %80
  %81 = tuple_extract %76 : $(IndexingIterator<_CocoaArrayWrapper>, Int), 1, scope 67 // users: %83, %82
  %82 = struct $IndexingIterator<_ArrayBuffer<Element>> (%1 : $_ArrayBuffer<Element>, %81 : $Int), scope 67 // user: %83
  br bb17(%82 : $IndexingIterator<_ArrayBuffer<Element>>, %81 : $Int), scope 67 // id: %83

bb15:                                             // Preds: bb8
  %84 = string_literal utf8 "Fatal error", scope 67 // user: %86
  %85 = integer_literal $Builtin.Word, 11, scope 67 // user: %87
  %86 = builtin "ptrtoint_Word"(%84 : $Builtin.RawPointer) : $Builtin.Word, scope 67 // user: %87
  %87 = struct $StaticString (%86 : $Builtin.Word, %85 : $Builtin.Word, %34 : $Builtin.Int8), scope 67 // user: %91
  %88 = integer_literal $Builtin.Int32, 1, scope 67 // user: %89
  %89 = struct $UInt32 (%88 : $Builtin.Int32), scope 67 // user: %91
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %90 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 67 // user: %91
  %91 = apply %90(%87, %35, %39, %41, %89) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 67
  unreachable , scope 67                          // id: %92

bb16:                                             // Preds: bb0
  // function_ref _ArrayBuffer._native.getter
  %93 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 67 // user: %94
  %94 = apply %93<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 67 // user: %96
  // function_ref _ContiguousArrayBuffer._copyContents(initializing:)
  %95 = function_ref @$ss22_ContiguousArrayBufferV13_copyContents12initializings16IndexingIteratorVyAByxGG_SitSryxG_tF : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>, @owned _ContiguousArrayBuffer<τ_0_0>) -> (@owned IndexingIterator<_ContiguousArrayBuffer<τ_0_0>>, Int), scope 67 // user: %96
  %96 = apply %95<Element>(%0, %94) : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>, @owned _ContiguousArrayBuffer<τ_0_0>) -> (@owned IndexingIterator<_ContiguousArrayBuffer<τ_0_0>>, Int), scope 67 // users: %101, %97
  %97 = tuple_extract %96 : $(IndexingIterator<_ContiguousArrayBuffer<Element>>, Int), 0, scope 67 // user: %98
  %98 = struct_extract %97 : $IndexingIterator<_ContiguousArrayBuffer<Element>>, #IndexingIterator._elements, scope 67 // user: %99
  %99 = struct_extract %98 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 67 // user: %100
  strong_release %99 : $__ContiguousArrayStorageBase, scope 67 // id: %100
  %101 = tuple_extract %96 : $(IndexingIterator<_ContiguousArrayBuffer<Element>>, Int), 1, scope 67 // users: %103, %102
  %102 = struct $IndexingIterator<_ArrayBuffer<Element>> (%1 : $_ArrayBuffer<Element>, %101 : $Int), scope 67 // user: %103
  br bb17(%102 : $IndexingIterator<_ArrayBuffer<Element>>, %101 : $Int), scope 67 // id: %103

// %104                                           // user: %106
// %105                                           // user: %106
bb17(%104 : $IndexingIterator<_ArrayBuffer<Element>>, %105 : $Int): // Preds: bb16 bb14 bb2
  %106 = tuple (%104 : $IndexingIterator<_ArrayBuffer<Element>>, %105 : $Int), scope 67 // user: %107
  return %106 : $(IndexingIterator<_ArrayBuffer<Element>>, Int), scope 67 // id: %107
} // end sil function '$ss12_ArrayBufferV13_copyContents12initializings16IndexingIteratorVyAByxGG_SitSryxG_tF'

sil_scope 68 {  parent @$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF : $@convention(method) <τ_0_0> (Range<Int>, UnsafeMutablePointer<τ_0_0>, @owned _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0> }

// _ArrayBuffer._copyContents(subRange:initializing:), scope 68
sil public_external [serialized] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF : $@convention(method) <Element> (Range<Int>, UnsafeMutablePointer<Element>, @owned _ArrayBuffer<Element>) -> UnsafeMutablePointer<Element> {
// %0                                             // users: %23, %16, %4
// %1                                             // users: %23, %11
// %2                                             // users: %26, %21, %14, %6, %4
bb0(%0 : $Range<Int>, %1 : $UnsafeMutablePointer<Element>, %2 : $_ArrayBuffer<Element>):
  // function_ref _ArrayBuffer._typeCheck(_:)
  %3 = function_ref @$ss12_ArrayBufferV10_typeCheckyySnySiGF : $@convention(method) <τ_0_0> (Range<Int>, @guaranteed _ArrayBuffer<τ_0_0>) -> (), scope 68 // user: %4
  %4 = apply %3<Element>(%0, %2) : $@convention(method) <τ_0_0> (Range<Int>, @guaranteed _ArrayBuffer<τ_0_0>) -> (), scope 68
  // function_ref _ArrayBuffer._isNative.getter
  %5 = function_ref @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 68 // user: %6
  %6 = apply %5<Element>(%2) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 68 // user: %7
  %7 = struct_extract %6 : $Bool, #Bool._value, scope 68 // user: %9
  %8 = integer_literal $Builtin.Int1, -1, scope 68 // user: %9
  %9 = builtin "int_expect_Int1"(%7 : $Builtin.Int1, %8 : $Builtin.Int1) : $Builtin.Int1, scope 68 // user: %10
  cond_br %9, bb2, bb1, scope 68                  // id: %10

bb1:                                              // Preds: bb0
  %11 = struct_extract %1 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 68 // user: %12
  %12 = struct $UnsafeMutablePointer<AnyObject> (%11 : $Builtin.RawPointer), scope 68 // user: %16
  // function_ref _ArrayBuffer._nonNative.getter
  %13 = function_ref @$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 68 // user: %14
  %14 = apply %13<Element>(%2) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 68 // user: %16
  // function_ref _CocoaArrayWrapper._copyContents(subRange:initializing:)
  %15 = function_ref @$ss18_CocoaArrayWrapperV13_copyContents8subRange12initializingSpyyXlGSnySiG_AFtF : $@convention(method) (Range<Int>, UnsafeMutablePointer<AnyObject>, @owned _CocoaArrayWrapper) -> UnsafeMutablePointer<AnyObject>, scope 68 // user: %16
  %16 = apply %15(%0, %12, %14) : $@convention(method) (Range<Int>, UnsafeMutablePointer<AnyObject>, @owned _CocoaArrayWrapper) -> UnsafeMutablePointer<AnyObject>, scope 68 // user: %17
  %17 = struct_extract %16 : $UnsafeMutablePointer<AnyObject>, #UnsafeMutablePointer._rawValue, scope 68 // user: %18
  %18 = struct $UnsafeMutablePointer<Element> (%17 : $Builtin.RawPointer), scope 68 // user: %19
  br bb3(%18 : $UnsafeMutablePointer<Element>), scope 68 // id: %19

bb2:                                              // Preds: bb0
  // function_ref _ArrayBuffer._native.getter
  %20 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 68 // user: %21
  %21 = apply %20<Element>(%2) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 68 // user: %23
  // function_ref _ContiguousArrayBuffer._copyContents(subRange:initializing:)
  %22 = function_ref @$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF : $@convention(method) <τ_0_0> (Range<Int>, UnsafeMutablePointer<τ_0_0>, @owned _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 68 // user: %23
  %23 = apply %22<Element>(%0, %1, %21) : $@convention(method) <τ_0_0> (Range<Int>, UnsafeMutablePointer<τ_0_0>, @owned _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 68 // user: %24
  br bb3(%23 : $UnsafeMutablePointer<Element>), scope 68 // id: %24

// %25                                            // user: %29
bb3(%25 : $UnsafeMutablePointer<Element>):        // Preds: bb2 bb1
  %26 = struct_extract %2 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 68 // user: %27
  %27 = struct_extract %26 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 68 // user: %28
  strong_release %27 : $Builtin.BridgeObject, scope 68 // id: %28
  return %25 : $UnsafeMutablePointer<Element>, scope 68 // id: %29
} // end sil function '$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF'

sil_scope 69 {  parent @$ss12_ArrayBufferV19_getElementSlowPathyyXlSiF : $@convention(method) <τ_0_0> (Int, @guaranteed _ArrayBuffer<τ_0_0>) -> @owned AnyObject }

// _ArrayBuffer._getElementSlowPath(_:), scope 69
sil public_external [serialized] [noinline] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss12_ArrayBufferV19_getElementSlowPathyyXlSiF : $@convention(method) <Element> (Int, @guaranteed _ArrayBuffer<Element>) -> @owned AnyObject {
[%1: noescape! v**, escape! v**.c*.v** => %r.v**]
// %0                                             // users: %165, %141, %124, %9
// %1                                             // users: %169, %160, %101, %7, %3
bb0(%0 : $Int, %1 : $_ArrayBuffer<Element>):
  // function_ref _ArrayBuffer._isNative.getter
  %2 = function_ref @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 69 // user: %3
  %3 = apply %2<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 69 // user: %4
  %4 = struct_extract %3 : $Bool, #Bool._value, scope 69 // user: %5
  cond_br %4, bb7, bb1, scope 69                  // id: %5

bb1:                                              // Preds: bb0
  // function_ref _ArrayBuffer._nonNative.getter
  %6 = function_ref @$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 69 // user: %7
  %7 = apply %6<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 69 // users: %10, %9
  // function_ref _CocoaArrayWrapper.subscript.getter
  %8 = function_ref @$ss18_CocoaArrayWrapperVyyXlSicig : $@convention(method) (Int, @guaranteed _CocoaArrayWrapper) -> @owned AnyObject, scope 69 // user: %9
  %9 = apply %8(%0, %7) : $@convention(method) (Int, @guaranteed _CocoaArrayWrapper) -> @owned AnyObject, scope 69 // users: %99, %96, %62, %61, %16, %15, %13
  %10 = struct_extract %7 : $_CocoaArrayWrapper, #_CocoaArrayWrapper.buffer, scope 69 // user: %11
  strong_release %10 : $AnyObject, scope 69       // id: %11
  %12 = alloc_stack $AnyObject, scope 69          // users: %98, %19, %17, %13
  store %9 to %12 : $*AnyObject, scope 69         // id: %13
  %14 = alloc_stack $Element, scope 69            // users: %97, %95, %18, %17
  strong_retain %9 : $AnyObject, scope 69         // id: %15
  strong_retain %9 : $AnyObject, scope 69         // id: %16
  checked_cast_addr_br take_always AnyObject in %12 : $*AnyObject to Element in %14 : $*Element, bb6, bb2, scope 69 // id: %17

bb2:                                              // Preds: bb1
  dealloc_stack %14 : $*Element, scope 69         // id: %18
  dealloc_stack %12 : $*AnyObject, scope 69       // id: %19
  %20 = string_literal utf8 "Fatal error", scope 69 // user: %22
  %21 = integer_literal $Builtin.Word, 11, scope 69 // users: %55, %24
  %22 = builtin "ptrtoint_Word"(%20 : $Builtin.RawPointer) : $Builtin.Word, scope 69 // user: %24
  %23 = integer_literal $Builtin.Int8, 2, scope 69 // user: %24
  %24 = struct $StaticString (%22 : $Builtin.Word, %21 : $Builtin.Word, %23 : $Builtin.Int8), scope 69 // user: %93
  %25 = alloc_stack $String, scope 69             // users: %80, %78, %66, %56, %49, %38, %31
  %26 = integer_literal $Builtin.Int64, 85, scope 69 // user: %27
  %27 = struct $Int (%26 : $Builtin.Int64), scope 69 // user: %30
  %28 = metatype $@thin String.Type, scope 69     // users: %82, %73, %55, %36, %30
  // function_ref static String._createEmpty(withInitialCapacity:)
  %29 = function_ref @$sSS12_createEmpty19withInitialCapacitySSSi_tFZ : $@convention(method) (Int, @thin String.Type) -> @owned String, scope 69 // user: %30
  %30 = apply %29(%27, %28) : $@convention(method) (Int, @thin String.Type) -> @owned String, scope 69 // user: %31
  store %30 to %25 : $*String, scope 69           // id: %31
  %32 = string_literal utf8 "NSArray element failed to match the Swift Array Element type\nExpected ", scope 69 // user: %36
  %33 = integer_literal $Builtin.Word, 70, scope 69 // user: %36
  %34 = integer_literal $Builtin.Int1, -1, scope 69 // users: %73, %55, %36
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %35 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 69 // users: %73, %55, %36
  %36 = apply %35(%32, %33, %34, %28) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 69 // users: %39, %38
  // function_ref String.append(_:)
  %37 = function_ref @$sSS6appendyySSF : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69 // users: %66, %56, %49, %38
  %38 = apply %37(%36, %25) : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69
  %39 = struct_extract %36 : $String, #String._guts, scope 69 // user: %40
  %40 = struct_extract %39 : $_StringGuts, #_StringGuts._object, scope 69 // user: %41
  %41 = struct_extract %40 : $_StringObject, #_StringObject._object, scope 69 // user: %42
  strong_release %41 : $Builtin.BridgeObject, scope 69 // id: %42
  %43 = metatype $@thick Element.Type, scope 69   // user: %44
  %44 = init_existential_metatype %43 : $@thick Element.Type, $@thick any Any.Type, scope 69 // user: %48
  %45 = integer_literal $Builtin.Int1, 0, scope 69 // user: %46
  %46 = struct $Bool (%45 : $Builtin.Int1), scope 69 // users: %65, %48
  // function_ref _typeName(_:qualified:)
  %47 = function_ref @$ss9_typeName_9qualifiedSSypXp_SbtF : $@convention(thin) (@thick any Any.Type, Bool) -> @owned String, scope 69 // users: %65, %48
  %48 = apply %47(%44, %46) : $@convention(thin) (@thick any Any.Type, Bool) -> @owned String, scope 69 // users: %50, %49
  %49 = apply %37(%48, %25) : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69
  %50 = struct_extract %48 : $String, #String._guts, scope 69 // user: %51
  %51 = struct_extract %50 : $_StringGuts, #_StringGuts._object, scope 69 // user: %52
  %52 = struct_extract %51 : $_StringObject, #_StringObject._object, scope 69 // user: %53
  strong_release %52 : $Builtin.BridgeObject, scope 69 // id: %53
  %54 = string_literal utf8 " but found ", scope 69 // user: %55
  %55 = apply %35(%54, %21, %34, %28) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 69 // users: %57, %56
  %56 = apply %37(%55, %25) : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69
  %57 = struct_extract %55 : $String, #String._guts, scope 69 // user: %58
  %58 = struct_extract %57 : $_StringGuts, #_StringGuts._object, scope 69 // user: %59
  %59 = struct_extract %58 : $_StringObject, #_StringObject._object, scope 69 // user: %60
  strong_release %59 : $Builtin.BridgeObject, scope 69 // id: %60
  %61 = existential_metatype $@thick any AnyObject.Type, %9 : $AnyObject, scope 69 // user: %63
  strong_release %9 : $AnyObject, scope 69        // id: %62
  %63 = open_existential_metatype %61 : $@thick any AnyObject.Type to $@thick (@opened("2DF42224-8BDA-11EE-A51F-86803A041461", AnyObject) Self).Type, scope 69 // user: %64
  %64 = init_existential_metatype %63 : $@thick (@opened("2DF42224-8BDA-11EE-A51F-86803A041461", AnyObject) Self).Type, $@thick any Any.Type, scope 69 // user: %65
  %65 = apply %47(%64, %46) : $@convention(thin) (@thick any Any.Type, Bool) -> @owned String, scope 69 // users: %67, %66
  %66 = apply %37(%65, %25) : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69
  %67 = struct_extract %65 : $String, #String._guts, scope 69 // user: %68
  %68 = struct_extract %67 : $_StringGuts, #_StringGuts._object, scope 69 // user: %69
  %69 = struct_extract %68 : $_StringObject, #_StringObject._object, scope 69 // user: %70
  strong_release %69 : $Builtin.BridgeObject, scope 69 // id: %70
  %71 = string_literal utf8 "", scope 69          // user: %73
  %72 = integer_literal $Builtin.Word, 0, scope 69 // user: %73
  %73 = apply %35(%71, %72, %34, %28) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 69 // user: %74
  %74 = struct_extract %73 : $String, #String._guts, scope 69 // user: %75
  %75 = struct_extract %74 : $_StringGuts, #_StringGuts._object, scope 69 // user: %76
  %76 = struct_extract %75 : $_StringObject, #_StringObject._object, scope 69 // user: %77
  strong_release %76 : $Builtin.BridgeObject, scope 69 // id: %77
  %78 = load %25 : $*String, scope 69             // user: %79
  %79 = struct $DefaultStringInterpolation (%78 : $String), scope 69 // user: %82
  dealloc_stack %25 : $*String, scope 69          // id: %80
  // function_ref String.init(stringInterpolation:)
  %81 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String, scope 69 // user: %82
  %82 = apply %81(%79, %28) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String, scope 69 // user: %93
  %83 = builtin "assert_configuration"() : $Builtin.Int32, scope 69 // user: %85
  %84 = integer_literal $Builtin.Int32, 0, scope 69 // users: %87, %85
  %85 = builtin "cmp_eq_Int32"(%83 : $Builtin.Int32, %84 : $Builtin.Int32) : $Builtin.Int1, scope 69 // user: %86
  cond_br %85, bb4, bb3, scope 69                 // id: %86

bb3:                                              // Preds: bb2
  br bb5(%84 : $Builtin.Int32), scope 69          // id: %87

bb4:                                              // Preds: bb2
  %88 = integer_literal $Builtin.Int32, 1, scope 69 // user: %89
  br bb5(%88 : $Builtin.Int32), scope 69          // id: %89

// %90                                            // user: %91
bb5(%90 : $Builtin.Int32):                        // Preds: bb4 bb3
  %91 = struct $UInt32 (%90 : $Builtin.Int32), scope 69 // user: %93
  // function_ref _assertionFailure(_:_:flags:)
  %92 = function_ref @$ss17_assertionFailure__5flagss5NeverOs12StaticStringV_SSs6UInt32VtF : $@convention(thin) (StaticString, @guaranteed String, UInt32) -> Never, scope 69 // user: %93
  %93 = apply %92(%24, %82, %91) : $@convention(thin) (StaticString, @guaranteed String, UInt32) -> Never, scope 69
  unreachable , scope 69                          // id: %94

bb6:                                              // Preds: bb1
  destroy_addr %14 : $*Element, scope 69          // id: %95
  strong_release %9 : $AnyObject, scope 69        // id: %96
  dealloc_stack %14 : $*Element, scope 69         // id: %97
  dealloc_stack %12 : $*AnyObject, scope 69       // id: %98
  br bb21(%9 : $AnyObject), scope 69              // id: %99

bb7:                                              // Preds: bb0
  // function_ref _ArrayBuffer._native.getter
  %100 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 69 // user: %101
  %101 = apply %100<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 69 // users: %144, %127, %120
  %102 = string_literal utf8 "Index out of range", scope 69 // user: %104
  %103 = integer_literal $Builtin.Word, 18, scope 69 // user: %106
  %104 = builtin "ptrtoint_Word"(%102 : $Builtin.RawPointer) : $Builtin.Word, scope 69 // user: %106
  %105 = integer_literal $Builtin.Int8, 2, scope 69 // users: %264, %185, %110, %106
  %106 = struct $StaticString (%104 : $Builtin.Word, %103 : $Builtin.Word, %105 : $Builtin.Int8), scope 69 // user: %268
  %107 = string_literal utf8 "Swift/arm64e-apple-macos.swiftinterface", scope 69 // user: %109
  %108 = integer_literal $Builtin.Word, 39, scope 69 // user: %110
  %109 = builtin "ptrtoint_Word"(%107 : $Builtin.RawPointer) : $Builtin.Word, scope 69 // user: %110
  %110 = struct $StaticString (%109 : $Builtin.Word, %108 : $Builtin.Word, %105 : $Builtin.Int8), scope 69 // user: %268
  %111 = integer_literal $Builtin.Int64, 6134, scope 69 // user: %112
  %112 = struct $UInt (%111 : $Builtin.Int64), scope 69 // user: %268
  %113 = builtin "assert_configuration"() : $Builtin.Int32, scope 69 // users: %118, %115
  %114 = integer_literal $Builtin.Int32, 0, scope 69 // users: %245, %115
  %115 = builtin "cmp_eq_Int32"(%113 : $Builtin.Int32, %114 : $Builtin.Int32) : $Builtin.Int1, scope 69 // users: %244, %116
  cond_br %115, bb11, bb8, scope 69               // id: %116

bb8:                                              // Preds: bb7
  %117 = integer_literal $Builtin.Int32, 1, scope 69 // user: %118
  %118 = builtin "cmp_eq_Int32"(%113 : $Builtin.Int32, %117 : $Builtin.Int32) : $Builtin.Int1, scope 69 // user: %119
  cond_br %118, bb10, bb9, scope 69               // id: %119

bb9:                                              // Preds: bb8
  %120 = struct_extract %101 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 69 // user: %121
  strong_release %120 : $__ContiguousArrayStorageBase, scope 69 // id: %121
  br bb15, scope 69                               // id: %122

bb10:                                             // Preds: bb8
  %123 = integer_literal $Builtin.Int64, 0, scope 69 // user: %125
  %124 = struct_extract %0 : $Int, #Int._value, scope 69 // users: %135, %125
  %125 = builtin "cmp_slt_Int64"(%124 : $Builtin.Int64, %123 : $Builtin.Int64) : $Builtin.Int1, scope 69 // user: %126
  cond_fail %125 : $Builtin.Int1, "Index out of range", scope 69 // id: %126
  %127 = struct_extract %101 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 69 // users: %133, %128
  %128 = ref_element_addr [immutable] %127 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 69 // user: %129
  %129 = struct_element_addr %128 : $*_ArrayBody, #_ArrayBody._storage, scope 69 // user: %130
  %130 = struct_element_addr %129 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 69 // user: %131
  %131 = struct_element_addr %130 : $*Int, #Int._value, scope 69 // user: %132
  %132 = load %131 : $*Builtin.Int64, scope 69    // user: %134
  strong_release %127 : $__ContiguousArrayStorageBase, scope 69 // id: %133
  %134 = builtin "assumeNonNegative_Int64"(%132 : $Builtin.Int64) : $Builtin.Int64, scope 69 // user: %135
  %135 = builtin "cmp_slt_Int64"(%124 : $Builtin.Int64, %134 : $Builtin.Int64) : $Builtin.Int1, scope 69 // user: %137
  %136 = integer_literal $Builtin.Int1, -1, scope 69 // user: %137
  %137 = builtin "xor_Int1"(%135 : $Builtin.Int1, %136 : $Builtin.Int1) : $Builtin.Int1, scope 69 // user: %138
  cond_fail %137 : $Builtin.Int1, "Index out of range", scope 69 // id: %138
  br bb15, scope 69                               // id: %139

bb11:                                             // Preds: bb7
  %140 = integer_literal $Builtin.Int64, 0, scope 69 // user: %142
  %141 = struct_extract %0 : $Int, #Int._value, scope 69 // users: %151, %142
  %142 = builtin "cmp_slt_Int64"(%141 : $Builtin.Int64, %140 : $Builtin.Int64) : $Builtin.Int1, scope 69 // user: %143
  cond_br %142, bb22, bb12, scope 69              // id: %143

bb12:                                             // Preds: bb11
  %144 = struct_extract %101 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 69 // users: %156, %145
  %145 = ref_element_addr [immutable] %144 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 69 // user: %146
  %146 = struct_element_addr %145 : $*_ArrayBody, #_ArrayBody._storage, scope 69 // user: %147
  %147 = struct_element_addr %146 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 69 // user: %148
  %148 = struct_element_addr %147 : $*Int, #Int._value, scope 69 // user: %149
  %149 = load %148 : $*Builtin.Int64, scope 69    // user: %150
  %150 = builtin "assumeNonNegative_Int64"(%149 : $Builtin.Int64) : $Builtin.Int64, scope 69 // user: %151
  %151 = builtin "cmp_slt_Int64"(%141 : $Builtin.Int64, %150 : $Builtin.Int64) : $Builtin.Int1, scope 69 // user: %153
  %152 = integer_literal $Builtin.Int1, -1, scope 69 // user: %153
  %153 = builtin "int_expect_Int1"(%151 : $Builtin.Int1, %152 : $Builtin.Int1) : $Builtin.Int1, scope 69 // user: %154
  cond_br %153, bb14, bb13, scope 69              // id: %154

bb13:                                             // Preds: bb12
  br bb23, scope 69                               // id: %155

bb14:                                             // Preds: bb12
  strong_release %144 : $__ContiguousArrayStorageBase, scope 69 // id: %156
  br bb15, scope 69                               // id: %157

bb15:                                             // Preds: bb14 bb10 bb9
  %158 = metatype $@thick (any AnyObject).Type, scope 69 // user: %160
  // function_ref _ArrayBuffer.cast<A>(toBufferOf:)
  %159 = function_ref @$ss12_ArrayBufferV4cast02toB2OfAByqd__Gqd__m_tlF : $@convention(method) <τ_0_0><τ_1_0> (@thick τ_1_0.Type, @owned _ArrayBuffer<τ_0_0>) -> @owned _ArrayBuffer<τ_1_0>, scope 69 // user: %160
  %160 = apply %159<Element, AnyObject>(%158, %1) : $@convention(method) <τ_0_0><τ_1_0> (@thick τ_1_0.Type, @owned _ArrayBuffer<τ_0_0>) -> @owned _ArrayBuffer<τ_1_0>, scope 69 // user: %161
  %161 = struct_extract %160 : $_ArrayBuffer<AnyObject>, #_ArrayBuffer._storage, scope 69 // user: %162
  %162 = struct_extract %161 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 69 // users: %173, %163
  %163 = bridge_object_to_ref %162 : $Builtin.BridgeObject to $__ContiguousArrayStorageBase, scope 69 // user: %164
  %164 = ref_tail_addr [immutable] %163 : $__ContiguousArrayStorageBase, $AnyObject, scope 69 // user: %167
  %165 = struct_extract %0 : $Int, #Int._value, scope 69 // user: %166
  %166 = builtin "truncOrBitCast_Int64_Word"(%165 : $Builtin.Int64) : $Builtin.Word, scope 69 // user: %167
  %167 = index_addr [stack_protection] %164 : $*AnyObject, %166 : $Builtin.Word, scope 69 // user: %168
  %168 = load %167 : $*AnyObject, scope 69        // users: %257, %254, %223, %222, %178, %177, %175, %172
  %169 = struct_extract %1 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 69 // user: %170
  %170 = struct_extract %169 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 69 // user: %171
  strong_retain %170 : $Builtin.BridgeObject, scope 69 // id: %171
  strong_retain %168 : $AnyObject, scope 69       // id: %172
  strong_release %162 : $Builtin.BridgeObject, scope 69 // id: %173
  %174 = alloc_stack $AnyObject, scope 69         // users: %256, %181, %179, %175
  store %168 to %174 : $*AnyObject, scope 69      // id: %175
  %176 = alloc_stack $Element, scope 69           // users: %255, %253, %180, %179
  strong_retain %168 : $AnyObject, scope 69       // id: %177
  strong_retain %168 : $AnyObject, scope 69       // id: %178
  checked_cast_addr_br take_always AnyObject in %174 : $*AnyObject to Element in %176 : $*Element, bb20, bb16, scope 69 // id: %179

bb16:                                             // Preds: bb15
  dealloc_stack %176 : $*Element, scope 69        // id: %180
  dealloc_stack %174 : $*AnyObject, scope 69      // id: %181
  %182 = string_literal utf8 "Fatal error", scope 69 // user: %184
  %183 = integer_literal $Builtin.Word, 11, scope 69 // users: %216, %185
  %184 = builtin "ptrtoint_Word"(%182 : $Builtin.RawPointer) : $Builtin.Word, scope 69 // user: %185
  %185 = struct $StaticString (%184 : $Builtin.Word, %183 : $Builtin.Word, %105 : $Builtin.Int8), scope 69 // user: %251
  %186 = alloc_stack $String, scope 69            // users: %241, %239, %227, %217, %210, %199, %192
  %187 = integer_literal $Builtin.Int64, 82, scope 69 // user: %188
  %188 = struct $Int (%187 : $Builtin.Int64), scope 69 // user: %191
  %189 = metatype $@thin String.Type, scope 69    // users: %243, %234, %216, %197, %191
  // function_ref static String._createEmpty(withInitialCapacity:)
  %190 = function_ref @$sSS12_createEmpty19withInitialCapacitySSSi_tFZ : $@convention(method) (Int, @thin String.Type) -> @owned String, scope 69 // user: %191
  %191 = apply %190(%188, %189) : $@convention(method) (Int, @thin String.Type) -> @owned String, scope 69 // user: %192
  store %191 to %186 : $*String, scope 69         // id: %192
  %193 = string_literal utf8 "Down-casted Array element failed to match the target type\nExpected ", scope 69 // user: %197
  %194 = integer_literal $Builtin.Word, 67, scope 69 // user: %197
  %195 = integer_literal $Builtin.Int1, -1, scope 69 // users: %234, %216, %197
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %196 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 69 // users: %234, %216, %197
  %197 = apply %196(%193, %194, %195, %189) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 69 // users: %200, %199
  // function_ref String.append(_:)
  %198 = function_ref @$sSS6appendyySSF : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69 // users: %227, %217, %210, %199
  %199 = apply %198(%197, %186) : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69
  %200 = struct_extract %197 : $String, #String._guts, scope 69 // user: %201
  %201 = struct_extract %200 : $_StringGuts, #_StringGuts._object, scope 69 // user: %202
  %202 = struct_extract %201 : $_StringObject, #_StringObject._object, scope 69 // user: %203
  strong_release %202 : $Builtin.BridgeObject, scope 69 // id: %203
  %204 = metatype $@thick Element.Type, scope 69  // user: %205
  %205 = init_existential_metatype %204 : $@thick Element.Type, $@thick any Any.Type, scope 69 // user: %209
  %206 = integer_literal $Builtin.Int1, 0, scope 69 // user: %207
  %207 = struct $Bool (%206 : $Builtin.Int1), scope 69 // users: %226, %209
  // function_ref _typeName(_:qualified:)
  %208 = function_ref @$ss9_typeName_9qualifiedSSypXp_SbtF : $@convention(thin) (@thick any Any.Type, Bool) -> @owned String, scope 69 // users: %226, %209
  %209 = apply %208(%205, %207) : $@convention(thin) (@thick any Any.Type, Bool) -> @owned String, scope 69 // users: %211, %210
  %210 = apply %198(%209, %186) : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69
  %211 = struct_extract %209 : $String, #String._guts, scope 69 // user: %212
  %212 = struct_extract %211 : $_StringGuts, #_StringGuts._object, scope 69 // user: %213
  %213 = struct_extract %212 : $_StringObject, #_StringObject._object, scope 69 // user: %214
  strong_release %213 : $Builtin.BridgeObject, scope 69 // id: %214
  %215 = string_literal utf8 " but found ", scope 69 // user: %216
  %216 = apply %196(%215, %183, %195, %189) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 69 // users: %218, %217
  %217 = apply %198(%216, %186) : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69
  %218 = struct_extract %216 : $String, #String._guts, scope 69 // user: %219
  %219 = struct_extract %218 : $_StringGuts, #_StringGuts._object, scope 69 // user: %220
  %220 = struct_extract %219 : $_StringObject, #_StringObject._object, scope 69 // user: %221
  strong_release %220 : $Builtin.BridgeObject, scope 69 // id: %221
  %222 = existential_metatype $@thick any AnyObject.Type, %168 : $AnyObject, scope 69 // user: %224
  strong_release %168 : $AnyObject, scope 69      // id: %223
  %224 = open_existential_metatype %222 : $@thick any AnyObject.Type to $@thick (@opened("2DF42864-8BDA-11EE-A51F-86803A041461", AnyObject) Self).Type, scope 69 // user: %225
  %225 = init_existential_metatype %224 : $@thick (@opened("2DF42864-8BDA-11EE-A51F-86803A041461", AnyObject) Self).Type, $@thick any Any.Type, scope 69 // user: %226
  %226 = apply %208(%225, %207) : $@convention(thin) (@thick any Any.Type, Bool) -> @owned String, scope 69 // users: %228, %227
  %227 = apply %198(%226, %186) : $@convention(method) (@guaranteed String, @inout String) -> (), scope 69
  %228 = struct_extract %226 : $String, #String._guts, scope 69 // user: %229
  %229 = struct_extract %228 : $_StringGuts, #_StringGuts._object, scope 69 // user: %230
  %230 = struct_extract %229 : $_StringObject, #_StringObject._object, scope 69 // user: %231
  strong_release %230 : $Builtin.BridgeObject, scope 69 // id: %231
  %232 = string_literal utf8 "", scope 69         // user: %234
  %233 = integer_literal $Builtin.Word, 0, scope 69 // user: %234
  %234 = apply %196(%232, %233, %195, %189) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 69 // user: %235
  %235 = struct_extract %234 : $String, #String._guts, scope 69 // user: %236
  %236 = struct_extract %235 : $_StringGuts, #_StringGuts._object, scope 69 // user: %237
  %237 = struct_extract %236 : $_StringObject, #_StringObject._object, scope 69 // user: %238
  strong_release %237 : $Builtin.BridgeObject, scope 69 // id: %238
  %239 = load %186 : $*String, scope 69           // user: %240
  %240 = struct $DefaultStringInterpolation (%239 : $String), scope 69 // user: %243
  dealloc_stack %186 : $*String, scope 69         // id: %241
  // function_ref String.init(stringInterpolation:)
  %242 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String, scope 69 // user: %243
  %243 = apply %242(%240, %189) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String, scope 69 // user: %251
  cond_br %115, bb18, bb17, scope 69              // id: %244

bb17:                                             // Preds: bb16
  br bb19(%114 : $Builtin.Int32), scope 69        // id: %245

bb18:                                             // Preds: bb16
  %246 = integer_literal $Builtin.Int32, 1, scope 69 // user: %247
  br bb19(%246 : $Builtin.Int32), scope 69        // id: %247

// %248                                           // user: %249
bb19(%248 : $Builtin.Int32):                      // Preds: bb18 bb17
  %249 = struct $UInt32 (%248 : $Builtin.Int32), scope 69 // user: %251
  // function_ref _assertionFailure(_:_:flags:)
  %250 = function_ref @$ss17_assertionFailure__5flagss5NeverOs12StaticStringV_SSs6UInt32VtF : $@convention(thin) (StaticString, @guaranteed String, UInt32) -> Never, scope 69 // user: %251
  %251 = apply %250(%185, %243, %249) : $@convention(thin) (StaticString, @guaranteed String, UInt32) -> Never, scope 69
  unreachable , scope 69                          // id: %252

bb20:                                             // Preds: bb15
  destroy_addr %176 : $*Element, scope 69         // id: %253
  strong_release %168 : $AnyObject, scope 69      // id: %254
  dealloc_stack %176 : $*Element, scope 69        // id: %255
  dealloc_stack %174 : $*AnyObject, scope 69      // id: %256
  br bb21(%168 : $AnyObject), scope 69            // id: %257

// %258                                           // user: %259
bb21(%258 : $AnyObject):                          // Preds: bb20 bb6
  return %258 : $AnyObject, scope 69              // id: %259

bb22:                                             // Preds: bb11
  br bb23, scope 69                               // id: %260

bb23:                                             // Preds: bb22 bb13
  %261 = string_literal utf8 "Fatal error", scope 69 // user: %263
  %262 = integer_literal $Builtin.Word, 11, scope 69 // user: %264
  %263 = builtin "ptrtoint_Word"(%261 : $Builtin.RawPointer) : $Builtin.Word, scope 69 // user: %264
  %264 = struct $StaticString (%263 : $Builtin.Word, %262 : $Builtin.Word, %105 : $Builtin.Int8), scope 69 // user: %268
  %265 = integer_literal $Builtin.Int32, 1, scope 69 // user: %266
  %266 = struct $UInt32 (%265 : $Builtin.Int32), scope 69 // user: %268
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %267 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 69 // user: %268
  %268 = apply %267(%264, %106, %110, %112, %266) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 69
  unreachable , scope 69                          // id: %269
} // end sil function '$ss12_ArrayBufferV19_getElementSlowPathyyXlSiF'

sil_scope 70 {  parent @$ss15ContiguousArrayV12_endMutationyyF : $@convention(method) <τ_0_0> (@inout ContiguousArray<τ_0_0>) -> () }

// ContiguousArray._endMutation(), scope 70
sil shared [serialized] [_semantics "array.end_mutation"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss15ContiguousArrayV12_endMutationyyF : $@convention(method) <Element> (@inout ContiguousArray<Element>) -> () {
[%0: escape v** -> %0.s0.s0.v**, escape v**.c*.v** -> %0.s0.s0.v**.c*.v**, read s0.s0.v**, write v**]
[global: ]
// %0                                             // users: %7, %1
bb0(%0 : $*ContiguousArray<Element>):
  %1 = struct_element_addr %0 : $*ContiguousArray<Element>, #ContiguousArray._buffer, scope 70 // user: %2
  %2 = struct_element_addr %1 : $*_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 70 // user: %3
  %3 = load %2 : $*__ContiguousArrayStorageBase, scope 70 // user: %4
  %4 = end_cow_mutation %3 : $__ContiguousArrayStorageBase, scope 70 // user: %5
  %5 = struct $_ContiguousArrayBuffer<Element> (%4 : $__ContiguousArrayStorageBase), scope 70 // user: %6
  %6 = struct $ContiguousArray<Element> (%5 : $_ContiguousArrayBuffer<Element>), scope 70 // user: %7
  store %6 to %0 : $*ContiguousArray<Element>, scope 70 // id: %7
  %8 = tuple (), scope 70                         // user: %9
  return %8 : $(), scope 70                       // id: %9
} // end sil function '$ss15ContiguousArrayV12_endMutationyyF'

sil_scope 71 {  parent @$ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout ContiguousArray<τ_0_0>) -> () }

// ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:), scope 71
sil shared [serialized] [noinline] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF : $@convention(method) <Element> (Bool, Int, Bool, @inout ContiguousArray<Element>) -> () {
[%3: noescape v**, read s0.v**, write v**, copy v**, destroy v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // user: %7
// %1                                             // user: %7
// %2                                             // user: %7
// %3                                             // users: %9, %4
bb0(%0 : $Bool, %1 : $Int, %2 : $Bool, %3 : $*ContiguousArray<Element>):
  %4 = struct_element_addr %3 : $*ContiguousArray<Element>, #ContiguousArray._buffer, scope 71 // user: %5
  %5 = load %4 : $*_ContiguousArrayBuffer<Element>, scope 71 // user: %7
  // function_ref _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)
  %6 = function_ref @$ss22_ContiguousArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @owned _ContiguousArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 71 // user: %7
  %7 = apply %6<Element>(%0, %1, %2, %5) : $@convention(method) <τ_0_0> (Bool, Int, Bool, @owned _ContiguousArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 71 // user: %8
  %8 = struct $ContiguousArray<Element> (%7 : $_ContiguousArrayBuffer<Element>), scope 71 // user: %9
  store %8 to %3 : $*ContiguousArray<Element>, scope 71 // id: %9
  %10 = tuple (), scope 71                        // user: %11
  return %10 : $(), scope 71                      // id: %11
} // end sil function '$ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF'

sil_scope 72 {  parent @$ss15ContiguousArrayV034_makeUniqueAndReserveCapacityIfNotD0yyF : $@convention(method) <τ_0_0> (@inout ContiguousArray<τ_0_0>) -> () }

// ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique(), scope 72
sil public_external [serialized] [_semantics "array.make_mutable"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss15ContiguousArrayV034_makeUniqueAndReserveCapacityIfNotD0yyF : $@convention(method) <Element> (@inout ContiguousArray<Element>) -> () {
[%0: escape v** -> %0.s0.s0.v**]
// %0                                             // users: %20, %10, %1
bb0(%0 : $*ContiguousArray<Element>):
  %1 = struct_element_addr %0 : $*ContiguousArray<Element>, #ContiguousArray._buffer, scope 72 // user: %3
  // function_ref _ContiguousArrayBuffer.beginCOWMutation()
  %2 = function_ref @$ss22_ContiguousArrayBufferV16beginCOWMutationSbyF : $@convention(method) <τ_0_0> (@inout _ContiguousArrayBuffer<τ_0_0>) -> Bool, scope 72 // user: %3
  %3 = apply %2<Element>(%1) : $@convention(method) <τ_0_0> (@inout _ContiguousArrayBuffer<τ_0_0>) -> Bool, scope 72 // user: %4
  %4 = struct_extract %3 : $Bool, #Bool._value, scope 72 // user: %6
  %5 = integer_literal $Builtin.Int1, -1, scope 72 // users: %18, %6
  %6 = builtin "int_expect_Int1"(%4 : $Builtin.Int1, %5 : $Builtin.Int1) : $Builtin.Int1, scope 72 // user: %7
  cond_br %6, bb2, bb1, scope 72                  // id: %7

bb1:                                              // Preds: bb0
  %8 = integer_literal $Builtin.Int1, 0, scope 72 // users: %15, %9
  %9 = struct $Bool (%8 : $Builtin.Int1), scope 72 // user: %20
  %10 = load %0 : $*ContiguousArray<Element>, scope 72 // user: %12
  // function_ref ContiguousArray.count.getter
  %11 = function_ref @$ss15ContiguousArrayV5countSivg : $@convention(method) <τ_0_0> (@guaranteed ContiguousArray<τ_0_0>) -> Int, scope 72 // user: %12
  %12 = apply %11<Element>(%10) : $@convention(method) <τ_0_0> (@guaranteed ContiguousArray<τ_0_0>) -> Int, scope 72 // user: %14
  %13 = integer_literal $Builtin.Int64, 1, scope 72 // user: %15
  %14 = struct_extract %12 : $Int, #Int._value, scope 72 // user: %15
  %15 = builtin "sadd_with_overflow_Int64"(%14 : $Builtin.Int64, %13 : $Builtin.Int64, %8 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 72 // user: %16
  %16 = tuple_extract %15 : $(Builtin.Int64, Builtin.Int1), 0, scope 72 // user: %17
  %17 = struct $Int (%16 : $Builtin.Int64), scope 72 // user: %20
  %18 = struct $Bool (%5 : $Builtin.Int1), scope 72 // user: %20
  // function_ref ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)
  %19 = function_ref @$ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout ContiguousArray<τ_0_0>) -> (), scope 72 // user: %20
  %20 = apply %19<Element>(%9, %17, %18, %0) : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout ContiguousArray<τ_0_0>) -> (), scope 72
  br bb3, scope 72                                // id: %21

bb2:                                              // Preds: bb0
  br bb3, scope 72                                // id: %22

bb3:                                              // Preds: bb2 bb1
  %23 = tuple (), scope 72                        // user: %24
  return %23 : $(), scope 72                      // id: %24
} // end sil function '$ss15ContiguousArrayV034_makeUniqueAndReserveCapacityIfNotD0yyF'

sil_scope 73 {  parent @$ss15ContiguousArrayV37_appendElementAssumeUniqueAndCapacity_03newD0ySi_xntF : $@convention(method) <τ_0_0> (Int, @in τ_0_0, @inout ContiguousArray<τ_0_0>) -> () }

// ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:), scope 73
sil public_external [serialized] [_semantics "array.mutate_unknown"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss15ContiguousArrayV37_appendElementAssumeUniqueAndCapacity_03newD0ySi_xntF : $@convention(method) <Element> (Int, @in Element, @inout ContiguousArray<Element>) -> () {
[%2: noescape v**, noescape v**.c*.v**]
// %0                                             // user: %7
// %1                                             // users: %27, %26
// %2                                             // user: %3
bb0(%0 : $Int, %1 : $*Element, %2 : $*ContiguousArray<Element>):
  %3 = struct_element_addr %2 : $*ContiguousArray<Element>, #ContiguousArray._buffer, scope 73 // user: %4
  %4 = struct_element_addr %3 : $*_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 73 // user: %5
  %5 = load %4 : $*__ContiguousArrayStorageBase, scope 73 // users: %16, %12
  %6 = integer_literal $Builtin.Int64, 1, scope 73 // user: %9
  %7 = struct_extract %0 : $Int, #Int._value, scope 73 // users: %20, %9
  %8 = integer_literal $Builtin.Int1, 0, scope 73 // user: %9
  %9 = builtin "sadd_with_overflow_Int64"(%7 : $Builtin.Int64, %6 : $Builtin.Int64, %8 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 73 // user: %10
  %10 = tuple_extract %9 : $(Builtin.Int64, Builtin.Int1), 0, scope 73 // user: %11
  %11 = struct $Int (%10 : $Builtin.Int64), scope 73 // user: %15
  %12 = ref_element_addr %5 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 73 // user: %13
  %13 = struct_element_addr %12 : $*_ArrayBody, #_ArrayBody._storage, scope 73 // user: %14
  %14 = struct_element_addr %13 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 73 // user: %15
  store %11 to %14 : $*Int, scope 73              // id: %15
  %16 = struct $_ContiguousArrayBuffer<Element> (%5 : $__ContiguousArrayStorageBase), scope 73 // user: %18
  // function_ref _ContiguousArrayBuffer.mutableFirstElementAddress.getter
  %17 = function_ref @$ss22_ContiguousArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 73 // user: %18
  %18 = apply %17<Element>(%16) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 73 // user: %19
  %19 = struct_extract %18 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 73 // user: %21
  %20 = builtin "truncOrBitCast_Int64_Word"(%7 : $Builtin.Int64) : $Builtin.Word, scope 73 // user: %22
  %21 = pointer_to_address %19 : $Builtin.RawPointer to [strict] $*Element, scope 73 // user: %22
  %22 = index_addr [stack_protection] %21 : $*Element, %20 : $Builtin.Word, scope 73 // user: %23
  %23 = address_to_pointer [stack_protection] %22 : $*Element to $Builtin.RawPointer, scope 73 // user: %24
  %24 = struct $UnsafeMutablePointer<Element> (%23 : $Builtin.RawPointer), scope 73 // user: %26
  // function_ref UnsafeMutablePointer.initialize(to:)
  %25 = function_ref @$sSp10initialize2toyx_tF : $@convention(method) <τ_0_0> (@in_guaranteed τ_0_0, UnsafeMutablePointer<τ_0_0>) -> (), scope 73 // user: %26
  %26 = apply %25<Element>(%1, %24) : $@convention(method) <τ_0_0> (@in_guaranteed τ_0_0, UnsafeMutablePointer<τ_0_0>) -> (), scope 73
  destroy_addr %1 : $*Element, scope 73           // id: %27
  %28 = tuple (), scope 73                        // user: %29
  return %28 : $(), scope 73                      // id: %29
} // end sil function '$ss15ContiguousArrayV37_appendElementAssumeUniqueAndCapacity_03newD0ySi_xntF'

sil_scope 74 {  parent @$ss15ContiguousArrayV20_reserveCapacityImpl07minimumD013growForAppendySi_SbtF : $@convention(method) <τ_0_0> (Int, Bool, @inout ContiguousArray<τ_0_0>) -> () }

// ContiguousArray._reserveCapacityImpl(minimumCapacity:growForAppend:), scope 74
sil shared [serialized] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss15ContiguousArrayV20_reserveCapacityImpl07minimumD013growForAppendySi_SbtF : $@convention(method) <Element> (Int, Bool, @inout ContiguousArray<Element>) -> () {
[%2: escape v** -> %2.s0.s0.v**, read s0.v**, write v**, copy v**, destroy v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %33, %28, %18
// %1                                             // user: %36
// %2                                             // users: %36, %3
bb0(%0 : $Int, %1 : $Bool, %2 : $*ContiguousArray<Element>):
  %3 = struct_element_addr %2 : $*ContiguousArray<Element>, #ContiguousArray._buffer, scope 74 // users: %25, %9, %5
  // function_ref _ContiguousArrayBuffer.beginCOWMutation()
  %4 = function_ref @$ss22_ContiguousArrayBufferV16beginCOWMutationSbyF : $@convention(method) <τ_0_0> (@inout _ContiguousArrayBuffer<τ_0_0>) -> Bool, scope 74 // user: %5
  %5 = apply %4<Element>(%3) : $@convention(method) <τ_0_0> (@inout _ContiguousArrayBuffer<τ_0_0>) -> Bool, scope 74 // users: %36, %6
  %6 = struct_extract %5 : $Bool, #Bool._value, scope 74 // user: %7
  cond_br %6, bb2, bb1, scope 74                  // id: %7

bb1:                                              // Preds: bb0
  br bb5, scope 74                                // id: %8

bb2:                                              // Preds: bb0
  %9 = struct_element_addr %3 : $*_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 74 // user: %10
  %10 = load %9 : $*__ContiguousArrayStorageBase, scope 74 // user: %11
  %11 = ref_element_addr %10 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 74 // user: %12
  %12 = struct_element_addr %11 : $*_ArrayBody, #_ArrayBody._storage, scope 74 // user: %13
  %13 = struct_element_addr %12 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage._capacityAndFlags, scope 74 // user: %14
  %14 = struct_element_addr %13 : $*UInt, #UInt._value, scope 74 // user: %15
  %15 = load %14 : $*Builtin.Int64, scope 74      // user: %17
  %16 = integer_literal $Builtin.Int64, 1, scope 74 // user: %17
  %17 = builtin "lshr_Int64"(%15 : $Builtin.Int64, %16 : $Builtin.Int64) : $Builtin.Int64, scope 74 // user: %19
  %18 = struct_extract %0 : $Int, #Int._value, scope 74 // user: %19
  %19 = builtin "cmp_slt_Int64"(%17 : $Builtin.Int64, %18 : $Builtin.Int64) : $Builtin.Int1, scope 74 // user: %21
  %20 = integer_literal $Builtin.Int1, 0, scope 74 // user: %21
  %21 = builtin "int_expect_Int1"(%19 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 74 // user: %22
  cond_br %21, bb4, bb3, scope 74                 // id: %22

bb3:                                              // Preds: bb2
  br bb9, scope 74                                // id: %23

bb4:                                              // Preds: bb2
  br bb5, scope 74                                // id: %24

bb5:                                              // Preds: bb4 bb1
  %25 = load %3 : $*_ContiguousArrayBuffer<Element>, scope 74 // user: %27
  // function_ref _ContiguousArrayBuffer.count.getter
  %26 = function_ref @$ss22_ContiguousArrayBufferV5countSivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 74 // user: %27
  %27 = apply %26<Element>(%25) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 74 // users: %32, %29
  %28 = struct_extract %0 : $Int, #Int._value, scope 74 // user: %30
  %29 = struct_extract %27 : $Int, #Int._value, scope 74 // user: %30
  %30 = builtin "cmp_slt_Int64"(%29 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 74 // user: %31
  cond_br %30, bb7, bb6, scope 74                 // id: %31

bb6:                                              // Preds: bb5
  br bb8(%27 : $Int), scope 74                    // id: %32

bb7:                                              // Preds: bb5
  br bb8(%0 : $Int), scope 74                     // id: %33

// %34                                            // user: %36
bb8(%34 : $Int):                                  // Preds: bb7 bb6
  // function_ref ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)
  %35 = function_ref @$ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout ContiguousArray<τ_0_0>) -> (), scope 74 // user: %36
  %36 = apply %35<Element>(%5, %34, %1, %2) : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout ContiguousArray<τ_0_0>) -> (), scope 74
  br bb9, scope 74                                // id: %37

bb9:                                              // Preds: bb8 bb3
  %38 = tuple (), scope 74                        // user: %39
  return %38 : $(), scope 74                      // id: %39
} // end sil function '$ss15ContiguousArrayV20_reserveCapacityImpl07minimumD013growForAppendySi_SbtF'

sil_scope 75 {  parent @$ss15ContiguousArrayV36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tF : $@convention(method) <τ_0_0> (Int, @inout ContiguousArray<τ_0_0>) -> () }

// ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:), scope 75
sil public_external [serialized] [_semantics "array.mutate_unknown"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss15ContiguousArrayV36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tF : $@convention(method) <Element> (Int, @inout ContiguousArray<Element>) -> () {
[%1: noescape v**]
// %0                                             // user: %12
// %1                                             // users: %27, %2
bb0(%0 : $Int, %1 : $*ContiguousArray<Element>):
  %2 = struct_element_addr %1 : $*ContiguousArray<Element>, #ContiguousArray._buffer, scope 75 // user: %3
  %3 = struct_element_addr %2 : $*_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 75 // user: %4
  %4 = load %3 : $*__ContiguousArrayStorageBase, scope 75 // user: %5
  %5 = ref_element_addr %4 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 75 // user: %6
  %6 = struct_element_addr %5 : $*_ArrayBody, #_ArrayBody._storage, scope 75 // user: %7
  %7 = struct_element_addr %6 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage._capacityAndFlags, scope 75 // user: %8
  %8 = struct_element_addr %7 : $*UInt, #UInt._value, scope 75 // user: %9
  %9 = load %8 : $*Builtin.Int64, scope 75        // user: %11
  %10 = integer_literal $Builtin.Int64, 1, scope 75 // users: %14, %11
  %11 = builtin "lshr_Int64"(%9 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int64, scope 75 // users: %21, %16
  %12 = struct_extract %0 : $Int, #Int._value, scope 75 // user: %14
  %13 = integer_literal $Builtin.Int1, 0, scope 75 // users: %17, %14
  %14 = builtin "sadd_with_overflow_Int64"(%12 : $Builtin.Int64, %10 : $Builtin.Int64, %13 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 75 // user: %15
  %15 = tuple_extract %14 : $(Builtin.Int64, Builtin.Int1), 0, scope 75 // users: %23, %16
  %16 = builtin "cmp_slt_Int64"(%11 : $Builtin.Int64, %15 : $Builtin.Int64) : $Builtin.Int1, scope 75 // user: %17
  %17 = builtin "int_expect_Int1"(%16 : $Builtin.Int1, %13 : $Builtin.Int1) : $Builtin.Int1, scope 75 // user: %18
  cond_br %17, bb2, bb1, scope 75                 // id: %18

bb1:                                              // Preds: bb0
  br bb3, scope 75                                // id: %19

bb2:                                              // Preds: bb0
  %20 = integer_literal $Builtin.Int64, 0, scope 75 // user: %21
  %21 = builtin "cmp_slt_Int64"(%20 : $Builtin.Int64, %11 : $Builtin.Int64) : $Builtin.Int1, scope 75 // user: %22
  %22 = struct $Bool (%21 : $Builtin.Int1), scope 75 // user: %27
  %23 = struct $Int (%15 : $Builtin.Int64), scope 75 // user: %27
  %24 = integer_literal $Builtin.Int1, -1, scope 75 // user: %25
  %25 = struct $Bool (%24 : $Builtin.Int1), scope 75 // user: %27
  // function_ref ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)
  %26 = function_ref @$ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout ContiguousArray<τ_0_0>) -> (), scope 75 // user: %27
  %27 = apply %26<Element>(%22, %23, %25, %1) : $@convention(method) <τ_0_0> (Bool, Int, Bool, @inout ContiguousArray<τ_0_0>) -> (), scope 75
  br bb3, scope 75                                // id: %28

bb3:                                              // Preds: bb2 bb1
  %29 = tuple (), scope 75                        // user: %30
  return %29 : $(), scope 75                      // id: %30
} // end sil function '$ss15ContiguousArrayV36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tF'

sil_scope 76 {  parent @$ss15ContiguousArrayV15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout ContiguousArray<τ_0_0>) -> () }

// ContiguousArray.reserveCapacity(_:), scope 76
sil public_external [serialized] [_semantics "array.mutate_unknown"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss15ContiguousArrayV15reserveCapacityyySiF : $@convention(method) <Element> (Int, @inout ContiguousArray<Element>) -> () {
[%1: escape v** -> %1.s0.s0.v**]
// %0                                             // user: %5
// %1                                             // users: %7, %5
bb0(%0 : $Int, %1 : $*ContiguousArray<Element>):
  %2 = integer_literal $Builtin.Int1, 0, scope 76 // user: %3
  %3 = struct $Bool (%2 : $Builtin.Int1), scope 76 // user: %5
  // function_ref ContiguousArray._reserveCapacityImpl(minimumCapacity:growForAppend:)
  %4 = function_ref @$ss15ContiguousArrayV20_reserveCapacityImpl07minimumD013growForAppendySi_SbtF : $@convention(method) <τ_0_0> (Int, Bool, @inout ContiguousArray<τ_0_0>) -> (), scope 76 // user: %5
  %5 = apply %4<Element>(%0, %3, %1) : $@convention(method) <τ_0_0> (Int, Bool, @inout ContiguousArray<τ_0_0>) -> (), scope 76
  // function_ref ContiguousArray._endMutation()
  %6 = function_ref @$ss15ContiguousArrayV12_endMutationyyF : $@convention(method) <τ_0_0> (@inout ContiguousArray<τ_0_0>) -> (), scope 76 // user: %7
  %7 = apply %6<Element>(%1) : $@convention(method) <τ_0_0> (@inout ContiguousArray<τ_0_0>) -> (), scope 76
  %8 = tuple (), scope 76                         // user: %9
  return %8 : $(), scope 76                       // id: %9
} // end sil function '$ss15ContiguousArrayV15reserveCapacityyySiF'

sil_scope 77 {  parent @$ss22_ContiguousArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF : $@convention(method) <τ_0_0> (Bool, Int, Bool, @owned _ContiguousArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0> }

// _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:), scope 77
sil shared [serialized] [noinline] [_semantics "optimize.sil.specialize.owned2guarantee.never"] [_specialize exported: true, kind: full, available: 14.0, where  @_noMetadata Element : _Class] @$ss22_ContiguousArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF : $@convention(method) <Element> (Bool, Int, Bool, @owned _ContiguousArrayBuffer<Element>) -> @owned _ContiguousArrayBuffer<Element> {
[%3: noescape v**, read v**.c*.v**, write v**.c*.v**, copy **, destroy v**.c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // user: %31
// %1                                             // users: %24, %10, %8
// %2                                             // user: %6
// %3                                             // users: %93, %87, %82, %68, %66, %27, %5
bb0(%0 : $Bool, %1 : $Int, %2 : $Bool, %3 : $_ContiguousArrayBuffer<Element>):
  // function_ref _ContiguousArrayBuffer.capacity.getter
  %4 = function_ref @$ss22_ContiguousArrayBufferV8capacitySivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 77 // user: %5
  %5 = apply %4<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 77 // users: %13, %9
  %6 = struct_extract %2 : $Bool, #Bool._value, scope 77 // user: %7
  cond_br %6, bb2, bb1, scope 77                  // id: %7

bb1:                                              // Preds: bb0
  br bb7(%1 : $Int), scope 77                     // id: %8

bb2:                                              // Preds: bb0
  %9 = struct_extract %5 : $Int, #Int._value, scope 77 // users: %16, %11
  %10 = struct_extract %1 : $Int, #Int._value, scope 77 // users: %21, %11
  %11 = builtin "cmp_slt_Int64"(%9 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 77 // user: %12
  cond_br %11, bb4, bb3, scope 77                 // id: %12

bb3:                                              // Preds: bb2
  br bb7(%5 : $Int), scope 77                     // id: %13

bb4:                                              // Preds: bb2
  %14 = integer_literal $Builtin.Int64, 2, scope 77 // user: %16
  %15 = integer_literal $Builtin.Int1, -1, scope 77 // user: %16
  %16 = builtin "smul_with_overflow_Int64"(%9 : $Builtin.Int64, %14 : $Builtin.Int64, %15 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 77 // users: %18, %17
  %17 = tuple_extract %16 : $(Builtin.Int64, Builtin.Int1), 0, scope 77 // users: %21, %20
  %18 = tuple_extract %16 : $(Builtin.Int64, Builtin.Int1), 1, scope 77 // user: %19
  cond_fail %18 : $Builtin.Int1, "arithmetic overflow", scope 77 // id: %19
  %20 = struct $Int (%17 : $Builtin.Int64), scope 77 // user: %23
  %21 = builtin "cmp_slt_Int64"(%17 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 77 // user: %22
  cond_br %21, bb6, bb5, scope 77                 // id: %22

bb5:                                              // Preds: bb4
  br bb7(%20 : $Int), scope 77                    // id: %23

bb6:                                              // Preds: bb4
  br bb7(%1 : $Int), scope 77                     // id: %24

// %25                                            // user: %30
bb7(%25 : $Int):                                  // Preds: bb6 bb5 bb3 bb1
  // function_ref _ContiguousArrayBuffer.count.getter
  %26 = function_ref @$ss22_ContiguousArrayBufferV5countSivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 77 // user: %27
  %27 = apply %26<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 77 // users: %84, %62, %34, %30
  %28 = metatype $@thin _ContiguousArrayBuffer<Element>.Type, scope 77 // user: %30
  // function_ref _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)
  %29 = function_ref @$ss22_ContiguousArrayBufferV19_uninitializedCount15minimumCapacityAByxGSi_SitcfC : $@convention(method) <τ_0_0> (Int, Int, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 77 // user: %30
  %30 = apply %29<Element>(%27, %25, %28) : $@convention(method) <τ_0_0> (Int, Int, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 77 // users: %95, %80, %64
  %31 = struct_extract %0 : $Bool, #Bool._value, scope 77 // user: %32
  cond_br %31, bb16, bb8, scope 77                // id: %32

bb8:                                              // Preds: bb7
  %33 = integer_literal $Builtin.Int64, 0, scope 77 // users: %61, %56, %53
  %34 = struct_extract %27 : $Int, #Int._value, scope 77 // users: %56, %53
  %35 = string_literal utf8 "Range requires lowerBound <= upperBound", scope 77 // user: %37
  %36 = integer_literal $Builtin.Word, 39, scope 77 // users: %42, %39
  %37 = builtin "ptrtoint_Word"(%35 : $Builtin.RawPointer) : $Builtin.Word, scope 77 // user: %39
  %38 = integer_literal $Builtin.Int8, 2, scope 77 // users: %73, %42, %39
  %39 = struct $StaticString (%37 : $Builtin.Word, %36 : $Builtin.Word, %38 : $Builtin.Int8), scope 77 // user: %77
  %40 = string_literal utf8 "Swift/arm64e-apple-macos.swiftinterface", scope 77 // user: %41
  %41 = builtin "ptrtoint_Word"(%40 : $Builtin.RawPointer) : $Builtin.Word, scope 77 // user: %42
  %42 = struct $StaticString (%41 : $Builtin.Word, %36 : $Builtin.Word, %38 : $Builtin.Int8), scope 77 // user: %77
  %43 = integer_literal $Builtin.Int64, 16122, scope 77 // user: %44
  %44 = struct $UInt (%43 : $Builtin.Int64), scope 77 // user: %77
  %45 = builtin "assert_configuration"() : $Builtin.Int32, scope 77 // users: %50, %47
  %46 = integer_literal $Builtin.Int32, 0, scope 77 // user: %47
  %47 = builtin "cmp_eq_Int32"(%45 : $Builtin.Int32, %46 : $Builtin.Int32) : $Builtin.Int1, scope 77 // user: %48
  cond_br %47, bb12, bb9, scope 77                // id: %48

bb9:                                              // Preds: bb8
  %49 = integer_literal $Builtin.Int32, 1, scope 77 // user: %50
  %50 = builtin "cmp_eq_Int32"(%45 : $Builtin.Int32, %49 : $Builtin.Int32) : $Builtin.Int1, scope 77 // user: %51
  cond_br %50, bb11, bb10, scope 77               // id: %51

bb10:                                             // Preds: bb9
  br bb14, scope 77                               // id: %52

bb11:                                             // Preds: bb9
  %53 = builtin "cmp_slt_Int64"(%34 : $Builtin.Int64, %33 : $Builtin.Int64) : $Builtin.Int1, scope 77 // user: %54
  cond_fail %53 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 77 // id: %54
  br bb14, scope 77                               // id: %55

bb12:                                             // Preds: bb8
  %56 = builtin "cmp_slt_Int64"(%34 : $Builtin.Int64, %33 : $Builtin.Int64) : $Builtin.Int1, scope 77 // user: %58
  %57 = integer_literal $Builtin.Int1, 0, scope 77 // user: %58
  %58 = builtin "int_expect_Int1"(%56 : $Builtin.Int1, %57 : $Builtin.Int1) : $Builtin.Int1, scope 77 // user: %59
  cond_br %58, bb15, bb13, scope 77               // id: %59

bb13:                                             // Preds: bb12
  br bb14, scope 77                               // id: %60

bb14:                                             // Preds: bb13 bb11 bb10
  %61 = struct $Int (%33 : $Builtin.Int64), scope 77 // user: %62
  %62 = struct $Range<Int> (%61 : $Int, %27 : $Int), scope 77 // user: %68
  // function_ref _ContiguousArrayBuffer.mutableFirstElementAddress.getter
  %63 = function_ref @$ss22_ContiguousArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 77 // user: %64
  %64 = apply %63<Element>(%30) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 77 // user: %68
  // function_ref _ContiguousArrayBuffer._copyContents(subRange:initializing:)
  %65 = function_ref @$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF : $@convention(method) <τ_0_0> (Range<Int>, UnsafeMutablePointer<τ_0_0>, @owned _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 77 // user: %68
  %66 = struct_extract %3 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 77 // user: %67
  strong_retain %66 : $__ContiguousArrayStorageBase, scope 77 // id: %67
  %68 = apply %65<Element>(%62, %64, %3) : $@convention(method) <τ_0_0> (Range<Int>, UnsafeMutablePointer<τ_0_0>, @owned _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 77
  br bb17, scope 77                               // id: %69

bb15:                                             // Preds: bb12
  %70 = string_literal utf8 "Fatal error", scope 77 // user: %72
  %71 = integer_literal $Builtin.Word, 11, scope 77 // user: %73
  %72 = builtin "ptrtoint_Word"(%70 : $Builtin.RawPointer) : $Builtin.Word, scope 77 // user: %73
  %73 = struct $StaticString (%72 : $Builtin.Word, %71 : $Builtin.Word, %38 : $Builtin.Int8), scope 77 // user: %77
  %74 = integer_literal $Builtin.Int32, 1, scope 77 // user: %75
  %75 = struct $UInt32 (%74 : $Builtin.Int32), scope 77 // user: %77
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %76 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 77 // user: %77
  %77 = apply %76(%73, %39, %42, %44, %75) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 77
  unreachable , scope 77                          // id: %78

bb16:                                             // Preds: bb7
  // function_ref _ContiguousArrayBuffer.mutableFirstElementAddress.getter
  %79 = function_ref @$ss22_ContiguousArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 77 // user: %80
  %80 = apply %79<Element>(%30) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 77 // user: %84
  // function_ref _ContiguousArrayBuffer.firstElementAddress.getter
  %81 = function_ref @$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 77 // user: %82
  %82 = apply %81<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 77 // user: %84
  // function_ref UnsafeMutablePointer.moveInitialize(from:count:)
  %83 = function_ref @$sSp14moveInitialize4from5countySpyxG_SitF : $@convention(method) <τ_0_0> (UnsafeMutablePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 77 // user: %84
  %84 = apply %83<Element>(%82, %27, %80) : $@convention(method) <τ_0_0> (UnsafeMutablePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 77
  %85 = integer_literal $Builtin.Int64, 0, scope 77 // user: %86
  %86 = struct $Int (%85 : $Builtin.Int64), scope 77 // user: %91
  %87 = struct_extract %3 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 77 // user: %88
  %88 = ref_element_addr %87 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 77 // user: %89
  %89 = struct_element_addr %88 : $*_ArrayBody, #_ArrayBody._storage, scope 77 // user: %90
  %90 = struct_element_addr %89 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 77 // user: %91
  store %86 to %90 : $*Int, scope 77              // id: %91
  br bb17, scope 77                               // id: %92

bb17:                                             // Preds: bb16 bb14
  %93 = struct_extract %3 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 77 // user: %94
  strong_release %93 : $__ContiguousArrayStorageBase, scope 77 // id: %94
  return %30 : $_ContiguousArrayBuffer<Element>, scope 77 // id: %95
} // end sil function '$ss22_ContiguousArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF'

sil_scope 78 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV8capacitySivg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int }

// _ArrayBuffer.capacity.getter, loc * "<compiler-generated>":0:0, scope 78
sil public_external [serialized] @$ss12_ArrayBufferV8capacitySivg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> Int {
// %0                                             // users: %15, %8, %2
bb0(%0 : $_ArrayBuffer<Element>):
  // function_ref _ArrayBuffer._isNative.getter
  %1 = function_ref @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 78 // user: %2
  %2 = apply %1<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 78 // user: %3
  %3 = struct_extract %2 : $Bool, #Bool._value, scope 78 // user: %5
  %4 = integer_literal $Builtin.Int1, -1, scope 78 // user: %5
  %5 = builtin "int_expect_Int1"(%3 : $Builtin.Int1, %4 : $Builtin.Int1) : $Builtin.Int1, scope 78 // user: %6
  cond_br %5, bb2, bb1, scope 78                  // id: %6

bb1:                                              // Preds: bb0
  // function_ref _ArrayBuffer._nonNative.getter
  %7 = function_ref @$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 78 // user: %8
  %8 = apply %7<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 78 // users: %11, %10
  // function_ref _CocoaArrayWrapper.endIndex.getter
  %9 = function_ref @$ss18_CocoaArrayWrapperV8endIndexSivg : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 78 // user: %10
  %10 = apply %9(%8) : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 78 // user: %13
  %11 = struct_extract %8 : $_CocoaArrayWrapper, #_CocoaArrayWrapper.buffer, scope 78 // user: %12
  strong_release %11 : $AnyObject, scope 78       // id: %12
  br bb3(%10 : $Int), scope 78                    // id: %13

bb2:                                              // Preds: bb0
  // function_ref _ArrayBuffer._native.getter
  %14 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 78 // user: %15
  %15 = apply %14<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 78 // users: %18, %17
  // function_ref _ContiguousArrayBuffer.capacity.getter
  %16 = function_ref @$ss22_ContiguousArrayBufferV8capacitySivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 78 // user: %17
  %17 = apply %16<Element>(%15) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 78 // user: %20
  %18 = struct_extract %15 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 78 // user: %19
  strong_release %18 : $__ContiguousArrayStorageBase, scope 78 // id: %19
  br bb3(%17 : $Int), scope 78                    // id: %20

// %21                                            // user: %22
bb3(%21 : $Int):                                  // Preds: bb2 bb1
  return %21 : $Int, scope 78                     // id: %22
} // end sil function '$ss12_ArrayBufferV8capacitySivg'

sil_scope 79 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool }

// _ArrayBuffer._isNative.getter, loc * "<compiler-generated>":0:0, scope 79
sil public_external [serialized] @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> Bool {
[%0: noescape **]
// %0                                             // user: %16
bb0(%0 : $_ArrayBuffer<Element>):
  %1 = metatype $@thick Element.Type, scope 79    // users: %10, %2
  %2 = builtin "canBeClass"<Element>(%1 : $@thick Element.Type) : $Builtin.Int8, scope 79 // users: %7, %4
  %3 = integer_literal $Builtin.Int8, 0, scope 79 // user: %4
  %4 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %3 : $Builtin.Int8) : $Builtin.Int1, scope 79 // user: %5
  cond_br %4, bb7, bb1, scope 79                  // id: %5

bb1:                                              // Preds: bb0
  %6 = integer_literal $Builtin.Int8, 1, scope 79 // user: %7
  %7 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %6 : $Builtin.Int8) : $Builtin.Int1, scope 79 // user: %8
  cond_br %7, bb5, bb2, scope 79                  // id: %8

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %9 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 79 // user: %10
  %10 = apply %9<Element>(%1) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 79 // user: %11
  %11 = struct_extract %10 : $Bool, #Bool._value, scope 79 // user: %12
  cond_br %11, bb4, bb3, scope 79                 // id: %12

bb3:                                              // Preds: bb2
  br bb8, scope 79                                // id: %13

bb4:                                              // Preds: bb2
  br bb6, scope 79                                // id: %14

bb5:                                              // Preds: bb1
  br bb6, scope 79                                // id: %15

bb6:                                              // Preds: bb5 bb4
  %16 = struct_extract %0 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 79 // user: %17
  %17 = struct_extract %16 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 79 // user: %18
  %18 = classify_bridge_object %17 : $Builtin.BridgeObject, scope 79 // users: %20, %19
  %19 = tuple_extract %18 : $(Builtin.Int1, Builtin.Int1), 0, scope 79 // user: %21
  %20 = tuple_extract %18 : $(Builtin.Int1, Builtin.Int1), 1, scope 79 // user: %21
  %21 = builtin "or_Int1"(%19 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 79 // user: %23
  %22 = integer_literal $Builtin.Int1, -1, scope 79 // user: %23
  %23 = builtin "xor_Int1"(%21 : $Builtin.Int1, %22 : $Builtin.Int1) : $Builtin.Int1, scope 79 // user: %24
  br bb9(%23 : $Builtin.Int1), scope 79           // id: %24

bb7:                                              // Preds: bb0
  br bb8, scope 79                                // id: %25

bb8:                                              // Preds: bb7 bb3
  %26 = integer_literal $Builtin.Int1, -1, scope 79 // user: %27
  br bb9(%26 : $Builtin.Int1), scope 79           // id: %27

// %28                                            // user: %29
bb9(%28 : $Builtin.Int1):                         // Preds: bb8 bb6
  %29 = struct $Bool (%28 : $Builtin.Int1), scope 79 // user: %30
  return %29 : $Bool, scope 79                    // id: %30
} // end sil function '$ss12_ArrayBufferV9_isNativeSbvg'

sil_scope 80 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper }

// _ArrayBuffer._nonNative.getter, loc * "<compiler-generated>":0:0, scope 80
sil public_external [serialized] @$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> @owned _CocoaArrayWrapper {
[%0: escape v** => %r.s0.v**, escape v**.c*.v** => %r.s0.v**.c*.v**]
// %0                                             // user: %1
bb0(%0 : $_ArrayBuffer<Element>):
  %1 = struct_extract %0 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 80 // user: %2
  %2 = struct_extract %1 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 80 // users: %5, %3
  %3 = bridge_object_to_ref %2 : $Builtin.BridgeObject to $AnyObject, scope 80 // user: %4
  %4 = struct $_CocoaArrayWrapper (%3 : $AnyObject), scope 80 // user: %6
  strong_retain %2 : $Builtin.BridgeObject, scope 80 // id: %5
  return %4 : $_CocoaArrayWrapper, scope 80       // id: %6
} // end sil function '$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg'


// _CocoaArrayWrapper.endIndex.getter, loc * "<compiler-generated>":0:0, scope 0
sil @$ss18_CocoaArrayWrapperV8endIndexSivg : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int

sil_scope 81 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0> }

// _ArrayBuffer._native.getter, loc * "<compiler-generated>":0:0, scope 81
sil public_external [serialized] @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> @owned _ContiguousArrayBuffer<Element> {
// %0                                             // users: %29, %22, %17
bb0(%0 : $_ArrayBuffer<Element>):
  %1 = metatype $@thin _ContiguousArrayBuffer<Element>.Type, scope 81 // user: %28
  %2 = metatype $@thick Element.Type, scope 81    // users: %11, %3
  %3 = builtin "canBeClass"<Element>(%2 : $@thick Element.Type) : $Builtin.Int8, scope 81 // users: %8, %5
  %4 = integer_literal $Builtin.Int8, 0, scope 81 // user: %5
  %5 = builtin "cmp_eq_Int8"(%3 : $Builtin.Int8, %4 : $Builtin.Int8) : $Builtin.Int1, scope 81 // user: %6
  cond_br %5, bb7, bb1, scope 81                  // id: %6

bb1:                                              // Preds: bb0
  %7 = integer_literal $Builtin.Int8, 1, scope 81 // user: %8
  %8 = builtin "cmp_eq_Int8"(%3 : $Builtin.Int8, %7 : $Builtin.Int8) : $Builtin.Int1, scope 81 // user: %9
  cond_br %8, bb5, bb2, scope 81                  // id: %9

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %10 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 81 // user: %11
  %11 = apply %10<Element>(%2) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 81 // user: %12
  %12 = struct_extract %11 : $Bool, #Bool._value, scope 81 // user: %13
  cond_br %12, bb4, bb3, scope 81                 // id: %13

bb3:                                              // Preds: bb2
  br bb8, scope 81                                // id: %14

bb4:                                              // Preds: bb2
  br bb6, scope 81                                // id: %15

bb5:                                              // Preds: bb1
  br bb6, scope 81                                // id: %16

bb6:                                              // Preds: bb5 bb4
  %17 = struct_extract %0 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 81 // user: %18
  %18 = struct_extract %17 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 81 // user: %19
  %19 = bridge_object_to_ref %18 : $Builtin.BridgeObject to $__ContiguousArrayStorageBase, scope 81 // user: %20
  br bb9(%19 : $__ContiguousArrayStorageBase), scope 81 // id: %20

bb7:                                              // Preds: bb0
  br bb8, scope 81                                // id: %21

bb8:                                              // Preds: bb7 bb3
  %22 = struct_extract %0 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 81 // user: %23
  %23 = struct_extract %22 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 81 // user: %24
  %24 = unchecked_ref_cast %23 : $Builtin.BridgeObject to $__ContiguousArrayStorageBase, scope 81 // user: %25
  br bb9(%24 : $__ContiguousArrayStorageBase), scope 81 // id: %25

// %26                                            // user: %28
bb9(%26 : $__ContiguousArrayStorageBase):         // Preds: bb8 bb6
  // function_ref _ContiguousArrayBuffer.init(_:)
  %27 = function_ref @$ss22_ContiguousArrayBufferVyAByxGs02__aB11StorageBaseCcfC : $@convention(method) <τ_0_0> (@owned __ContiguousArrayStorageBase, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 81 // user: %28
  %28 = apply %27<Element>(%26, %1) : $@convention(method) <τ_0_0> (@owned __ContiguousArrayStorageBase, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 81 // user: %32
  %29 = struct_extract %0 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 81 // user: %30
  %30 = struct_extract %29 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 81 // user: %31
  strong_retain %30 : $Builtin.BridgeObject, scope 81 // id: %31
  return %28 : $_ContiguousArrayBuffer<Element>, scope 81 // id: %32
} // end sil function '$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg'

sil_scope 82 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV5countSivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int }

// _ContiguousArrayBuffer.count.getter, loc * "<compiler-generated>":0:0, scope 82
sil public_external [serialized] @$ss22_ContiguousArrayBufferV5countSivg : $@convention(method) <Element> (@guaranteed _ContiguousArrayBuffer<Element>) -> Int {
[%0: noescape **]
// %0                                             // user: %1
bb0(%0 : $_ContiguousArrayBuffer<Element>):
  %1 = struct_extract %0 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 82 // user: %2
  %2 = ref_element_addr %1 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 82 // user: %3
  %3 = struct_element_addr %2 : $*_ArrayBody, #_ArrayBody._storage, scope 82 // user: %4
  %4 = struct_element_addr %3 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 82 // user: %5
  %5 = struct_element_addr %4 : $*Int, #Int._value, scope 82 // user: %6
  %6 = load %5 : $*Builtin.Int64, scope 82        // user: %7
  %7 = builtin "assumeNonNegative_Int64"(%6 : $Builtin.Int64) : $Builtin.Int64, scope 82 // user: %8
  %8 = struct $Int (%7 : $Builtin.Int64), scope 82 // user: %9
  return %8 : $Int, scope 82                      // id: %9
} // end sil function '$ss22_ContiguousArrayBufferV5countSivg'

sil_scope 83 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV19_uninitializedCount15minimumCapacityAByxGSi_SitcfC : $@convention(method) <τ_0_0> (Int, Int, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0> }

// _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:), loc * "<compiler-generated>":0:0, scope 83
sil public_external [serialized] @$ss22_ContiguousArrayBufferV19_uninitializedCount15minimumCapacityAByxGSi_SitcfC : $@convention(method) <Element> (Int, Int, @thin _ContiguousArrayBuffer<Element>.Type) -> @owned _ContiguousArrayBuffer<Element> {
// %0                                             // users: %64, %29, %8, %3
// %1                                             // users: %7, %4
// %2                                             // user: %126
bb0(%0 : $Int, %1 : $Int, %2 : $@thin _ContiguousArrayBuffer<Element>.Type):
  %3 = struct_extract %0 : $Int, #Int._value, scope 83 // user: %5
  %4 = struct_extract %1 : $Int, #Int._value, scope 83 // user: %5
  %5 = builtin "cmp_slt_Int64"(%4 : $Builtin.Int64, %3 : $Builtin.Int64) : $Builtin.Int1, scope 83 // user: %6
  cond_br %5, bb2, bb1, scope 83                  // id: %6

bb1:                                              // Preds: bb0
  br bb3(%1 : $Int), scope 83                     // id: %7

bb2:                                              // Preds: bb0
  br bb3(%0 : $Int), scope 83                     // id: %8

// %9                                             // users: %29, %11
bb3(%9 : $Int):                                   // Preds: bb2 bb1
  %10 = integer_literal $Builtin.Int64, 0, scope 83 // users: %47, %12
  %11 = struct_extract %9 : $Int, #Int._value, scope 83 // users: %17, %12
  %12 = builtin "cmp_eq_Int64"(%11 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 83 // user: %13
  cond_br %12, bb18, bb4, scope 83                // id: %13

bb4:                                              // Preds: bb3
  %14 = metatype $@thick Element.Type, scope 83   // user: %16
  // function_ref getContiguousArrayStorageType<A>(for:)
  %15 = function_ref @$ss29getContiguousArrayStorageType3fors01_bcD0CyxGmxm_tlF : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> @thick _ContiguousArrayStorage<τ_0_0>.Type, scope 83 // user: %16
  %16 = apply %15<Element>(%14) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> @thick _ContiguousArrayStorage<τ_0_0>.Type, scope 83 // user: %18
  %17 = builtin "truncOrBitCast_Int64_Word"(%11 : $Builtin.Int64) : $Builtin.Word, scope 83 // user: %18
  %18 = alloc_ref_dynamic [tail_elems $Element * %17 : $Builtin.Word] %16 : $@thick _ContiguousArrayStorage<Element>.Type, $_ContiguousArrayStorage<Element>, scope 83 // users: %65, %63, %30, %28, %19
  %19 = upcast %18 : $_ContiguousArrayStorage<Element> to $__ContiguousArrayStorageBase, scope 83 // users: %66, %37, %31, %26, %20
  %20 = ref_to_raw_pointer %19 : $__ContiguousArrayStorageBase to $Builtin.RawPointer, scope 83 // users: %36, %21
  %21 = struct $UnsafeRawPointer (%20 : $Builtin.RawPointer), scope 83 // user: %33
  // function_ref _swift_stdlib_has_malloc_size
  %22 = function_ref @_swift_stdlib_has_malloc_size : $@convention(c) () -> Bool, scope 83 // user: %23
  %23 = apply %22() : $@convention(c) () -> Bool, scope 83 // user: %24
  %24 = struct_extract %23 : $Bool, #Bool._value, scope 83 // user: %25
  cond_br %24, bb6, bb5, scope 83                 // id: %25

bb5:                                              // Preds: bb4
  %26 = struct $_ContiguousArrayBuffer<Element> (%19 : $__ContiguousArrayStorageBase), scope 83 // user: %29
  // function_ref _ContiguousArrayBuffer._initStorageHeader(count:capacity:)
  %27 = function_ref @$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitF : $@convention(method) <τ_0_0> (Int, Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> (), scope 83 // user: %29
  strong_retain %18 : $_ContiguousArrayStorage<Element>, scope 83 // id: %28
  %29 = apply %27<Element>(%0, %9, %26) : $@convention(method) <τ_0_0> (Int, Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> (), scope 83
  strong_release %18 : $_ContiguousArrayStorage<Element>, scope 83 // id: %30
  br bb19(%19 : $__ContiguousArrayStorageBase), scope 83 // id: %31

bb6:                                              // Preds: bb4
  // function_ref _swift_stdlib_malloc_size
  %32 = function_ref @_swift_stdlib_malloc_size : $@convention(c) (UnsafeRawPointer) -> Int, scope 83 // user: %33
  %33 = apply %32(%21) : $@convention(c) (UnsafeRawPointer) -> Int, scope 83 // user: %34
  %34 = struct_extract %33 : $Int, #Int._value, scope 83 // user: %35
  %35 = builtin "truncOrBitCast_Int64_Word"(%34 : $Builtin.Int64) : $Builtin.Word, scope 83 // user: %36
  %36 = index_raw_pointer %20 : $Builtin.RawPointer, %35 : $Builtin.Word, scope 83 // user: %40
  %37 = struct $_ContiguousArrayBuffer<Element> (%19 : $__ContiguousArrayStorageBase), scope 83 // users: %64, %39
  // function_ref _ContiguousArrayBuffer.firstElementAddress.getter
  %38 = function_ref @$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 83 // user: %39
  %39 = apply %38<Element>(%37) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 83 // user: %41
  %40 = builtin "ptrtoint_Word"(%36 : $Builtin.RawPointer) : $Builtin.Word, scope 83 // user: %43
  %41 = struct_extract %39 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 83 // user: %42
  %42 = builtin "ptrtoint_Word"(%41 : $Builtin.RawPointer) : $Builtin.Word, scope 83 // user: %43
  %43 = builtin "sub_Word"(%40 : $Builtin.Word, %42 : $Builtin.Word) : $Builtin.Word, scope 83 // user: %44
  %44 = builtin "sextOrBitCast_Word_Int64"(%43 : $Builtin.Word) : $Builtin.Int64, scope 83 // users: %60, %52
  %45 = builtin "strideof"<Element>() : $Builtin.Word, scope 83 // user: %46
  %46 = builtin "sextOrBitCast_Word_Int64"(%45 : $Builtin.Word) : $Builtin.Int64, scope 83 // users: %60, %56, %47
  %47 = builtin "cmp_eq_Int64"(%46 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 83 // user: %49
  %48 = integer_literal $Builtin.Int1, 0, scope 83 // users: %57, %49
  %49 = builtin "int_expect_Int1"(%47 : $Builtin.Int1, %48 : $Builtin.Int1) : $Builtin.Int1, scope 83 // user: %50
  cond_br %49, bb15, bb7, scope 83                // id: %50

bb7:                                              // Preds: bb6
  %51 = integer_literal $Builtin.Int64, -9223372036854775808, scope 83 // user: %52
  %52 = builtin "cmp_eq_Int64"(%44 : $Builtin.Int64, %51 : $Builtin.Int64) : $Builtin.Int1, scope 83 // user: %53
  cond_br %52, bb9, bb8, scope 83                 // id: %53

bb8:                                              // Preds: bb7
  br bb11, scope 83                               // id: %54

bb9:                                              // Preds: bb7
  %55 = integer_literal $Builtin.Int64, -1, scope 83 // user: %56
  %56 = builtin "cmp_eq_Int64"(%46 : $Builtin.Int64, %55 : $Builtin.Int64) : $Builtin.Int1, scope 83 // user: %57
  %57 = builtin "int_expect_Int1"(%56 : $Builtin.Int1, %48 : $Builtin.Int1) : $Builtin.Int1, scope 83 // user: %58
  cond_br %57, bb12, bb10, scope 83               // id: %58

bb10:                                             // Preds: bb9
  br bb11, scope 83                               // id: %59

bb11:                                             // Preds: bb10 bb8
  %60 = builtin "sdiv_Int64"(%44 : $Builtin.Int64, %46 : $Builtin.Int64) : $Builtin.Int64, scope 83 // user: %61
  %61 = struct $Int (%60 : $Builtin.Int64), scope 83 // user: %64
  // function_ref _ContiguousArrayBuffer._initStorageHeader(count:capacity:)
  %62 = function_ref @$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitF : $@convention(method) <τ_0_0> (Int, Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> (), scope 83 // user: %64
  strong_retain %18 : $_ContiguousArrayStorage<Element>, scope 83 // id: %63
  %64 = apply %62<Element>(%0, %61, %37) : $@convention(method) <τ_0_0> (Int, Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> (), scope 83
  strong_release %18 : $_ContiguousArrayStorage<Element>, scope 83 // id: %65
  br bb19(%19 : $__ContiguousArrayStorageBase), scope 83 // id: %66

bb12:                                             // Preds: bb9
  %67 = string_literal utf8 "Division results in an overflow", scope 83 // user: %69
  %68 = integer_literal $Builtin.Word, 31, scope 83 // user: %71
  %69 = builtin "ptrtoint_Word"(%67 : $Builtin.RawPointer) : $Builtin.Word, scope 83 // user: %71
  %70 = integer_literal $Builtin.Int8, 2, scope 83 // users: %90, %75, %71
  %71 = struct $StaticString (%69 : $Builtin.Word, %68 : $Builtin.Word, %70 : $Builtin.Int8), scope 83 // user: %94
  %72 = string_literal utf8 "Swift/arm64e-apple-macos.swiftinterface", scope 83 // user: %74
  %73 = integer_literal $Builtin.Word, 39, scope 83 // user: %75
  %74 = builtin "ptrtoint_Word"(%72 : $Builtin.RawPointer) : $Builtin.Word, scope 83 // user: %75
  %75 = struct $StaticString (%74 : $Builtin.Word, %73 : $Builtin.Word, %70 : $Builtin.Int8), scope 83 // user: %94
  %76 = integer_literal $Builtin.Int64, 34503, scope 83 // user: %77
  %77 = struct $UInt (%76 : $Builtin.Int64), scope 83 // user: %94
  %78 = builtin "assert_configuration"() : $Builtin.Int32, scope 83 // users: %83, %80
  %79 = integer_literal $Builtin.Int32, 0, scope 83 // user: %80
  %80 = builtin "cmp_eq_Int32"(%78 : $Builtin.Int32, %79 : $Builtin.Int32) : $Builtin.Int1, scope 83 // user: %81
  cond_br %80, bb14, bb13, scope 83               // id: %81

bb13:                                             // Preds: bb12
  %82 = integer_literal $Builtin.Int32, 1, scope 83 // user: %83
  %83 = builtin "cmp_eq_Int32"(%78 : $Builtin.Int32, %82 : $Builtin.Int32) : $Builtin.Int1, scope 83 // user: %84
  cond_fail %83 : $Builtin.Int1, "Division results in an overflow", scope 83 // id: %84
  %85 = builtin "conditionallyUnreachable"() : $Never, scope 83
  unreachable , scope 83                          // id: %86

bb14:                                             // Preds: bb12
  %87 = string_literal utf8 "Fatal error", scope 83 // user: %89
  %88 = integer_literal $Builtin.Word, 11, scope 83 // user: %90
  %89 = builtin "ptrtoint_Word"(%87 : $Builtin.RawPointer) : $Builtin.Word, scope 83 // user: %90
  %90 = struct $StaticString (%89 : $Builtin.Word, %88 : $Builtin.Word, %70 : $Builtin.Int8), scope 83 // user: %94
  %91 = integer_literal $Builtin.Int32, 1, scope 83 // user: %92
  %92 = struct $UInt32 (%91 : $Builtin.Int32), scope 83 // user: %94
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %93 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 83 // user: %94
  %94 = apply %93(%90, %71, %75, %77, %92) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 83
  unreachable , scope 83                          // id: %95

bb15:                                             // Preds: bb6
  %96 = string_literal utf8 "Division by zero", scope 83 // user: %98
  %97 = integer_literal $Builtin.Word, 16, scope 83 // user: %100
  %98 = builtin "ptrtoint_Word"(%96 : $Builtin.RawPointer) : $Builtin.Word, scope 83 // user: %100
  %99 = integer_literal $Builtin.Int8, 2, scope 83 // users: %119, %104, %100
  %100 = struct $StaticString (%98 : $Builtin.Word, %97 : $Builtin.Word, %99 : $Builtin.Int8), scope 83 // user: %123
  %101 = string_literal utf8 "Swift/arm64e-apple-macos.swiftinterface", scope 83 // user: %103
  %102 = integer_literal $Builtin.Word, 39, scope 83 // user: %104
  %103 = builtin "ptrtoint_Word"(%101 : $Builtin.RawPointer) : $Builtin.Word, scope 83 // user: %104
  %104 = struct $StaticString (%103 : $Builtin.Word, %102 : $Builtin.Word, %99 : $Builtin.Int8), scope 83 // user: %123
  %105 = integer_literal $Builtin.Int64, 34496, scope 83 // user: %106
  %106 = struct $UInt (%105 : $Builtin.Int64), scope 83 // user: %123
  %107 = builtin "assert_configuration"() : $Builtin.Int32, scope 83 // users: %112, %109
  %108 = integer_literal $Builtin.Int32, 0, scope 83 // user: %109
  %109 = builtin "cmp_eq_Int32"(%107 : $Builtin.Int32, %108 : $Builtin.Int32) : $Builtin.Int1, scope 83 // user: %110
  cond_br %109, bb17, bb16, scope 83              // id: %110

bb16:                                             // Preds: bb15
  %111 = integer_literal $Builtin.Int32, 1, scope 83 // user: %112
  %112 = builtin "cmp_eq_Int32"(%107 : $Builtin.Int32, %111 : $Builtin.Int32) : $Builtin.Int1, scope 83 // user: %113
  cond_fail %112 : $Builtin.Int1, "Division by zero", scope 83 // id: %113
  %114 = builtin "conditionallyUnreachable"() : $Never, scope 83
  unreachable , scope 83                          // id: %115

bb17:                                             // Preds: bb15
  %116 = string_literal utf8 "Fatal error", scope 83 // user: %118
  %117 = integer_literal $Builtin.Word, 11, scope 83 // user: %119
  %118 = builtin "ptrtoint_Word"(%116 : $Builtin.RawPointer) : $Builtin.Word, scope 83 // user: %119
  %119 = struct $StaticString (%118 : $Builtin.Word, %117 : $Builtin.Word, %99 : $Builtin.Int8), scope 83 // user: %123
  %120 = integer_literal $Builtin.Int32, 1, scope 83 // user: %121
  %121 = struct $UInt32 (%120 : $Builtin.Int32), scope 83 // user: %123
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %122 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 83 // user: %123
  %123 = apply %122(%119, %100, %104, %106, %121) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 83
  unreachable , scope 83                          // id: %124

bb18:                                             // Preds: bb3
  // function_ref _ContiguousArrayBuffer.init()
  %125 = function_ref @$ss22_ContiguousArrayBufferVAByxGycfC : $@convention(method) <τ_0_0> (@thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 83 // user: %126
  %126 = apply %125<Element>(%2) : $@convention(method) <τ_0_0> (@thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 83 // user: %127
  %127 = struct_extract %126 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 83 // user: %128
  br bb19(%127 : $__ContiguousArrayStorageBase), scope 83 // id: %128

// %129                                           // user: %130
bb19(%129 : $__ContiguousArrayStorageBase):       // Preds: bb18 bb11 bb5
  %130 = struct $_ContiguousArrayBuffer<Element> (%129 : $__ContiguousArrayStorageBase), scope 83 // user: %131
  return %130 : $_ContiguousArrayBuffer<Element>, scope 83 // id: %131
} // end sil function '$ss22_ContiguousArrayBufferV19_uninitializedCount15minimumCapacityAByxGSi_SitcfC'

sil_scope 84 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0> }

// _ContiguousArrayBuffer.mutableFirstElementAddress.getter, loc * "<compiler-generated>":0:0, scope 84
sil shared [serialized] @$ss22_ContiguousArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <Element> (@guaranteed _ContiguousArrayBuffer<Element>) -> UnsafeMutablePointer<Element> {
[%0: noescape v**, escape v**.c*.v** => %r.s0.v**]
[global: ]
// %0                                             // user: %1
bb0(%0 : $_ContiguousArrayBuffer<Element>):
  %1 = struct_extract %0 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 84 // user: %2
  %2 = ref_tail_addr %1 : $__ContiguousArrayStorageBase, $Element, scope 84 // user: %3
  %3 = address_to_pointer %2 : $*Element to $Builtin.RawPointer, scope 84 // user: %4
  %4 = struct $UnsafeMutablePointer<Element> (%3 : $Builtin.RawPointer), scope 84 // user: %5
  return %4 : $UnsafeMutablePointer<Element>, scope 84 // id: %5
} // end sil function '$ss22_ContiguousArrayBufferV26mutableFirstElementAddressSpyxGvg'


// _assertionFailure(_:_:file:line:flags:), loc * "<compiler-generated>":0:0, scope 0
sil [noinline] [_semantics "programtermination_point"] @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never

sil_scope 85 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0> }

// _ContiguousArrayBuffer.firstElementAddress.getter, loc * "<compiler-generated>":0:0, scope 85
sil public_external [serialized] @$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvg : $@convention(method) <Element> (@guaranteed _ContiguousArrayBuffer<Element>) -> UnsafeMutablePointer<Element> {
[%0: noescape v**, escape v**.c*.v** => %r.s0.v**]
// %0                                             // user: %1
bb0(%0 : $_ContiguousArrayBuffer<Element>):
  %1 = struct_extract %0 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 85 // user: %2
  %2 = ref_tail_addr %1 : $__ContiguousArrayStorageBase, $Element, scope 85 // user: %3
  %3 = address_to_pointer %2 : $*Element to $Builtin.RawPointer, scope 85 // user: %4
  %4 = struct $UnsafeMutablePointer<Element> (%3 : $Builtin.RawPointer), scope 85 // user: %5
  return %4 : $UnsafeMutablePointer<Element>, scope 85 // id: %5
} // end sil function '$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvg'

sil_scope 86 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0> }

// _ArrayBuffer.mutableFirstElementAddress.getter, loc * "<compiler-generated>":0:0, scope 86
sil shared [serialized] @$ss12_ArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> UnsafeMutablePointer<Element> {
[%0: read v**.c*.v**, write v**.c*.v**, copy v**.c*.v**, destroy v**.c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // user: %2
bb0(%0 : $_ArrayBuffer<Element>):
  // function_ref _ArrayBuffer._native.getter
  %1 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 86 // user: %2
  %2 = apply %1<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 86 // users: %5, %4
  // function_ref _ContiguousArrayBuffer.mutableFirstElementAddress.getter
  %3 = function_ref @$ss22_ContiguousArrayBufferV26mutableFirstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 86 // user: %4
  %4 = apply %3<Element>(%2) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 86 // user: %7
  %5 = struct_extract %2 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 86 // user: %6
  strong_release %5 : $__ContiguousArrayStorageBase, scope 86 // id: %6
  return %4 : $UnsafeMutablePointer<Element>, scope 86 // id: %7
} // end sil function '$ss12_ArrayBufferV26mutableFirstElementAddressSpyxGvg'

sil_scope 87 { loc * "<compiler-generated>":0:0 parent @$sSp14moveInitialize4from5countySpyxG_SitF : $@convention(method) <τ_0_0> (UnsafeMutablePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> () }

// UnsafeMutablePointer.moveInitialize(from:count:), loc * "<compiler-generated>":0:0, scope 87
sil public_external [serialized] @$sSp14moveInitialize4from5countySpyxG_SitF : $@convention(method) <Pointee> (UnsafeMutablePointer<Pointee>, Int, UnsafeMutablePointer<Pointee>) -> () {
// %0                                             // user: %28
// %1                                             // users: %57, %34, %22
// %2                                             // users: %33, %27
bb0(%0 : $UnsafeMutablePointer<Pointee>, %1 : $Int, %2 : $UnsafeMutablePointer<Pointee>):
  %3 = string_literal utf8 "UnsafeMutablePointer.moveInitialize with negative count", scope 87 // user: %5
  %4 = integer_literal $Builtin.Word, 55, scope 87 // user: %7
  %5 = builtin "ptrtoint_Word"(%3 : $Builtin.RawPointer) : $Builtin.Word, scope 87 // user: %7
  %6 = integer_literal $Builtin.Int8, 2, scope 87 // users: %66, %11, %7
  %7 = struct $StaticString (%5 : $Builtin.Word, %4 : $Builtin.Word, %6 : $Builtin.Int8), scope 87 // user: %70
  %8 = string_literal utf8 "Swift/arm64e-apple-macos.swiftinterface", scope 87 // user: %10
  %9 = integer_literal $Builtin.Word, 39, scope 87 // user: %11
  %10 = builtin "ptrtoint_Word"(%8 : $Builtin.RawPointer) : $Builtin.Word, scope 87 // user: %11
  %11 = struct $StaticString (%10 : $Builtin.Word, %9 : $Builtin.Word, %6 : $Builtin.Int8), scope 87 // user: %70
  %12 = integer_literal $Builtin.Int64, 23993, scope 87 // user: %13
  %13 = struct $UInt (%12 : $Builtin.Int64), scope 87 // user: %70
  %14 = builtin "assert_configuration"() : $Builtin.Int32, scope 87 // user: %16
  %15 = integer_literal $Builtin.Int32, 0, scope 87 // user: %16
  %16 = builtin "cmp_eq_Int32"(%14 : $Builtin.Int32, %15 : $Builtin.Int32) : $Builtin.Int1, scope 87 // user: %18
  %17 = integer_literal $Builtin.Int1, 0, scope 87 // users: %24, %18
  %18 = builtin "int_expect_Int1"(%16 : $Builtin.Int1, %17 : $Builtin.Int1) : $Builtin.Int1, scope 87 // user: %19
  cond_br %18, bb2, bb1, scope 87                 // id: %19

bb1:                                              // Preds: bb0
  br bb4, scope 87                                // id: %20

bb2:                                              // Preds: bb0
  %21 = integer_literal $Builtin.Int64, 0, scope 87 // user: %23
  %22 = struct_extract %1 : $Int, #Int._value, scope 87 // user: %23
  %23 = builtin "cmp_slt_Int64"(%22 : $Builtin.Int64, %21 : $Builtin.Int64) : $Builtin.Int1, scope 87 // user: %24
  %24 = builtin "int_expect_Int1"(%23 : $Builtin.Int1, %17 : $Builtin.Int1) : $Builtin.Int1, scope 87 // user: %25
  cond_br %24, bb13, bb3, scope 87                // id: %25

bb3:                                              // Preds: bb2
  br bb4, scope 87                                // id: %26

bb4:                                              // Preds: bb3 bb1
  %27 = struct_extract %2 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 87 // users: %59, %51, %48, %29
  %28 = struct_extract %0 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 87 // users: %59, %51, %48, %36, %29
  %29 = builtin "cmp_ult_RawPointer"(%27 : $Builtin.RawPointer, %28 : $Builtin.RawPointer) : $Builtin.Int1, scope 87 // user: %30
  cond_br %29, bb10, bb5, scope 87                // id: %30

bb5:                                              // Preds: bb4
  %31 = metatype $@thick UnsafeMutablePointer<Pointee>.Type, scope 87 // user: %43
  %32 = alloc_stack $UnsafeMutablePointer<Pointee>, scope 87 // users: %45, %43, %33
  store %2 to %32 : $*UnsafeMutablePointer<Pointee>, scope 87 // id: %33
  %34 = struct_extract %1 : $Int, #Int._value, scope 87 // user: %35
  %35 = builtin "truncOrBitCast_Int64_Word"(%34 : $Builtin.Int64) : $Builtin.Word, scope 87 // users: %51, %37
  %36 = pointer_to_address %28 : $Builtin.RawPointer to [strict] $*Pointee, scope 87 // user: %37
  %37 = index_addr [stack_protection] %36 : $*Pointee, %35 : $Builtin.Word, scope 87 // user: %38
  %38 = address_to_pointer [stack_protection] %37 : $*Pointee to $Builtin.RawPointer, scope 87 // user: %39
  %39 = struct $UnsafeMutablePointer<Pointee> (%38 : $Builtin.RawPointer), scope 87 // user: %41
  %40 = alloc_stack $UnsafeMutablePointer<Pointee>, scope 87 // users: %44, %43, %41
  store %39 to %40 : $*UnsafeMutablePointer<Pointee>, scope 87 // id: %41
  // function_ref static Comparable.>= infix(_:_:)
  %42 = function_ref @$sSLsE2geoiySbx_xtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 87 // user: %43
  %43 = apply %42<UnsafeMutablePointer<Pointee>>(%32, %40, %31) : $@convention(method) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 87 // user: %46
  dealloc_stack %40 : $*UnsafeMutablePointer<Pointee>, scope 87 // id: %44
  dealloc_stack %32 : $*UnsafeMutablePointer<Pointee>, scope 87 // id: %45
  %46 = struct_extract %43 : $Bool, #Bool._value, scope 87 // user: %47
  cond_br %46, bb9, bb6, scope 87                 // id: %47

bb6:                                              // Preds: bb5
  %48 = builtin "cmp_eq_RawPointer"(%27 : $Builtin.RawPointer, %28 : $Builtin.RawPointer) : $Builtin.Int1, scope 87 // user: %49
  cond_br %48, bb8, bb7, scope 87                 // id: %49

bb7:                                              // Preds: bb6
  %50 = metatype $@thick Pointee.Type, scope 87   // user: %51
  %51 = builtin "takeArrayBackToFront"<Pointee>(%50 : $@thick Pointee.Type, %27 : $Builtin.RawPointer, %28 : $Builtin.RawPointer, %35 : $Builtin.Word) : $(), scope 87
  br bb12, scope 87                               // id: %52

bb8:                                              // Preds: bb6
  br bb12, scope 87                               // id: %53

bb9:                                              // Preds: bb5
  br bb11, scope 87                               // id: %54

bb10:                                             // Preds: bb4
  br bb11, scope 87                               // id: %55

bb11:                                             // Preds: bb10 bb9
  %56 = metatype $@thick Pointee.Type, scope 87   // user: %59
  %57 = struct_extract %1 : $Int, #Int._value, scope 87 // user: %58
  %58 = builtin "truncOrBitCast_Int64_Word"(%57 : $Builtin.Int64) : $Builtin.Word, scope 87 // user: %59
  %59 = builtin "takeArrayFrontToBack"<Pointee>(%56 : $@thick Pointee.Type, %27 : $Builtin.RawPointer, %28 : $Builtin.RawPointer, %58 : $Builtin.Word) : $(), scope 87
  br bb12, scope 87                               // id: %60

bb12:                                             // Preds: bb11 bb8 bb7
  %61 = tuple (), scope 87                        // user: %62
  return %61 : $(), scope 87                      // id: %62

bb13:                                             // Preds: bb2
  %63 = string_literal utf8 "Fatal error", scope 87 // user: %65
  %64 = integer_literal $Builtin.Word, 11, scope 87 // user: %66
  %65 = builtin "ptrtoint_Word"(%63 : $Builtin.RawPointer) : $Builtin.Word, scope 87 // user: %66
  %66 = struct $StaticString (%65 : $Builtin.Word, %64 : $Builtin.Word, %6 : $Builtin.Int8), scope 87 // user: %70
  %67 = integer_literal $Builtin.Int32, 1, scope 87 // user: %68
  %68 = struct $UInt32 (%67 : $Builtin.Int32), scope 87 // user: %70
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %69 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 87 // user: %70
  %70 = apply %69(%66, %7, %11, %13, %68) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 87
  unreachable , scope 87                          // id: %71
} // end sil function '$sSp14moveInitialize4from5countySpyxG_SitF'

sil_scope 88 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfC : $@convention(method) <τ_0_0> (@owned _ContiguousArrayBuffer<τ_0_0>, Int, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0> }

// _ArrayBuffer.init(_buffer:shiftedToStartIndex:), loc * "<compiler-generated>":0:0, scope 88
sil public_external [serialized] @$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfC : $@convention(method) <Element> (@owned _ContiguousArrayBuffer<Element>, Int, @thin _ArrayBuffer<Element>.Type) -> @owned _ArrayBuffer<Element> {
[%0: escape v** => %r.s0.s0.v**, escape v**.c*.v** => %r.s0.s0.v**.c*.v**]
// %0                                             // user: %3
bb0(%0 : $_ContiguousArrayBuffer<Element>, %1 : $Int, %2 : $@thin _ArrayBuffer<Element>.Type):
  %3 = struct_extract %0 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 88 // user: %4
  %4 = unchecked_ref_cast %3 : $__ContiguousArrayStorageBase to $Builtin.BridgeObject, scope 88 // user: %5
  %5 = struct $_BridgeStorage<__ContiguousArrayStorageBase> (%4 : $Builtin.BridgeObject), scope 88 // user: %6
  %6 = struct $_ArrayBuffer<Element> (%5 : $_BridgeStorage<__ContiguousArrayStorageBase>), scope 88 // user: %7
  return %6 : $_ArrayBuffer<Element>, scope 88    // id: %7
} // end sil function '$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfC'

sil_scope 89 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV8capacitySivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int }

// _ContiguousArrayBuffer.capacity.getter, loc * "<compiler-generated>":0:0, scope 89
sil public_external [serialized] @$ss22_ContiguousArrayBufferV8capacitySivg : $@convention(method) <Element> (@guaranteed _ContiguousArrayBuffer<Element>) -> Int {
[%0: noescape **]
// %0                                             // user: %1
bb0(%0 : $_ContiguousArrayBuffer<Element>):
  %1 = struct_extract %0 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 89 // user: %2
  %2 = ref_element_addr %1 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 89 // user: %3
  %3 = struct_element_addr %2 : $*_ArrayBody, #_ArrayBody._storage, scope 89 // user: %4
  %4 = struct_element_addr %3 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage._capacityAndFlags, scope 89 // user: %5
  %5 = struct_element_addr %4 : $*UInt, #UInt._value, scope 89 // user: %6
  %6 = load %5 : $*Builtin.Int64, scope 89        // user: %8
  %7 = integer_literal $Builtin.Int64, 1, scope 89 // user: %8
  %8 = builtin "lshr_Int64"(%6 : $Builtin.Int64, %7 : $Builtin.Int64) : $Builtin.Int64, scope 89 // user: %9
  %9 = struct $Int (%8 : $Builtin.Int64), scope 89 // user: %10
  return %9 : $Int, scope 89                      // id: %10
} // end sil function '$ss22_ContiguousArrayBufferV8capacitySivg'

sil_scope 90 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferVyAByxGs02__aB11StorageBaseCcfC : $@convention(method) <τ_0_0> (@owned __ContiguousArrayStorageBase, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0> }

// _ContiguousArrayBuffer.init(_:), loc * "<compiler-generated>":0:0, scope 90
sil public_external [serialized] @$ss22_ContiguousArrayBufferVyAByxGs02__aB11StorageBaseCcfC : $@convention(method) <Element> (@owned __ContiguousArrayStorageBase, @thin _ContiguousArrayBuffer<Element>.Type) -> @owned _ContiguousArrayBuffer<Element> {
[%0: escape => %r.s0, escape c*.v** => %r.s0.c*.v**]
// %0                                             // user: %2
bb0(%0 : $__ContiguousArrayStorageBase, %1 : $@thin _ContiguousArrayBuffer<Element>.Type):
  %2 = struct $_ContiguousArrayBuffer<Element> (%0 : $__ContiguousArrayStorageBase), scope 90 // user: %3
  return %2 : $_ContiguousArrayBuffer<Element>, scope 90 // id: %3
} // end sil function '$ss22_ContiguousArrayBufferVyAByxGs02__aB11StorageBaseCcfC'

sil_scope 91 { loc * "<compiler-generated>":0:0 parent @$ss29getContiguousArrayStorageType3fors01_bcD0CyxGmxm_tlF : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> @thick _ContiguousArrayStorage<τ_0_0>.Type }

// getContiguousArrayStorageType<A>(for:), loc * "<compiler-generated>":0:0, scope 91
sil shared [serialized] [noinline] [readonly] [_semantics "array.getContiguousArrayStorageType"] @$ss29getContiguousArrayStorageType3fors01_bcD0CyxGmxm_tlF : $@convention(thin) <Element> (@thick Element.Type) -> @thick _ContiguousArrayStorage<Element>.Type {
bb0(%0 : $@thick Element.Type):
  %1 = integer_literal $Builtin.Word, 13, scope 91 // user: %4
  %2 = integer_literal $Builtin.Word, 0, scope 91 // users: %4, %4
  // function_ref _stdlib_isOSVersionAtLeast(_:_:_:)
  %3 = function_ref @$ss26_stdlib_isOSVersionAtLeastyBi1_Bw_BwBwtF : $@convention(thin) (Builtin.Word, Builtin.Word, Builtin.Word) -> Builtin.Int1, scope 91 // user: %4
  %4 = apply %3(%1, %2, %2) : $@convention(thin) (Builtin.Word, Builtin.Word, Builtin.Word) -> Builtin.Int1, scope 91 // user: %5
  cond_br %4, bb2, bb1, scope 91                  // id: %5

bb1:                                              // Preds: bb0
  br bb4, scope 91                                // id: %6

bb2:                                              // Preds: bb0
  %7 = metatype $@thick Element.Type, scope 91    // user: %8
  checked_cast_br %7 : $@thick Element.Type to any AnyObject.Type, bb5, bb3, scope 91 // id: %8

bb3:                                              // Preds: bb2
  br bb4, scope 91                                // id: %9

bb4:                                              // Preds: bb3 bb1
  %10 = metatype $@thick _ContiguousArrayStorage<Element>.Type, scope 91 // user: %11
  br bb6(%10 : $@thick _ContiguousArrayStorage<Element>.Type), scope 91 // id: %11

bb5(%12 : $@thick any AnyObject.Type):            // Preds: bb2
  %13 = metatype $@thick _ContiguousArrayStorage<AnyObject>.Type, scope 91 // user: %14
  %14 = unchecked_trivial_bit_cast %13 : $@thick _ContiguousArrayStorage<AnyObject>.Type to $@thick _ContiguousArrayStorage<Element>.Type, scope 91 // user: %15
  br bb6(%14 : $@thick _ContiguousArrayStorage<Element>.Type), scope 91 // id: %15

// %16                                            // user: %17
bb6(%16 : $@thick _ContiguousArrayStorage<Element>.Type): // Preds: bb5 bb4
  return %16 : $@thick _ContiguousArrayStorage<Element>.Type, scope 91 // id: %17
} // end sil function '$ss29getContiguousArrayStorageType3fors01_bcD0CyxGmxm_tlF'


// _swift_stdlib_has_malloc_size, loc * "<compiler-generated>":0:0, scope 0
// clang name: _swift_stdlib_has_malloc_size
sil shared [serialized] [clang _swift_stdlib_has_malloc_size] @_swift_stdlib_has_malloc_size : $@convention(c) () -> Bool

sil_scope 92 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitF : $@convention(method) <τ_0_0> (Int, Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> () }

// _ContiguousArrayBuffer._initStorageHeader(count:capacity:), loc * "<compiler-generated>":0:0, scope 92
sil public_external [serialized] @$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitF : $@convention(method) <Element> (Int, Int, @guaranteed _ContiguousArrayBuffer<Element>) -> () {
[%2: noescape **]
// %0                                             // user: %18
// %1                                             // user: %7
// %2                                             // user: %6
bb0(%0 : $Int, %1 : $Int, %2 : $_ContiguousArrayBuffer<Element>):
  %3 = metatype $@thick Element.Type, scope 92    // user: %5
  // function_ref _isBridgedVerbatimToObjectiveC<A>(_:)
  %4 = function_ref @$ss30_isBridgedVerbatimToObjectiveCySbxmlF : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 92 // user: %5
  %5 = apply %4<Element>(%3) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 92 // user: %10
  %6 = struct_extract %2 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 92 // user: %20
  %7 = struct_extract %1 : $Int, #Int._value, scope 92 // user: %9
  %8 = integer_literal $Builtin.Int64, 1, scope 92 // users: %14, %9
  %9 = builtin "shl_Int64"(%7 : $Builtin.Int64, %8 : $Builtin.Int64) : $Builtin.Int64, scope 92 // user: %16
  %10 = struct_extract %5 : $Bool, #Bool._value, scope 92 // user: %11
  cond_br %10, bb2, bb1, scope 92                 // id: %11

bb1:                                              // Preds: bb0
  %12 = integer_literal $Builtin.Int64, 0, scope 92 // user: %13
  br bb3(%12 : $Builtin.Int64), scope 92          // id: %13

bb2:                                              // Preds: bb0
  br bb3(%8 : $Builtin.Int64), scope 92           // id: %14

// %15                                            // user: %16
bb3(%15 : $Builtin.Int64):                        // Preds: bb2 bb1
  %16 = builtin "or_Int64"(%9 : $Builtin.Int64, %15 : $Builtin.Int64) : $Builtin.Int64, scope 92 // user: %17
  %17 = struct $UInt (%16 : $Builtin.Int64), scope 92 // user: %18
  %18 = struct $_SwiftArrayBodyStorage (%0 : $Int, %17 : $UInt), scope 92 // user: %19
  %19 = struct $_ArrayBody (%18 : $_SwiftArrayBodyStorage), scope 92 // user: %21
  %20 = ref_element_addr %6 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 92 // user: %21
  store %19 to %20 : $*_ArrayBody, scope 92       // id: %21
  %22 = tuple (), scope 92                        // user: %23
  return %22 : $(), scope 92                      // id: %23
} // end sil function '$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitF'


// _swift_stdlib_malloc_size, loc * "<compiler-generated>":0:0, scope 0
// clang name: _swift_stdlib_malloc_size
sil shared [serialized] [clang _swift_stdlib_malloc_size] @_swift_stdlib_malloc_size : $@convention(c) (UnsafeRawPointer) -> Int

sil_scope 93 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferVAByxGycfC : $@convention(method) <τ_0_0> (@thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0> }

// _ContiguousArrayBuffer.init(), loc * "<compiler-generated>":0:0, scope 93
sil public_external [serialized] @$ss22_ContiguousArrayBufferVAByxGycfC : $@convention(method) <Element> (@thin _ContiguousArrayBuffer<Element>.Type) -> @owned _ContiguousArrayBuffer<Element> {
bb0(%0 : $@thin _ContiguousArrayBuffer<Element>.Type):
  %1 = global_addr @_swiftEmptyArrayStorage : $*_SwiftEmptyArrayStorage, scope 93 // user: %2
  %2 = address_to_pointer [stack_protection] %1 : $*_SwiftEmptyArrayStorage to $Builtin.RawPointer, scope 93 // user: %3
  %3 = raw_pointer_to_ref %2 : $Builtin.RawPointer to $__EmptyArrayStorage, scope 93 // users: %6, %4
  %4 = upcast %3 : $__EmptyArrayStorage to $__ContiguousArrayStorageBase, scope 93 // user: %5
  %5 = struct $_ContiguousArrayBuffer<Element> (%4 : $__ContiguousArrayStorageBase), scope 93 // user: %7
  strong_retain %3 : $__EmptyArrayStorage, scope 93 // id: %6
  return %5 : $_ContiguousArrayBuffer<Element>, scope 93 // id: %7
} // end sil function '$ss22_ContiguousArrayBufferVAByxGycfC'

sil_scope 94 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV10_typeCheckyySnySiGF : $@convention(method) <τ_0_0> (Range<Int>, @guaranteed _ArrayBuffer<τ_0_0>) -> () }

// _ArrayBuffer._typeCheck(_:), loc * "<compiler-generated>":0:0, scope 94
sil public_external [serialized] @$ss12_ArrayBufferV10_typeCheckyySnySiGF : $@convention(method) <Element> (Range<Int>, @guaranteed _ArrayBuffer<Element>) -> () {
// %0                                             // users: %25, %24
// %1                                             // users: %100, %18
bb0(%0 : $Range<Int>, %1 : $_ArrayBuffer<Element>):
  %2 = metatype $@thick Element.Type, scope 94    // users: %11, %3
  %3 = builtin "canBeClass"<Element>(%2 : $@thick Element.Type) : $Builtin.Int8, scope 94 // users: %8, %5
  %4 = integer_literal $Builtin.Int8, 0, scope 94 // user: %5
  %5 = builtin "cmp_eq_Int8"(%3 : $Builtin.Int8, %4 : $Builtin.Int8) : $Builtin.Int1, scope 94 // user: %6
  cond_br %5, bb36, bb1, scope 94                 // id: %6

bb1:                                              // Preds: bb0
  %7 = integer_literal $Builtin.Int8, 1, scope 94 // user: %8
  %8 = builtin "cmp_eq_Int8"(%3 : $Builtin.Int8, %7 : $Builtin.Int8) : $Builtin.Int1, scope 94 // user: %9
  cond_br %8, bb5, bb2, scope 94                  // id: %9

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %10 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 94 // user: %11
  %11 = apply %10<Element>(%2) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 94 // user: %12
  %12 = struct_extract %11 : $Bool, #Bool._value, scope 94 // user: %13
  cond_br %12, bb4, bb3, scope 94                 // id: %13

bb3:                                              // Preds: bb2
  br bb37, scope 94                               // id: %14

bb4:                                              // Preds: bb2
  br bb6, scope 94                                // id: %15

bb5:                                              // Preds: bb1
  br bb6, scope 94                                // id: %16

bb6:                                              // Preds: bb5 bb4
  // function_ref _ArrayBuffer.needsElementTypeCheck.getter
  %17 = function_ref @$ss12_ArrayBufferV21needsElementTypeCheckSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 94 // user: %18
  %18 = apply %17<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 94 // user: %19
  %19 = struct_extract %18 : $Bool, #Bool._value, scope 94 // user: %21
  %20 = integer_literal $Builtin.Int1, 0, scope 94 // users: %90, %61, %50, %21
  %21 = builtin "int_expect_Int1"(%19 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 94 // user: %22
  cond_br %21, bb8, bb7, scope 94                 // id: %22

bb7:                                              // Preds: bb6
  br bb37, scope 94                               // id: %23

bb8:                                              // Preds: bb6
  %24 = struct_extract %0 : $Range<Int>, #Range.lowerBound, scope 94 // user: %26
  %25 = struct_extract %0 : $Range<Int>, #Range.upperBound, scope 94 // user: %27
  %26 = struct_extract %24 : $Int, #Int._value, scope 94 // users: %89, %82, %75, %70, %62, %53, %49, %46
  %27 = struct_extract %25 : $Int, #Int._value, scope 94 // users: %101, %89, %84, %77, %70, %53, %49, %46
  %28 = string_literal utf8 "Range requires lowerBound <= upperBound", scope 94 // user: %30
  %29 = integer_literal $Builtin.Word, 39, scope 94 // users: %35, %32
  %30 = builtin "ptrtoint_Word"(%28 : $Builtin.RawPointer) : $Builtin.Word, scope 94 // user: %32
  %31 = integer_literal $Builtin.Int8, 2, scope 94 // users: %128, %118, %108, %58, %35, %32
  %32 = struct $StaticString (%30 : $Builtin.Word, %29 : $Builtin.Word, %31 : $Builtin.Int8), scope 94 // users: %132, %112
  %33 = string_literal utf8 "Swift/arm64e-apple-macos.swiftinterface", scope 94 // user: %34
  %34 = builtin "ptrtoint_Word"(%33 : $Builtin.RawPointer) : $Builtin.Word, scope 94 // user: %35
  %35 = struct $StaticString (%34 : $Builtin.Word, %29 : $Builtin.Word, %31 : $Builtin.Int8), scope 94 // users: %132, %122, %112
  %36 = integer_literal $Builtin.Int64, 16122, scope 94 // user: %37
  %37 = struct $UInt (%36 : $Builtin.Int64), scope 94 // users: %132, %112
  %38 = builtin "assert_configuration"() : $Builtin.Int32, scope 94 // users: %67, %43, %40
  %39 = integer_literal $Builtin.Int32, 0, scope 94 // user: %40
  %40 = builtin "cmp_eq_Int32"(%38 : $Builtin.Int32, %39 : $Builtin.Int32) : $Builtin.Int1, scope 94 // users: %61, %41
  cond_br %40, bb12, bb9, scope 94                // id: %41

bb9:                                              // Preds: bb8
  %42 = integer_literal $Builtin.Int32, 1, scope 94 // user: %43
  %43 = builtin "cmp_eq_Int32"(%38 : $Builtin.Int32, %42 : $Builtin.Int32) : $Builtin.Int1, scope 94 // user: %44
  cond_br %43, bb11, bb10, scope 94               // id: %44

bb10:                                             // Preds: bb9
  br bb14, scope 94                               // id: %45

bb11:                                             // Preds: bb9
  %46 = builtin "cmp_slt_Int64"(%27 : $Builtin.Int64, %26 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %47
  cond_fail %46 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 94 // id: %47
  br bb14, scope 94                               // id: %48

bb12:                                             // Preds: bb8
  %49 = builtin "cmp_slt_Int64"(%27 : $Builtin.Int64, %26 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %50
  %50 = builtin "int_expect_Int1"(%49 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 94 // user: %51
  cond_br %50, bb35, bb13, scope 94               // id: %51

bb13:                                             // Preds: bb12
  br bb14, scope 94                               // id: %52

bb14:                                             // Preds: bb13 bb11 bb10
  %53 = builtin "cmp_eq_Int64"(%26 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %54
  cond_br %53, bb34, bb15, scope 94               // id: %54

bb15:                                             // Preds: bb14
  %55 = string_literal utf8 "Index out of range", scope 94 // user: %57
  %56 = integer_literal $Builtin.Word, 18, scope 94 // user: %58
  %57 = builtin "ptrtoint_Word"(%55 : $Builtin.RawPointer) : $Builtin.Word, scope 94 // user: %58
  %58 = struct $StaticString (%57 : $Builtin.Word, %56 : $Builtin.Word, %31 : $Builtin.Int8), scope 94 // user: %122
  %59 = integer_literal $Builtin.Int64, 15982, scope 94 // user: %60
  %60 = struct $UInt (%59 : $Builtin.Int64), scope 94 // user: %122
  %61 = builtin "int_expect_Int1"(%40 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 94 // user: %65
  br bb16(%26 : $Builtin.Int64), scope 94         // id: %62

// %63                                            // users: %95, %84, %82, %77, %75, %64
bb16(%63 : $Builtin.Int64):                       // Preds: bb29 bb15
  %64 = struct $Int (%63 : $Builtin.Int64), scope 94 // user: %100
  cond_br %61, bb23, bb17, scope 94               // id: %65

bb17:                                             // Preds: bb16
  %66 = integer_literal $Builtin.Int32, 1, scope 94 // user: %67
  %67 = builtin "cmp_eq_Int32"(%38 : $Builtin.Int32, %66 : $Builtin.Int32) : $Builtin.Int1, scope 94 // users: %73, %68
  cond_br %67, bb19, bb18, scope 94               // id: %68

bb18:                                             // Preds: bb17
  br bb20, scope 94                               // id: %69

bb19:                                             // Preds: bb17
  %70 = builtin "cmp_slt_Int64"(%27 : $Builtin.Int64, %26 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %71
  cond_fail %70 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 94 // id: %71
  br bb20, scope 94                               // id: %72

bb20:                                             // Preds: bb19 bb18
  cond_br %67, bb22, bb21, scope 94               // id: %73

bb21:                                             // Preds: bb20
  br bb28, scope 94                               // id: %74

bb22:                                             // Preds: bb20
  %75 = builtin "cmp_slt_Int64"(%63 : $Builtin.Int64, %26 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %76
  cond_fail %75 : $Builtin.Int1, "Index out of bounds", scope 94 // id: %76
  %77 = builtin "cmp_slt_Int64"(%63 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %79
  %78 = integer_literal $Builtin.Int1, -1, scope 94 // user: %79
  %79 = builtin "xor_Int1"(%77 : $Builtin.Int1, %78 : $Builtin.Int1) : $Builtin.Int1, scope 94 // user: %80
  cond_fail %79 : $Builtin.Int1, "Index out of bounds", scope 94 // id: %80
  br bb28, scope 94                               // id: %81

bb23:                                             // Preds: bb16
  %82 = builtin "cmp_slt_Int64"(%63 : $Builtin.Int64, %26 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %83
  cond_br %82, bb32, bb24, scope 94               // id: %83

bb24:                                             // Preds: bb23
  %84 = builtin "cmp_slt_Int64"(%63 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %86
  %85 = integer_literal $Builtin.Int1, -1, scope 94 // user: %86
  %86 = builtin "int_expect_Int1"(%84 : $Builtin.Int1, %85 : $Builtin.Int1) : $Builtin.Int1, scope 94 // user: %87
  cond_br %86, bb26, bb25, scope 94               // id: %87

bb25:                                             // Preds: bb24
  br bb33, scope 94                               // id: %88

bb26:                                             // Preds: bb24
  %89 = builtin "cmp_slt_Int64"(%27 : $Builtin.Int64, %26 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %90
  %90 = builtin "int_expect_Int1"(%89 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 94 // user: %91
  cond_br %90, bb31, bb27, scope 94               // id: %91

bb27:                                             // Preds: bb26
  br bb28, scope 94                               // id: %92

bb28:                                             // Preds: bb27 bb22 bb21
  %93 = integer_literal $Builtin.Int64, 1, scope 94 // user: %95
  %94 = integer_literal $Builtin.Int1, -1, scope 94 // user: %95
  %95 = builtin "sadd_with_overflow_Int64"(%63 : $Builtin.Int64, %93 : $Builtin.Int64, %94 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 94 // users: %97, %96
  %96 = tuple_extract %95 : $(Builtin.Int64, Builtin.Int1), 0, scope 94 // users: %103, %101
  %97 = tuple_extract %95 : $(Builtin.Int64, Builtin.Int1), 1, scope 94 // user: %98
  cond_fail %97 : $Builtin.Int1, "arithmetic overflow", scope 94 // id: %98
  // function_ref _ArrayBuffer._typeCheckSlowPath(_:)
  %99 = function_ref @$ss12_ArrayBufferV18_typeCheckSlowPathyySiF : $@convention(method) <τ_0_0> (Int, @guaranteed _ArrayBuffer<τ_0_0>) -> (), scope 94 // user: %100
  %100 = apply %99<Element>(%64, %1) : $@convention(method) <τ_0_0> (Int, @guaranteed _ArrayBuffer<τ_0_0>) -> (), scope 94
  %101 = builtin "cmp_eq_Int64"(%96 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int1, scope 94 // user: %102
  cond_br %101, bb30, bb29, scope 94              // id: %102

bb29:                                             // Preds: bb28
  br bb16(%96 : $Builtin.Int64), scope 94         // id: %103

bb30:                                             // Preds: bb28
  br bb37, scope 94                               // id: %104

bb31:                                             // Preds: bb26
  %105 = string_literal utf8 "Fatal error", scope 94 // user: %107
  %106 = integer_literal $Builtin.Word, 11, scope 94 // user: %108
  %107 = builtin "ptrtoint_Word"(%105 : $Builtin.RawPointer) : $Builtin.Word, scope 94 // user: %108
  %108 = struct $StaticString (%107 : $Builtin.Word, %106 : $Builtin.Word, %31 : $Builtin.Int8), scope 94 // user: %112
  %109 = integer_literal $Builtin.Int32, 1, scope 94 // user: %110
  %110 = struct $UInt32 (%109 : $Builtin.Int32), scope 94 // user: %112
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %111 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 94 // user: %112
  %112 = apply %111(%108, %32, %35, %37, %110) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 94
  unreachable , scope 94                          // id: %113

bb32:                                             // Preds: bb23
  br bb33, scope 94                               // id: %114

bb33:                                             // Preds: bb32 bb25
  %115 = string_literal utf8 "Fatal error", scope 94 // user: %117
  %116 = integer_literal $Builtin.Word, 11, scope 94 // user: %118
  %117 = builtin "ptrtoint_Word"(%115 : $Builtin.RawPointer) : $Builtin.Word, scope 94 // user: %118
  %118 = struct $StaticString (%117 : $Builtin.Word, %116 : $Builtin.Word, %31 : $Builtin.Int8), scope 94 // user: %122
  %119 = integer_literal $Builtin.Int32, 1, scope 94 // user: %120
  %120 = struct $UInt32 (%119 : $Builtin.Int32), scope 94 // user: %122
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %121 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 94 // user: %122
  %122 = apply %121(%118, %58, %35, %60, %120) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 94
  unreachable , scope 94                          // id: %123

bb34:                                             // Preds: bb14
  br bb37, scope 94                               // id: %124

bb35:                                             // Preds: bb12
  %125 = string_literal utf8 "Fatal error", scope 94 // user: %127
  %126 = integer_literal $Builtin.Word, 11, scope 94 // user: %128
  %127 = builtin "ptrtoint_Word"(%125 : $Builtin.RawPointer) : $Builtin.Word, scope 94 // user: %128
  %128 = struct $StaticString (%127 : $Builtin.Word, %126 : $Builtin.Word, %31 : $Builtin.Int8), scope 94 // user: %132
  %129 = integer_literal $Builtin.Int32, 1, scope 94 // user: %130
  %130 = struct $UInt32 (%129 : $Builtin.Int32), scope 94 // user: %132
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %131 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 94 // user: %132
  %132 = apply %131(%128, %32, %35, %37, %130) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 94
  unreachable , scope 94                          // id: %133

bb36:                                             // Preds: bb0
  br bb37, scope 94                               // id: %134

bb37:                                             // Preds: bb36 bb34 bb30 bb7 bb3
  %135 = tuple (), scope 94                       // user: %136
  return %135 : $(), scope 94                     // id: %136
} // end sil function '$ss12_ArrayBufferV10_typeCheckyySnySiGF'


// _CocoaArrayWrapper._copyContents(subRange:initializing:), loc * "<compiler-generated>":0:0, scope 0
sil @$ss18_CocoaArrayWrapperV13_copyContents8subRange12initializingSpyyXlGSnySiG_AFtF : $@convention(method) (Range<Int>, UnsafeMutablePointer<AnyObject>, @owned _CocoaArrayWrapper) -> UnsafeMutablePointer<AnyObject>

sil_scope 95 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF : $@convention(method) <τ_0_0> (Range<Int>, UnsafeMutablePointer<τ_0_0>, @owned _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0> }

// _ContiguousArrayBuffer._copyContents(subRange:initializing:), loc * "<compiler-generated>":0:0, scope 95
sil public_external [serialized] @$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF : $@convention(method) <Element> (Range<Int>, UnsafeMutablePointer<Element>, @owned _ContiguousArrayBuffer<Element>) -> UnsafeMutablePointer<Element> {
[%2: noescape v**]
// %0                                             // users: %4, %3
// %1                                             // users: %29, %22
// %2                                             // users: %25, %24, %14
bb0(%0 : $Range<Int>, %1 : $UnsafeMutablePointer<Element>, %2 : $_ContiguousArrayBuffer<Element>):
  %3 = struct_extract %0 : $Range<Int>, #Range.upperBound, scope 95 // user: %5
  %4 = struct_extract %0 : $Range<Int>, #Range.lowerBound, scope 95 // user: %6
  %5 = struct_extract %3 : $Int, #Int._value, scope 95 // user: %8
  %6 = struct_extract %4 : $Int, #Int._value, scope 95 // users: %16, %8
  %7 = integer_literal $Builtin.Int1, -1, scope 95 // user: %8
  %8 = builtin "ssub_with_overflow_Int64"(%5 : $Builtin.Int64, %6 : $Builtin.Int64, %7 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 95 // users: %10, %9
  %9 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 0, scope 95 // users: %30, %12
  %10 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 1, scope 95 // user: %11
  cond_fail %10 : $Builtin.Int1, "arithmetic overflow", scope 95 // id: %11
  %12 = struct $Int (%9 : $Builtin.Int64), scope 95 // user: %22
  // function_ref _ContiguousArrayBuffer.firstElementAddress.getter
  %13 = function_ref @$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 95 // user: %14
  %14 = apply %13<Element>(%2) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 95 // user: %15
  %15 = struct_extract %14 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 95 // user: %17
  %16 = builtin "truncOrBitCast_Int64_Word"(%6 : $Builtin.Int64) : $Builtin.Word, scope 95 // user: %18
  %17 = pointer_to_address %15 : $Builtin.RawPointer to [strict] $*Element, scope 95 // user: %18
  %18 = index_addr [stack_protection] %17 : $*Element, %16 : $Builtin.Word, scope 95 // user: %19
  %19 = address_to_pointer [stack_protection] %18 : $*Element to $Builtin.RawPointer, scope 95 // user: %20
  %20 = struct $UnsafePointer<Element> (%19 : $Builtin.RawPointer), scope 95 // user: %22
  // function_ref UnsafeMutablePointer.initialize(from:count:)
  %21 = function_ref @$sSp10initialize4from5countySPyxG_SitF : $@convention(method) <τ_0_0> (UnsafePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 95 // user: %22
  %22 = apply %21<Element>(%20, %12, %1) : $@convention(method) <τ_0_0> (UnsafePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 95
  // function_ref _ContiguousArrayBuffer.owner.getter
  %23 = function_ref @$ss22_ContiguousArrayBufferV5owneryXlvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> @owned AnyObject, scope 95 // user: %24
  %24 = apply %23<Element>(%2) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> @owned AnyObject, scope 95 // users: %28, %27
  %25 = struct_extract %2 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 95 // user: %26
  strong_release %25 : $__ContiguousArrayStorageBase, scope 95 // id: %26
  fix_lifetime %24 : $AnyObject, scope 95         // id: %27
  strong_release %24 : $AnyObject, scope 95       // id: %28
  %29 = struct_extract %1 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 95 // user: %31
  %30 = builtin "truncOrBitCast_Int64_Word"(%9 : $Builtin.Int64) : $Builtin.Word, scope 95 // user: %32
  %31 = pointer_to_address %29 : $Builtin.RawPointer to [strict] $*Element, scope 95 // user: %32
  %32 = index_addr [stack_protection] %31 : $*Element, %30 : $Builtin.Word, scope 95 // user: %33
  %33 = address_to_pointer [stack_protection] %32 : $*Element to $Builtin.RawPointer, scope 95 // user: %34
  %34 = struct $UnsafeMutablePointer<Element> (%33 : $Builtin.RawPointer), scope 95 // user: %35
  return %34 : $UnsafeMutablePointer<Element>, scope 95 // id: %35
} // end sil function '$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtF'

sil_scope 96 { loc * "<compiler-generated>":0:0 parent @$sSLsE2geoiySbx_xtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool }

// static Comparable.>= infix(_:_:), loc * "<compiler-generated>":0:0, scope 96
sil public_external [serialized] @$sSLsE2geoiySbx_xtFZ : $@convention(method) <Self where Self : Comparable> (@in_guaranteed Self, @in_guaranteed Self, @thick Self.Type) -> Bool {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $*Self, %1 : $*Self, %2 : $@thick Self.Type):
  %3 = metatype $@thick Self.Type, scope 96       // user: %5
  %4 = witness_method $Self, #Comparable."<" : <Self where Self : Comparable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Comparable) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 96 // user: %5
  %5 = apply %4<Self>(%0, %1, %3) : $@convention(witness_method: Comparable) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 96 // user: %6
  %6 = struct_extract %5 : $Bool, #Bool._value, scope 96 // user: %8
  %7 = integer_literal $Builtin.Int1, -1, scope 96 // user: %8
  %8 = builtin "xor_Int1"(%6 : $Builtin.Int1, %7 : $Builtin.Int1) : $Builtin.Int1, scope 96 // user: %9
  %9 = struct $Bool (%8 : $Builtin.Int1), scope 96 // user: %10
  return %9 : $Bool, scope 96                     // id: %10
} // end sil function '$sSLsE2geoiySbx_xtFZ'


// _fatalErrorMessage(_:_:file:line:flags:), loc * "<compiler-generated>":0:0, scope 0
sil [noinline] [_semantics "programtermination_point"] @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never

sil_scope 97 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV21needsElementTypeCheckSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool }

// _ArrayBuffer.needsElementTypeCheck.getter, loc * "<compiler-generated>":0:0, scope 97
sil public_external [serialized] @$ss12_ArrayBufferV21needsElementTypeCheckSbvg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> Bool {
[%0: noescape **]
// %0                                             // user: %2
bb0(%0 : $_ArrayBuffer<Element>):
  // function_ref _ArrayBuffer._isNativeTypeChecked.getter
  %1 = function_ref @$ss12_ArrayBufferV20_isNativeTypeCheckedSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 97 // user: %2
  %2 = apply %1<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 97 // user: %3
  %3 = struct_extract %2 : $Bool, #Bool._value, scope 97 // user: %4
  cond_br %3, bb5, bb1, scope 97                  // id: %4

bb1:                                              // Preds: bb0
  %5 = metatype $@thick (any AnyObject).Type, scope 97 // user: %6
  checked_cast_br %5 : $@thick (any AnyObject).Type to Element.Type, bb3, bb2, scope 97 // id: %6

bb2:                                              // Preds: bb1
  %7 = integer_literal $Builtin.Int1, 0, scope 97 // user: %8
  br bb4(%7 : $Builtin.Int1), scope 97            // id: %8

bb3(%9 : $@thick Element.Type):                   // Preds: bb1
  %10 = integer_literal $Builtin.Int1, -1, scope 97 // user: %11
  br bb4(%10 : $Builtin.Int1), scope 97           // id: %11

// %12                                            // user: %14
bb4(%12 : $Builtin.Int1):                         // Preds: bb3 bb2
  %13 = integer_literal $Builtin.Int1, -1, scope 97 // user: %14
  %14 = builtin "xor_Int1"(%12 : $Builtin.Int1, %13 : $Builtin.Int1) : $Builtin.Int1, scope 97 // user: %15
  br bb6(%14 : $Builtin.Int1), scope 97           // id: %15

bb5:                                              // Preds: bb0
  %16 = integer_literal $Builtin.Int1, 0, scope 97 // user: %17
  br bb6(%16 : $Builtin.Int1), scope 97           // id: %17

// %18                                            // user: %19
bb6(%18 : $Builtin.Int1):                         // Preds: bb5 bb4
  %19 = struct $Bool (%18 : $Builtin.Int1), scope 97 // user: %20
  return %19 : $Bool, scope 97                    // id: %20
} // end sil function '$ss12_ArrayBufferV21needsElementTypeCheckSbvg'


// _ArrayBuffer._typeCheckSlowPath(_:), loc * "<compiler-generated>":0:0, scope 0
sil [noinline] @$ss12_ArrayBufferV18_typeCheckSlowPathyySiF : $@convention(method) <τ_0_0> (Int, @guaranteed _ArrayBuffer<τ_0_0>) -> ()

sil_scope 98 { loc * "<compiler-generated>":0:0 parent @$sSp10initialize4from5countySPyxG_SitF : $@convention(method) <τ_0_0> (UnsafePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> () }

// UnsafeMutablePointer.initialize(from:count:), loc * "<compiler-generated>":0:0, scope 98
sil public_external [serialized] @$sSp10initialize4from5countySPyxG_SitF : $@convention(method) <Pointee> (UnsafePointer<Pointee>, Int, UnsafeMutablePointer<Pointee>) -> () {
// %0                                             // users: %83, %53, %46
// %1                                             // users: %84, %37, %22
// %2                                             // users: %82, %36
bb0(%0 : $UnsafePointer<Pointee>, %1 : $Int, %2 : $UnsafeMutablePointer<Pointee>):
  %3 = string_literal utf8 "UnsafeMutablePointer.initialize with negative count", scope 98 // user: %5
  %4 = integer_literal $Builtin.Word, 51, scope 98 // user: %7
  %5 = builtin "ptrtoint_Word"(%3 : $Builtin.RawPointer) : $Builtin.Word, scope 98 // user: %7
  %6 = integer_literal $Builtin.Int8, 2, scope 98 // users: %92, %73, %30, %11, %7
  %7 = struct $StaticString (%5 : $Builtin.Word, %4 : $Builtin.Word, %6 : $Builtin.Int8), scope 98 // user: %96
  %8 = string_literal utf8 "Swift/arm64e-apple-macos.swiftinterface", scope 98 // user: %10
  %9 = integer_literal $Builtin.Word, 39, scope 98 // user: %11
  %10 = builtin "ptrtoint_Word"(%8 : $Builtin.RawPointer) : $Builtin.Word, scope 98 // user: %11
  %11 = struct $StaticString (%10 : $Builtin.Word, %9 : $Builtin.Word, %6 : $Builtin.Int8), scope 98 // users: %96, %77
  %12 = integer_literal $Builtin.Int64, 24017, scope 98 // user: %13
  %13 = struct $UInt (%12 : $Builtin.Int64), scope 98 // user: %96
  %14 = builtin "assert_configuration"() : $Builtin.Int32, scope 98 // user: %16
  %15 = integer_literal $Builtin.Int32, 0, scope 98 // user: %16
  %16 = builtin "cmp_eq_Int32"(%14 : $Builtin.Int32, %15 : $Builtin.Int32) : $Builtin.Int1, scope 98 // user: %18
  %17 = integer_literal $Builtin.Int1, 0, scope 98 // users: %24, %18
  %18 = builtin "int_expect_Int1"(%16 : $Builtin.Int1, %17 : $Builtin.Int1) : $Builtin.Int1, scope 98 // users: %33, %19
  cond_br %18, bb2, bb1, scope 98                 // id: %19

bb1:                                              // Preds: bb0
  br bb4, scope 98                                // id: %20

bb2:                                              // Preds: bb0
  %21 = integer_literal $Builtin.Int64, 0, scope 98 // user: %23
  %22 = struct_extract %1 : $Int, #Int._value, scope 98 // user: %23
  %23 = builtin "cmp_slt_Int64"(%22 : $Builtin.Int64, %21 : $Builtin.Int64) : $Builtin.Int1, scope 98 // user: %24
  %24 = builtin "int_expect_Int1"(%23 : $Builtin.Int1, %17 : $Builtin.Int1) : $Builtin.Int1, scope 98 // user: %25
  cond_br %24, bb12, bb3, scope 98                // id: %25

bb3:                                              // Preds: bb2
  br bb4, scope 98                                // id: %26

bb4:                                              // Preds: bb3 bb1
  %27 = string_literal utf8 "UnsafeMutablePointer.initialize overlapping range", scope 98 // user: %29
  %28 = integer_literal $Builtin.Word, 49, scope 98 // user: %30
  %29 = builtin "ptrtoint_Word"(%27 : $Builtin.RawPointer) : $Builtin.Word, scope 98 // user: %30
  %30 = struct $StaticString (%29 : $Builtin.Word, %28 : $Builtin.Word, %6 : $Builtin.Int8), scope 98 // user: %77
  %31 = integer_literal $Builtin.Int64, 24019, scope 98 // user: %32
  %32 = struct $UInt (%31 : $Builtin.Int64), scope 98 // user: %77
  cond_br %18, bb6, bb5, scope 98                 // id: %33

bb5:                                              // Preds: bb4
  br bb11, scope 98                               // id: %34

bb6:                                              // Preds: bb4
  %35 = metatype $@thick UnsafePointer<Pointee>.Type, scope 98 // users: %63, %48
  %36 = struct_extract %2 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 98 // users: %60, %39
  %37 = struct_extract %1 : $Int, #Int._value, scope 98 // user: %38
  %38 = builtin "truncOrBitCast_Int64_Word"(%37 : $Builtin.Int64) : $Builtin.Word, scope 98 // users: %55, %40
  %39 = pointer_to_address %36 : $Builtin.RawPointer to [strict] $*Pointee, scope 98 // user: %40
  %40 = index_addr [stack_protection] %39 : $*Pointee, %38 : $Builtin.Word, scope 98 // user: %41
  %41 = address_to_pointer [stack_protection] %40 : $*Pointee to $Builtin.RawPointer, scope 98 // user: %42
  %42 = struct $UnsafePointer<Pointee> (%41 : $Builtin.RawPointer), scope 98 // user: %44
  %43 = alloc_stack $UnsafePointer<Pointee>, scope 98 // users: %50, %48, %44
  store %42 to %43 : $*UnsafePointer<Pointee>, scope 98 // id: %44
  %45 = alloc_stack $UnsafePointer<Pointee>, scope 98 // users: %49, %48, %46
  store %0 to %45 : $*UnsafePointer<Pointee>, scope 98 // id: %46
  // function_ref static Comparable.<= infix(_:_:)
  %47 = function_ref @$sSLsE2leoiySbx_xtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 98 // users: %63, %48
  %48 = apply %47<UnsafePointer<Pointee>>(%43, %45, %35) : $@convention(method) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 98 // user: %51
  dealloc_stack %45 : $*UnsafePointer<Pointee>, scope 98 // id: %49
  dealloc_stack %43 : $*UnsafePointer<Pointee>, scope 98 // id: %50
  %51 = struct_extract %48 : $Bool, #Bool._value, scope 98 // user: %52
  cond_br %51, bb10, bb7, scope 98                // id: %52

bb7:                                              // Preds: bb6
  %53 = struct_extract %0 : $UnsafePointer<Pointee>, #UnsafePointer._rawValue, scope 98 // user: %54
  %54 = pointer_to_address %53 : $Builtin.RawPointer to [strict] $*Pointee, scope 98 // user: %55
  %55 = index_addr [stack_protection] %54 : $*Pointee, %38 : $Builtin.Word, scope 98 // user: %56
  %56 = address_to_pointer [stack_protection] %55 : $*Pointee to $Builtin.RawPointer, scope 98 // user: %57
  %57 = struct $UnsafePointer<Pointee> (%56 : $Builtin.RawPointer), scope 98 // user: %59
  %58 = alloc_stack $UnsafePointer<Pointee>, scope 98 // users: %65, %63, %59
  store %57 to %58 : $*UnsafePointer<Pointee>, scope 98 // id: %59
  %60 = struct $UnsafePointer<Pointee> (%36 : $Builtin.RawPointer), scope 98 // user: %62
  %61 = alloc_stack $UnsafePointer<Pointee>, scope 98 // users: %64, %63, %62
  store %60 to %61 : $*UnsafePointer<Pointee>, scope 98 // id: %62
  %63 = apply %47<UnsafePointer<Pointee>>(%58, %61, %35) : $@convention(method) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 98 // user: %66
  dealloc_stack %61 : $*UnsafePointer<Pointee>, scope 98 // id: %64
  dealloc_stack %58 : $*UnsafePointer<Pointee>, scope 98 // id: %65
  %66 = struct_extract %63 : $Bool, #Bool._value, scope 98 // user: %68
  %67 = integer_literal $Builtin.Int1, -1, scope 98 // user: %68
  %68 = builtin "int_expect_Int1"(%66 : $Builtin.Int1, %67 : $Builtin.Int1) : $Builtin.Int1, scope 98 // user: %69
  cond_br %68, bb9, bb8, scope 98                 // id: %69

bb8:                                              // Preds: bb7
  %70 = string_literal utf8 "Fatal error", scope 98 // user: %72
  %71 = integer_literal $Builtin.Word, 11, scope 98 // user: %73
  %72 = builtin "ptrtoint_Word"(%70 : $Builtin.RawPointer) : $Builtin.Word, scope 98 // user: %73
  %73 = struct $StaticString (%72 : $Builtin.Word, %71 : $Builtin.Word, %6 : $Builtin.Int8), scope 98 // user: %77
  %74 = integer_literal $Builtin.Int32, 1, scope 98 // user: %75
  %75 = struct $UInt32 (%74 : $Builtin.Int32), scope 98 // user: %77
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %76 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 98 // user: %77
  %77 = apply %76(%73, %30, %11, %32, %75) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 98
  unreachable , scope 98                          // id: %78

bb9:                                              // Preds: bb7
  br bb11, scope 98                               // id: %79

bb10:                                             // Preds: bb6
  br bb11, scope 98                               // id: %80

bb11:                                             // Preds: bb10 bb9 bb5
  %81 = metatype $@thick Pointee.Type, scope 98   // user: %86
  %82 = struct_extract %2 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 98 // user: %86
  %83 = struct_extract %0 : $UnsafePointer<Pointee>, #UnsafePointer._rawValue, scope 98 // user: %86
  %84 = struct_extract %1 : $Int, #Int._value, scope 98 // user: %85
  %85 = builtin "truncOrBitCast_Int64_Word"(%84 : $Builtin.Int64) : $Builtin.Word, scope 98 // user: %86
  %86 = builtin "copyArray"<Pointee>(%81 : $@thick Pointee.Type, %82 : $Builtin.RawPointer, %83 : $Builtin.RawPointer, %85 : $Builtin.Word) : $(), scope 98
  %87 = tuple (), scope 98                        // user: %88
  return %87 : $(), scope 98                      // id: %88

bb12:                                             // Preds: bb2
  %89 = string_literal utf8 "Fatal error", scope 98 // user: %91
  %90 = integer_literal $Builtin.Word, 11, scope 98 // user: %92
  %91 = builtin "ptrtoint_Word"(%89 : $Builtin.RawPointer) : $Builtin.Word, scope 98 // user: %92
  %92 = struct $StaticString (%91 : $Builtin.Word, %90 : $Builtin.Word, %6 : $Builtin.Int8), scope 98 // user: %96
  %93 = integer_literal $Builtin.Int32, 1, scope 98 // user: %94
  %94 = struct $UInt32 (%93 : $Builtin.Int32), scope 98 // user: %96
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %95 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 98 // user: %96
  %96 = apply %95(%92, %7, %11, %13, %94) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 98
  unreachable , scope 98                          // id: %97
} // end sil function '$sSp10initialize4from5countySPyxG_SitF'

sil_scope 99 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV5owneryXlvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> @owned AnyObject }

// _ContiguousArrayBuffer.owner.getter, loc * "<compiler-generated>":0:0, scope 99
sil public_external [serialized] @$ss22_ContiguousArrayBufferV5owneryXlvg : $@convention(method) <Element> (@guaranteed _ContiguousArrayBuffer<Element>) -> @owned AnyObject {
[%0: escape v** => %r.v**, escape v**.c*.v** => %r.v**.c*.v**]
// %0                                             // user: %1
bb0(%0 : $_ContiguousArrayBuffer<Element>):
  %1 = struct_extract %0 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 99 // users: %3, %2
  %2 = init_existential_ref %1 : $__ContiguousArrayStorageBase : $__ContiguousArrayStorageBase, $AnyObject, scope 99 // user: %4
  strong_retain %1 : $__ContiguousArrayStorageBase, scope 99 // id: %3
  return %2 : $AnyObject, scope 99                // id: %4
} // end sil function '$ss22_ContiguousArrayBufferV5owneryXlvg'

sil_scope 100 { loc * "<compiler-generated>":0:0 parent @$sSLsE2leoiySbx_xtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool }

// static Comparable.<= infix(_:_:), loc * "<compiler-generated>":0:0, scope 100
sil public_external [serialized] @$sSLsE2leoiySbx_xtFZ : $@convention(method) <Self where Self : Comparable> (@in_guaranteed Self, @in_guaranteed Self, @thick Self.Type) -> Bool {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $*Self, %1 : $*Self, %2 : $@thick Self.Type):
  %3 = metatype $@thick Self.Type, scope 100      // user: %5
  %4 = witness_method $Self, #Comparable."<" : <Self where Self : Comparable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Comparable) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 100 // user: %5
  %5 = apply %4<Self>(%1, %0, %3) : $@convention(witness_method: Comparable) <τ_0_0 where τ_0_0 : Comparable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool, scope 100 // user: %6
  %6 = struct_extract %5 : $Bool, #Bool._value, scope 100 // user: %8
  %7 = integer_literal $Builtin.Int1, -1, scope 100 // user: %8
  %8 = builtin "xor_Int1"(%6 : $Builtin.Int1, %7 : $Builtin.Int1) : $Builtin.Int1, scope 100 // user: %9
  %9 = struct $Bool (%8 : $Builtin.Int1), scope 100 // user: %10
  return %9 : $Bool, scope 100                    // id: %10
} // end sil function '$sSLsE2leoiySbx_xtFZ'

sil_scope 101 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV20_isNativeTypeCheckedSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool }

// _ArrayBuffer._isNativeTypeChecked.getter, loc * "<compiler-generated>":0:0, scope 101
sil public_external [serialized] @$ss12_ArrayBufferV20_isNativeTypeCheckedSbvg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> Bool {
[%0: noescape **]
// %0                                             // user: %16
bb0(%0 : $_ArrayBuffer<Element>):
  %1 = metatype $@thick Element.Type, scope 101   // users: %10, %2
  %2 = builtin "canBeClass"<Element>(%1 : $@thick Element.Type) : $Builtin.Int8, scope 101 // users: %7, %4
  %3 = integer_literal $Builtin.Int8, 0, scope 101 // user: %4
  %4 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %3 : $Builtin.Int8) : $Builtin.Int1, scope 101 // user: %5
  cond_br %4, bb7, bb1, scope 101                 // id: %5

bb1:                                              // Preds: bb0
  %6 = integer_literal $Builtin.Int8, 1, scope 101 // user: %7
  %7 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %6 : $Builtin.Int8) : $Builtin.Int1, scope 101 // user: %8
  cond_br %7, bb5, bb2, scope 101                 // id: %8

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %9 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 101 // user: %10
  %10 = apply %9<Element>(%1) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 101 // user: %11
  %11 = struct_extract %10 : $Bool, #Bool._value, scope 101 // user: %12
  cond_br %11, bb4, bb3, scope 101                // id: %12

bb3:                                              // Preds: bb2
  br bb8, scope 101                               // id: %13

bb4:                                              // Preds: bb2
  br bb6, scope 101                               // id: %14

bb5:                                              // Preds: bb1
  br bb6, scope 101                               // id: %15

bb6:                                              // Preds: bb5 bb4
  %16 = struct_extract %0 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 101 // user: %17
  %17 = struct_extract %16 : $_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 101 // user: %18
  %18 = bridge_object_to_word %17 : $Builtin.BridgeObject to $Builtin.Word, scope 101 // user: %19
  %19 = builtin "zextOrBitCast_Word_Int64"(%18 : $Builtin.Word) : $Builtin.Int64, scope 101 // user: %21
  %20 = integer_literal $Builtin.Int64, -4611686018427387903, scope 101 // user: %21
  %21 = builtin "and_Int64"(%19 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int64, scope 101 // user: %23
  %22 = integer_literal $Builtin.Int64, 0, scope 101 // user: %23
  %23 = builtin "cmp_eq_Int64"(%21 : $Builtin.Int64, %22 : $Builtin.Int64) : $Builtin.Int1, scope 101 // user: %24
  br bb9(%23 : $Builtin.Int1), scope 101          // id: %24

bb7:                                              // Preds: bb0
  br bb8, scope 101                               // id: %25

bb8:                                              // Preds: bb7 bb3
  %26 = integer_literal $Builtin.Int1, -1, scope 101 // user: %27
  br bb9(%26 : $Builtin.Int1), scope 101          // id: %27

// %28                                            // user: %29
bb9(%28 : $Builtin.Int1):                         // Preds: bb8 bb6
  %29 = struct $Bool (%28 : $Builtin.Int1), scope 101 // user: %30
  return %29 : $Bool, scope 101                   // id: %30
} // end sil function '$ss12_ArrayBufferV20_isNativeTypeCheckedSbvg'


// _stdlib_isOSVersionAtLeast(_:_:_:), loc * "<compiler-generated>":0:0, scope 0
sil [readnone] [_semantics "availability.osversion"] @$ss26_stdlib_isOSVersionAtLeastyBi1_Bw_BwBwtF : $@convention(thin) (Builtin.Word, Builtin.Word, Builtin.Word) -> Builtin.Int1

sil_scope 102 { loc * "<compiler-generated>":0:0 parent @$ss41__SwiftNativeNSArrayWithContiguousStorageCABycfC : $@convention(method) (@thick __SwiftNativeNSArrayWithContiguousStorage.Type) -> @owned __SwiftNativeNSArrayWithContiguousStorage }

// __SwiftNativeNSArrayWithContiguousStorage.__allocating_init(), loc * "<compiler-generated>":0:0, scope 102
sil public_external [serialized] [exact_self_class] @$ss41__SwiftNativeNSArrayWithContiguousStorageCABycfC : $@convention(method) (@thick __SwiftNativeNSArrayWithContiguousStorage.Type) -> @owned __SwiftNativeNSArrayWithContiguousStorage {
bb0(%0 : $@thick __SwiftNativeNSArrayWithContiguousStorage.Type):
  %1 = alloc_ref $__SwiftNativeNSArrayWithContiguousStorage, scope 102 // user: %2
  return %1 : $__SwiftNativeNSArrayWithContiguousStorage, scope 102 // id: %2
} // end sil function '$ss41__SwiftNativeNSArrayWithContiguousStorageCABycfC'

sil_scope 103 { loc * "<compiler-generated>":0:0 parent @$ss23_ContiguousArrayStorageC16_doNotCallMeBaseAByxGyt_tcfC : $@convention(method) <τ_0_0> (@thick _ContiguousArrayStorage<τ_0_0>.Type) -> @owned _ContiguousArrayStorage<τ_0_0> }

// _ContiguousArrayStorage.__allocating_init(_doNotCallMeBase:), loc * "<compiler-generated>":0:0, scope 103
sil public_external [serialized] [exact_self_class] @$ss23_ContiguousArrayStorageC16_doNotCallMeBaseAByxGyt_tcfC : $@convention(method) <Element> (@thick _ContiguousArrayStorage<Element>.Type) -> @owned _ContiguousArrayStorage<Element> {
bb0(%0 : $@thick _ContiguousArrayStorage<Element>.Type):
  %1 = alloc_ref $_ContiguousArrayStorage<Element>, scope 103 // user: %3
  // function_ref _ContiguousArrayStorage.init(_doNotCallMeBase:)
  %2 = function_ref @$ss23_ContiguousArrayStorageC16_doNotCallMeBaseAByxGyt_tcfc : $@convention(method) <τ_0_0> (@owned _ContiguousArrayStorage<τ_0_0>) -> @owned _ContiguousArrayStorage<τ_0_0>, scope 103 // user: %3
  %3 = apply %2<Element>(%1) : $@convention(method) <τ_0_0> (@owned _ContiguousArrayStorage<τ_0_0>) -> @owned _ContiguousArrayStorage<τ_0_0>, scope 103 // user: %4
  return %3 : $_ContiguousArrayStorage<Element>, scope 103 // id: %4
} // end sil function '$ss23_ContiguousArrayStorageC16_doNotCallMeBaseAByxGyt_tcfC'

sil_scope 104 { loc * "<compiler-generated>":0:0 parent @$ss23_ContiguousArrayStorageC16canStoreElements13ofDynamicTypeSbypXp_tF : $@convention(method) <τ_0_0> (@thick any Any.Type, @guaranteed _ContiguousArrayStorage<τ_0_0>) -> Bool }

// _ContiguousArrayStorage.canStoreElements(ofDynamicType:), loc * "<compiler-generated>":0:0, scope 104
sil public_external [serialized] @$ss23_ContiguousArrayStorageC16canStoreElements13ofDynamicTypeSbypXp_tF : $@convention(method) <Element> (@thick any Any.Type, @guaranteed _ContiguousArrayStorage<Element>) -> Bool {
[%1: noescape **]
// %0                                             // user: %2
bb0(%0 : $@thick any Any.Type, %1 : $_ContiguousArrayStorage<Element>):
  checked_cast_br %0 : $@thick any Any.Type to Element.Type, bb2, bb1, scope 104 // id: %2

bb1:                                              // Preds: bb0
  %3 = integer_literal $Builtin.Int1, 0, scope 104 // user: %4
  br bb3(%3 : $Builtin.Int1), scope 104           // id: %4

bb2(%5 : $@thick Element.Type):                   // Preds: bb0
  %6 = integer_literal $Builtin.Int1, -1, scope 104 // user: %7
  br bb3(%6 : $Builtin.Int1), scope 104           // id: %7

// %8                                             // user: %9
bb3(%8 : $Builtin.Int1):                          // Preds: bb2 bb1
  %9 = struct $Bool (%8 : $Builtin.Int1), scope 104 // user: %10
  return %9 : $Bool, scope 104                    // id: %10
} // end sil function '$ss23_ContiguousArrayStorageC16canStoreElements13ofDynamicTypeSbypXp_tF'

sil_scope 105 { loc * "<compiler-generated>":0:0 parent @$ss23_ContiguousArrayStorageC17staticElementTypeypXpvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayStorage<τ_0_0>) -> @thick any Any.Type }

// _ContiguousArrayStorage.staticElementType.getter, loc * "<compiler-generated>":0:0, scope 105
sil public_external [serialized] @$ss23_ContiguousArrayStorageC17staticElementTypeypXpvg : $@convention(method) <Element> (@guaranteed _ContiguousArrayStorage<Element>) -> @thick any Any.Type {
[%0: noescape **]
bb0(%0 : $_ContiguousArrayStorage<Element>):
  %1 = metatype $@thick Element.Type, scope 105   // user: %2
  %2 = init_existential_metatype %1 : $@thick Element.Type, $@thick any Any.Type, scope 105 // user: %3
  return %2 : $@thick any Any.Type, scope 105     // id: %3
} // end sil function '$ss23_ContiguousArrayStorageC17staticElementTypeypXpvg'

sil_scope 106 { loc * "<compiler-generated>":0:0 parent @$ss23_ContiguousArrayStorageCfD : $@convention(method) <τ_0_0> (@owned _ContiguousArrayStorage<τ_0_0>) -> () }

// _ContiguousArrayStorage.__deallocating_deinit, loc * "<compiler-generated>":0:0, scope 106
sil public_external [serialized] @$ss23_ContiguousArrayStorageCfD : $@convention(method) <Element> (@owned _ContiguousArrayStorage<Element>) -> () {
[%0: noescape, noescape c*.v**]
// %0                                             // user: %2
bb0(%0 : $_ContiguousArrayStorage<Element>):
  // function_ref _ContiguousArrayStorage.deinit
  %1 = function_ref @$ss23_ContiguousArrayStorageCfd : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayStorage<τ_0_0>) -> @owned Builtin.NativeObject, scope 106 // user: %2
  %2 = apply %1<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayStorage<τ_0_0>) -> @owned Builtin.NativeObject, scope 106 // user: %3
  %3 = unchecked_ref_cast %2 : $Builtin.NativeObject to $_ContiguousArrayStorage<Element>, scope 106 // user: %4
  dealloc_ref %3 : $_ContiguousArrayStorage<Element>, scope 106 // id: %4
  %5 = tuple (), scope 106                        // user: %6
  return %5 : $(), scope 106                      // id: %6
} // end sil function '$ss23_ContiguousArrayStorageCfD'


// _ContiguousArrayStorage.init(_doNotCallMeBase:), loc * "<compiler-generated>":0:0, scope 0
sil [serialized] @$ss23_ContiguousArrayStorageC16_doNotCallMeBaseAByxGyt_tcfc : $@convention(method) <τ_0_0> (@owned _ContiguousArrayStorage<τ_0_0>) -> @owned _ContiguousArrayStorage<τ_0_0>

sil_scope 107 { loc * "<compiler-generated>":0:0 parent @$ss23_ContiguousArrayStorageCfd : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayStorage<τ_0_0>) -> @owned Builtin.NativeObject }

// _ContiguousArrayStorage.deinit, loc * "<compiler-generated>":0:0, scope 107
sil public_external [serialized] @$ss23_ContiguousArrayStorageCfd : $@convention(method) <Element> (@guaranteed _ContiguousArrayStorage<Element>) -> @owned Builtin.NativeObject {
[%0: escape => %r, escape c*.v** => %r.c*.v**]
// %0                                             // users: %14, %13, %3, %2
bb0(%0 : $_ContiguousArrayStorage<Element>):
  // function_ref _ContiguousArrayStorage._elementPointer.getter
  %1 = function_ref @$ss23_ContiguousArrayStorageC15_elementPointerSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayStorage<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 107 // user: %2
  %2 = apply %1<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayStorage<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 107 // user: %12
  %3 = upcast %0 : $_ContiguousArrayStorage<Element> to $__ContiguousArrayStorageBase, scope 107 // user: %4
  %4 = ref_element_addr %3 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 107 // user: %5
  %5 = struct_element_addr %4 : $*_ArrayBody, #_ArrayBody._storage, scope 107 // user: %6
  %6 = struct_element_addr %5 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 107 // user: %7
  %7 = struct_element_addr %6 : $*Int, #Int._value, scope 107 // user: %8
  %8 = load %7 : $*Builtin.Int64, scope 107       // user: %9
  %9 = builtin "assumeNonNegative_Int64"(%8 : $Builtin.Int64) : $Builtin.Int64, scope 107 // user: %10
  %10 = struct $Int (%9 : $Builtin.Int64), scope 107 // user: %12
  // function_ref UnsafeMutablePointer.deinitialize(count:)
  %11 = function_ref @$sSp12deinitialize5countSvSi_tF : $@convention(method) <τ_0_0> (Int, UnsafeMutablePointer<τ_0_0>) -> UnsafeMutableRawPointer, scope 107 // user: %12
  %12 = apply %11<Element>(%10, %2) : $@convention(method) <τ_0_0> (Int, UnsafeMutablePointer<τ_0_0>) -> UnsafeMutableRawPointer, scope 107
  fix_lifetime %0 : $_ContiguousArrayStorage<Element>, scope 107 // id: %13
  %14 = unchecked_ref_cast %0 : $_ContiguousArrayStorage<Element> to $Builtin.NativeObject, scope 107 // user: %15
  return %14 : $Builtin.NativeObject, scope 107   // id: %15
} // end sil function '$ss23_ContiguousArrayStorageCfd'

sil_scope 108 { loc * "<compiler-generated>":0:0 parent @$ss30_isBridgedVerbatimToObjectiveCySbxmlF : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool }

// _isBridgedVerbatimToObjectiveC<A>(_:), loc * "<compiler-generated>":0:0, scope 108
sil public_external [serialized] @$ss30_isBridgedVerbatimToObjectiveCySbxmlF : $@convention(thin) <T> (@thick T.Type) -> Bool {
bb0(%0 : $@thick T.Type):
  %1 = metatype $@thick T.Type, scope 108         // users: %10, %2
  %2 = builtin "canBeClass"<T>(%1 : $@thick T.Type) : $Builtin.Int8, scope 108 // users: %7, %4
  %3 = integer_literal $Builtin.Int8, 0, scope 108 // user: %4
  %4 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %3 : $Builtin.Int8) : $Builtin.Int1, scope 108 // user: %5
  cond_br %4, bb4, bb1, scope 108                 // id: %5

bb1:                                              // Preds: bb0
  %6 = integer_literal $Builtin.Int8, 1, scope 108 // user: %7
  %7 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %6 : $Builtin.Int8) : $Builtin.Int1, scope 108 // user: %8
  cond_br %7, bb3, bb2, scope 108                 // id: %8

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %9 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 108 // user: %10
  %10 = apply %9<T>(%1) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 108 // user: %11
  br bb5(%10 : $Bool), scope 108                  // id: %11

bb3:                                              // Preds: bb1
  %12 = integer_literal $Builtin.Int1, -1, scope 108 // user: %13
  %13 = struct $Bool (%12 : $Builtin.Int1), scope 108 // user: %14
  br bb5(%13 : $Bool), scope 108                  // id: %14

bb4:                                              // Preds: bb0
  %15 = integer_literal $Builtin.Int1, 0, scope 108 // user: %16
  %16 = struct $Bool (%15 : $Builtin.Int1), scope 108 // user: %17
  br bb5(%16 : $Bool), scope 108                  // id: %17

// %18                                            // user: %19
bb5(%18 : $Bool):                                 // Preds: bb4 bb3 bb2
  return %18 : $Bool, scope 108                   // id: %19
} // end sil function '$ss30_isBridgedVerbatimToObjectiveCySbxmlF'

sil_scope 109 { loc * "<compiler-generated>":0:0 parent @$ss23_ContiguousArrayStorageC15_elementPointerSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayStorage<τ_0_0>) -> UnsafeMutablePointer<τ_0_0> }

// _ContiguousArrayStorage._elementPointer.getter, loc * "<compiler-generated>":0:0, scope 109
sil public_external [serialized] @$ss23_ContiguousArrayStorageC15_elementPointerSpyxGvg : $@convention(method) <Element> (@guaranteed _ContiguousArrayStorage<Element>) -> UnsafeMutablePointer<Element> {
[%0: noescape, escape c*.v** => %r.s0.v**]
// %0                                             // user: %1
bb0(%0 : $_ContiguousArrayStorage<Element>):
  %1 = ref_tail_addr %0 : $_ContiguousArrayStorage<Element>, $Element, scope 109 // user: %2
  %2 = address_to_pointer %1 : $*Element to $Builtin.RawPointer, scope 109 // user: %3
  %3 = struct $UnsafeMutablePointer<Element> (%2 : $Builtin.RawPointer), scope 109 // user: %4
  return %3 : $UnsafeMutablePointer<Element>, scope 109 // id: %4
} // end sil function '$ss23_ContiguousArrayStorageC15_elementPointerSpyxGvg'

sil_scope 110 { loc * "<compiler-generated>":0:0 parent @$sSp12deinitialize5countSvSi_tF : $@convention(method) <τ_0_0> (Int, UnsafeMutablePointer<τ_0_0>) -> UnsafeMutableRawPointer }

// UnsafeMutablePointer.deinitialize(count:), loc * "<compiler-generated>":0:0, scope 110
sil public_external [serialized] @$sSp12deinitialize5countSvSi_tF : $@convention(method) <Pointee> (Int, UnsafeMutablePointer<Pointee>) -> UnsafeMutableRawPointer {
[%1: escape v** => %r.s0.v**]
// %0                                             // users: %28, %21
// %1                                             // user: %27
bb0(%0 : $Int, %1 : $UnsafeMutablePointer<Pointee>):
  %2 = string_literal utf8 "UnsafeMutablePointer.deinitialize with negative count", scope 110 // user: %4
  %3 = integer_literal $Builtin.Word, 53, scope 110 // user: %6
  %4 = builtin "ptrtoint_Word"(%2 : $Builtin.RawPointer) : $Builtin.Word, scope 110 // user: %6
  %5 = integer_literal $Builtin.Int8, 2, scope 110 // users: %36, %10, %6
  %6 = struct $StaticString (%4 : $Builtin.Word, %3 : $Builtin.Word, %5 : $Builtin.Int8), scope 110 // user: %40
  %7 = string_literal utf8 "Swift/arm64e-apple-macos.swiftinterface", scope 110 // user: %9
  %8 = integer_literal $Builtin.Word, 39, scope 110 // user: %10
  %9 = builtin "ptrtoint_Word"(%7 : $Builtin.RawPointer) : $Builtin.Word, scope 110 // user: %10
  %10 = struct $StaticString (%9 : $Builtin.Word, %8 : $Builtin.Word, %5 : $Builtin.Int8), scope 110 // user: %40
  %11 = integer_literal $Builtin.Int64, 24051, scope 110 // user: %12
  %12 = struct $UInt (%11 : $Builtin.Int64), scope 110 // user: %40
  %13 = builtin "assert_configuration"() : $Builtin.Int32, scope 110 // user: %15
  %14 = integer_literal $Builtin.Int32, 0, scope 110 // user: %15
  %15 = builtin "cmp_eq_Int32"(%13 : $Builtin.Int32, %14 : $Builtin.Int32) : $Builtin.Int1, scope 110 // user: %17
  %16 = integer_literal $Builtin.Int1, 0, scope 110 // users: %23, %17
  %17 = builtin "int_expect_Int1"(%15 : $Builtin.Int1, %16 : $Builtin.Int1) : $Builtin.Int1, scope 110 // user: %18
  cond_br %17, bb2, bb1, scope 110                // id: %18

bb1:                                              // Preds: bb0
  br bb4, scope 110                               // id: %19

bb2:                                              // Preds: bb0
  %20 = integer_literal $Builtin.Int64, 0, scope 110 // user: %22
  %21 = struct_extract %0 : $Int, #Int._value, scope 110 // user: %22
  %22 = builtin "cmp_slt_Int64"(%21 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int1, scope 110 // user: %23
  %23 = builtin "int_expect_Int1"(%22 : $Builtin.Int1, %16 : $Builtin.Int1) : $Builtin.Int1, scope 110 // user: %24
  cond_br %23, bb5, bb3, scope 110                // id: %24

bb3:                                              // Preds: bb2
  br bb4, scope 110                               // id: %25

bb4:                                              // Preds: bb3 bb1
  %26 = metatype $@thick Pointee.Type, scope 110  // user: %30
  %27 = struct_extract %1 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 110 // users: %31, %30
  %28 = struct_extract %0 : $Int, #Int._value, scope 110 // user: %29
  %29 = builtin "truncOrBitCast_Int64_Word"(%28 : $Builtin.Int64) : $Builtin.Word, scope 110 // user: %30
  %30 = builtin "destroyArray"<Pointee>(%26 : $@thick Pointee.Type, %27 : $Builtin.RawPointer, %29 : $Builtin.Word) : $(), scope 110
  %31 = struct $UnsafeMutableRawPointer (%27 : $Builtin.RawPointer), scope 110 // user: %32
  return %31 : $UnsafeMutableRawPointer, scope 110 // id: %32

bb5:                                              // Preds: bb2
  %33 = string_literal utf8 "Fatal error", scope 110 // user: %35
  %34 = integer_literal $Builtin.Word, 11, scope 110 // user: %36
  %35 = builtin "ptrtoint_Word"(%33 : $Builtin.RawPointer) : $Builtin.Word, scope 110 // user: %36
  %36 = struct $StaticString (%35 : $Builtin.Word, %34 : $Builtin.Word, %5 : $Builtin.Int8), scope 110 // user: %40
  %37 = integer_literal $Builtin.Int32, 1, scope 110 // user: %38
  %38 = struct $UInt32 (%37 : $Builtin.Int32), scope 110 // user: %40
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %39 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 110 // user: %40
  %40 = apply %39(%36, %6, %10, %12, %38) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 110
  unreachable , scope 110                         // id: %41
} // end sil function '$sSp12deinitialize5countSvSi_tF'

sil_scope 111 { loc * "<compiler-generated>":0:0 parent @$ss41__SwiftNativeNSArrayWithContiguousStorageCfD : $@convention(method) (@owned __SwiftNativeNSArrayWithContiguousStorage) -> () }

// __SwiftNativeNSArrayWithContiguousStorage.__deallocating_deinit, loc * "<compiler-generated>":0:0, scope 111
sil public_external [serialized] @$ss41__SwiftNativeNSArrayWithContiguousStorageCfD : $@convention(method) (@owned __SwiftNativeNSArrayWithContiguousStorage) -> () {
[%0: noescape **]
// %0                                             // user: %1
bb0(%0 : $__SwiftNativeNSArrayWithContiguousStorage):
  dealloc_ref %0 : $__SwiftNativeNSArrayWithContiguousStorage, scope 111 // id: %1
  %2 = tuple (), scope 111                        // user: %3
  return %2 : $(), scope 111                      // id: %3
} // end sil function '$ss41__SwiftNativeNSArrayWithContiguousStorageCfD'

sil_scope 112 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV16beginCOWMutationSbyF : $@convention(method) <τ_0_0> (@inout _ArrayBuffer<τ_0_0>) -> Bool }

// _ArrayBuffer.beginCOWMutation(), loc * "<compiler-generated>":0:0, scope 112
sil shared [serialized] @$ss12_ArrayBufferV16beginCOWMutationSbyF : $@convention(method) <Element> (@inout _ArrayBuffer<Element>) -> Bool {
[%0: escape v** -> %0.s0.s0.v**, escape v**.c*.v** -> %0.s0.s0.v**.c*.v**, read s0.s0.v**, write v**, copy v**, destroy v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %39, %32, %23, %16
bb0(%0 : $*_ArrayBuffer<Element>):
  %1 = metatype $@thick Element.Type, scope 112   // users: %10, %2
  %2 = builtin "canBeClass"<Element>(%1 : $@thick Element.Type) : $Builtin.Int8, scope 112 // users: %7, %4
  %3 = integer_literal $Builtin.Int8, 0, scope 112 // user: %4
  %4 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %3 : $Builtin.Int8) : $Builtin.Int1, scope 112 // user: %5
  cond_br %4, bb9, bb1, scope 112                 // id: %5

bb1:                                              // Preds: bb0
  %6 = integer_literal $Builtin.Int8, 1, scope 112 // user: %7
  %7 = builtin "cmp_eq_Int8"(%2 : $Builtin.Int8, %6 : $Builtin.Int8) : $Builtin.Int1, scope 112 // user: %8
  cond_br %7, bb5, bb2, scope 112                 // id: %8

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %9 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 112 // user: %10
  %10 = apply %9<Element>(%1) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 112 // user: %11
  %11 = struct_extract %10 : $Bool, #Bool._value, scope 112 // user: %12
  cond_br %11, bb4, bb3, scope 112                // id: %12

bb3:                                              // Preds: bb2
  br bb10, scope 112                              // id: %13

bb4:                                              // Preds: bb2
  br bb6, scope 112                               // id: %14

bb5:                                              // Preds: bb1
  br bb6, scope 112                               // id: %15

bb6:                                              // Preds: bb5 bb4
  %16 = struct_element_addr %0 : $*_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 112 // user: %17
  %17 = struct_element_addr %16 : $*_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 112 // user: %18
  %18 = load %17 : $*Builtin.BridgeObject, scope 112 // user: %19
  (%19, %20) = begin_cow_mutation %18 : $Builtin.BridgeObject, scope 112 // users: %24, %21
  %21 = struct $_BridgeStorage<__ContiguousArrayStorageBase> (%20 : $Builtin.BridgeObject), scope 112 // user: %22
  %22 = struct $_ArrayBuffer<Element> (%21 : $_BridgeStorage<__ContiguousArrayStorageBase>), scope 112 // users: %29, %23
  store %22 to %0 : $*_ArrayBuffer<Element>, scope 112 // id: %23
  cond_br %19, bb8, bb7, scope 112                // id: %24

bb7:                                              // Preds: bb6
  %25 = integer_literal $Builtin.Int1, 0, scope 112 // user: %26
  %26 = struct $Bool (%25 : $Builtin.Int1), scope 112 // user: %27
  br bb11(%26 : $Bool), scope 112                 // id: %27

bb8:                                              // Preds: bb6
  // function_ref _ArrayBuffer._isNative.getter
  %28 = function_ref @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 112 // user: %29
  %29 = apply %28<Element>(%22) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 112 // user: %30
  br bb11(%29 : $Bool), scope 112                 // id: %30

bb9:                                              // Preds: bb0
  br bb10, scope 112                              // id: %31

bb10:                                             // Preds: bb9 bb3
  %32 = struct_element_addr %0 : $*_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 112 // user: %33
  %33 = struct_element_addr %32 : $*_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue, scope 112 // user: %34
  %34 = load %33 : $*Builtin.BridgeObject, scope 112 // user: %35
  (%35, %36) = begin_cow_mutation [native] %34 : $Builtin.BridgeObject, scope 112 // users: %40, %37
  %37 = struct $_BridgeStorage<__ContiguousArrayStorageBase> (%36 : $Builtin.BridgeObject), scope 112 // user: %38
  %38 = struct $_ArrayBuffer<Element> (%37 : $_BridgeStorage<__ContiguousArrayStorageBase>), scope 112 // user: %39
  store %38 to %0 : $*_ArrayBuffer<Element>, scope 112 // id: %39
  %40 = struct $Bool (%35 : $Builtin.Int1), scope 112 // user: %41
  br bb11(%40 : $Bool), scope 112                 // id: %41

// %42                                            // user: %43
bb11(%42 : $Bool):                                // Preds: bb10 bb8 bb7
  return %42 : $Bool, scope 112                   // id: %43
} // end sil function '$ss12_ArrayBufferV16beginCOWMutationSbyF'

sil_scope 113 { loc * "<compiler-generated>":0:0 parent @$sSa5countSivg : $@convention(method) <τ_0_0> (@guaranteed Array<τ_0_0>) -> Int }

// Array.count.getter, loc * "<compiler-generated>":0:0, scope 113
sil public_external [serialized] @$sSa5countSivg : $@convention(method) <Element> (@guaranteed Array<Element>) -> Int {
[%0: noescape **]
// %0                                             // user: %2
bb0(%0 : $Array<Element>):
  // function_ref Array._getCount()
  %1 = function_ref @$sSa9_getCountSiyF : $@convention(method) <τ_0_0> (@guaranteed Array<τ_0_0>) -> Int, scope 113 // user: %2
  %2 = apply %1<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed Array<τ_0_0>) -> Int, scope 113 // user: %3
  return %2 : $Int, scope 113                     // id: %3
} // end sil function '$sSa5countSivg'

sil_scope 114 { loc * "<compiler-generated>":0:0 parent @$sSa9_getCountSiyF : $@convention(method) <τ_0_0> (@guaranteed Array<τ_0_0>) -> Int }

// Array._getCount(), loc * "<compiler-generated>":0:0, scope 114
sil public_external [serialized] [_semantics "array.get_count"] @$sSa9_getCountSiyF : $@convention(method) <Element> (@guaranteed Array<Element>) -> Int {
[%0: noescape! **]
// %0                                             // user: %1
bb0(%0 : $Array<Element>):
  %1 = struct_extract %0 : $Array<Element>, #Array._buffer, scope 114 // user: %3
  // function_ref _ArrayBuffer.immutableCount.getter
  %2 = function_ref @$ss12_ArrayBufferV14immutableCountSivg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 114 // user: %3
  %3 = apply %2<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 114 // user: %4
  return %3 : $Int, scope 114                     // id: %4
} // end sil function '$sSa9_getCountSiyF'

sil_scope 115 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV14immutableCountSivg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int }

// _ArrayBuffer.immutableCount.getter, loc * "<compiler-generated>":0:0, scope 115
sil shared [serialized] @$ss12_ArrayBufferV14immutableCountSivg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> Int {
[%0: read v**.c*.v**, write v**.c*.v**, copy v**.c*.v**, destroy v**.c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %15, %8, %2
bb0(%0 : $_ArrayBuffer<Element>):
  // function_ref _ArrayBuffer._isNative.getter
  %1 = function_ref @$ss12_ArrayBufferV9_isNativeSbvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 115 // user: %2
  %2 = apply %1<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 115 // user: %3
  %3 = struct_extract %2 : $Bool, #Bool._value, scope 115 // user: %5
  %4 = integer_literal $Builtin.Int1, -1, scope 115 // user: %5
  %5 = builtin "int_expect_Int1"(%3 : $Builtin.Int1, %4 : $Builtin.Int1) : $Builtin.Int1, scope 115 // user: %6
  cond_br %5, bb2, bb1, scope 115                 // id: %6

bb1:                                              // Preds: bb0
  // function_ref _ArrayBuffer._nonNative.getter
  %7 = function_ref @$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 115 // user: %8
  %8 = apply %7<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _CocoaArrayWrapper, scope 115 // users: %11, %10
  // function_ref _CocoaArrayWrapper.endIndex.getter
  %9 = function_ref @$ss18_CocoaArrayWrapperV8endIndexSivg : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 115 // user: %10
  %10 = apply %9(%8) : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 115 // user: %13
  %11 = struct_extract %8 : $_CocoaArrayWrapper, #_CocoaArrayWrapper.buffer, scope 115 // user: %12
  strong_release %11 : $AnyObject, scope 115      // id: %12
  br bb3(%10 : $Int), scope 115                   // id: %13

bb2:                                              // Preds: bb0
  // function_ref _ArrayBuffer._native.getter
  %14 = function_ref @$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 115 // user: %15
  %15 = apply %14<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 115 // user: %16
  %16 = struct_extract %15 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 115 // users: %22, %17
  %17 = ref_element_addr [immutable] %16 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 115 // user: %18
  %18 = struct_element_addr %17 : $*_ArrayBody, #_ArrayBody._storage, scope 115 // user: %19
  %19 = struct_element_addr %18 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 115 // user: %20
  %20 = struct_element_addr %19 : $*Int, #Int._value, scope 115 // user: %21
  %21 = load %20 : $*Builtin.Int64, scope 115     // user: %23
  strong_release %16 : $__ContiguousArrayStorageBase, scope 115 // id: %22
  %23 = builtin "assumeNonNegative_Int64"(%21 : $Builtin.Int64) : $Builtin.Int64, scope 115 // user: %24
  %24 = struct $Int (%23 : $Builtin.Int64), scope 115 // user: %25
  br bb3(%24 : $Int), scope 115                   // id: %25

// %26                                            // user: %27
bb3(%26 : $Int):                                  // Preds: bb2 bb1
  return %26 : $Int, scope 115                    // id: %27
} // end sil function '$ss12_ArrayBufferV14immutableCountSivg'

sil_scope 116 { loc * "<compiler-generated>":0:0 parent @$sSp10initialize2toyx_tF : $@convention(method) <τ_0_0> (@in_guaranteed τ_0_0, UnsafeMutablePointer<τ_0_0>) -> () }

// UnsafeMutablePointer.initialize(to:), loc * "<compiler-generated>":0:0, scope 116
sil public_external [serialized] @$sSp10initialize2toyx_tF : $@convention(method) <Pointee> (@in_guaranteed Pointee, UnsafeMutablePointer<Pointee>) -> () {
[%0: escape v** -> %1.s0.v**, escape v**.c*.v** -> %1.s0.v**.c*.v**]
[%1: noescape **]
// %0                                             // user: %4
// %1                                             // user: %2
bb0(%0 : $*Pointee, %1 : $UnsafeMutablePointer<Pointee>):
  %2 = struct_extract %1 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 116 // user: %3
  %3 = pointer_to_address %2 : $Builtin.RawPointer to [strict] $*Pointee, scope 116 // user: %4
  copy_addr %0 to [init] %3 : $*Pointee, scope 116 // id: %4
  %5 = tuple (), scope 116                        // user: %6
  return %5 : $(), scope 116                      // id: %6
} // end sil function '$sSp10initialize2toyx_tF'

sil_scope 117 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV10startIndexSivg : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int }

// _ArrayBuffer.startIndex.getter, loc * "<compiler-generated>":0:0, scope 117
sil public_external [serialized] @$ss12_ArrayBufferV10startIndexSivg : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> Int {
[%0: noescape **]
bb0(%0 : $_ArrayBuffer<Element>):
  %1 = integer_literal $Builtin.Int64, 0, scope 117 // user: %2
  %2 = struct $Int (%1 : $Builtin.Int64), scope 117 // user: %3
  return %2 : $Int, scope 117                     // id: %3
} // end sil function '$ss12_ArrayBufferV10startIndexSivg'

sil_scope 118 { loc * "<compiler-generated>":0:0 parent @$sSr11baseAddressSpyxGSgvg : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>) -> Optional<UnsafeMutablePointer<τ_0_0>> }

// UnsafeMutableBufferPointer.baseAddress.getter, loc * "<compiler-generated>":0:0, scope 118
sil public_external [serialized] @$sSr11baseAddressSpyxGSgvg : $@convention(method) <Element> (UnsafeMutableBufferPointer<Element>) -> Optional<UnsafeMutablePointer<Element>> {
[%0: escape v** => %r.v**, escape v**.c*.v** => %r.v**.c*.v**]
// %0                                             // user: %1
bb0(%0 : $UnsafeMutableBufferPointer<Element>):
  %1 = struct_extract %0 : $UnsafeMutableBufferPointer<Element>, #UnsafeMutableBufferPointer._position, scope 118 // user: %2
  return %1 : $Optional<UnsafeMutablePointer<Element>>, scope 118 // id: %2
} // end sil function '$sSr11baseAddressSpyxGSgvg'

sil_scope 119 { loc * "<compiler-generated>":0:0 parent @$ss18_CocoaArrayWrapperV13_copyContents12initializings16IndexingIteratorVyABG_SitSryyXlG_tF : $@convention(method) (UnsafeMutableBufferPointer<AnyObject>, @owned _CocoaArrayWrapper) -> (@owned IndexingIterator<_CocoaArrayWrapper>, Int) }

// _CocoaArrayWrapper._copyContents(initializing:), loc * "<compiler-generated>":0:0, scope 119
sil shared [serialized] @$ss18_CocoaArrayWrapperV13_copyContents12initializings16IndexingIteratorVyABG_SitSryyXlG_tF : $@convention(method) (UnsafeMutableBufferPointer<AnyObject>, @owned _CocoaArrayWrapper) -> (@owned IndexingIterator<_CocoaArrayWrapper>, Int) {
[%0: read v**.c*.v**, write v**.c*.v**, copy v**.c*.v**, destroy v**.c*.v**]
[%1: read v**.c*.v**, write v**.c*.v**, copy **, destroy v**.c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %10, %2
// %1                                             // users: %87, %86, %48, %46, %44, %8
bb0(%0 : $UnsafeMutableBufferPointer<AnyObject>, %1 : $_CocoaArrayWrapper):
  %2 = struct_extract %0 : $UnsafeMutableBufferPointer<AnyObject>, #UnsafeMutableBufferPointer.count, scope 119 // users: %54, %4
  %3 = integer_literal $Builtin.Int64, 0, scope 119 // users: %78, %75, %42, %7, %5
  %4 = struct_extract %2 : $Int, #Int._value, scope 119 // users: %51, %5
  %5 = builtin "cmp_slt_Int64"(%3 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1, scope 119 // user: %6
  cond_br %5, bb2, bb1, scope 119                 // id: %6

bb1:                                              // Preds: bb0
  %7 = struct $Int (%3 : $Builtin.Int64), scope 119 // users: %9, %8
  %8 = struct $IndexingIterator<_CocoaArrayWrapper> (%1 : $_CocoaArrayWrapper, %7 : $Int), scope 119 // user: %9
  br bb16(%8 : $IndexingIterator<_CocoaArrayWrapper>, %7 : $Int), scope 119 // id: %9

bb2:                                              // Preds: bb0
  %10 = struct_extract %0 : $UnsafeMutableBufferPointer<AnyObject>, #UnsafeMutableBufferPointer._position, scope 119 // user: %11
  switch_enum %10 : $Optional<UnsafeMutablePointer<AnyObject>>, case #Optional.some!enumelt: bb6, case #Optional.none!enumelt: bb3, scope 119 // id: %11

bb3:                                              // Preds: bb2
  %12 = string_literal utf8 "Swift/arm64e-apple-macos.swiftinterface", scope 119 // user: %19
  %13 = integer_literal $Builtin.Word, 39, scope 119 // user: %20
  %14 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value", scope 119 // user: %16
  %15 = integer_literal $Builtin.Word, 57, scope 119 // user: %18
  %16 = builtin "ptrtoint_Word"(%14 : $Builtin.RawPointer) : $Builtin.Word, scope 119 // user: %18
  %17 = integer_literal $Builtin.Int8, 2, scope 119 // users: %35, %20, %18
  %18 = struct $StaticString (%16 : $Builtin.Word, %15 : $Builtin.Word, %17 : $Builtin.Int8), scope 119 // user: %39
  %19 = builtin "ptrtoint_Word"(%12 : $Builtin.RawPointer) : $Builtin.Word, scope 119 // user: %20
  %20 = struct $StaticString (%19 : $Builtin.Word, %13 : $Builtin.Word, %17 : $Builtin.Int8), scope 119 // user: %39
  %21 = integer_literal $Builtin.Int64, 3660, scope 119 // user: %22
  %22 = struct $UInt (%21 : $Builtin.Int64), scope 119 // user: %39
  %23 = builtin "assert_configuration"() : $Builtin.Int32, scope 119 // users: %28, %25
  %24 = integer_literal $Builtin.Int32, 0, scope 119 // user: %25
  %25 = builtin "cmp_eq_Int32"(%23 : $Builtin.Int32, %24 : $Builtin.Int32) : $Builtin.Int1, scope 119 // user: %26
  cond_br %25, bb5, bb4, scope 119                // id: %26

bb4:                                              // Preds: bb3
  %27 = integer_literal $Builtin.Int32, 1, scope 119 // user: %28
  %28 = builtin "cmp_eq_Int32"(%23 : $Builtin.Int32, %27 : $Builtin.Int32) : $Builtin.Int1, scope 119 // user: %29
  cond_fail %28 : $Builtin.Int1, "Unexpectedly found nil while unwrapping an Optional value", scope 119 // id: %29
  %30 = builtin "conditionallyUnreachable"() : $Never, scope 119
  unreachable , scope 119                         // id: %31

bb5:                                              // Preds: bb3
  %32 = string_literal utf8 "Fatal error", scope 119 // user: %34
  %33 = integer_literal $Builtin.Word, 11, scope 119 // user: %35
  %34 = builtin "ptrtoint_Word"(%32 : $Builtin.RawPointer) : $Builtin.Word, scope 119 // user: %35
  %35 = struct $StaticString (%34 : $Builtin.Word, %33 : $Builtin.Word, %17 : $Builtin.Int8), scope 119 // user: %39
  %36 = integer_literal $Builtin.Int32, 1, scope 119 // user: %37
  %37 = struct $UInt32 (%36 : $Builtin.Int32), scope 119 // user: %39
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %38 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 119 // user: %39
  %39 = apply %38(%35, %18, %20, %22, %37) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 119
  unreachable , scope 119                         // id: %40

// %41                                            // user: %86
bb6(%41 : $UnsafeMutablePointer<AnyObject>):      // Preds: bb2
  %42 = struct $Int (%3 : $Builtin.Int64), scope 119 // users: %83, %48
  // function_ref _CocoaArrayWrapper.endIndex.getter
  %43 = function_ref @$ss18_CocoaArrayWrapperV8endIndexSivg : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 119 // user: %46
  %44 = struct_extract %1 : $_CocoaArrayWrapper, #_CocoaArrayWrapper.buffer, scope 119 // users: %85, %49, %45
  strong_retain %44 : $AnyObject, scope 119       // id: %45
  %46 = apply %43(%1) : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 119 // user: %48
  // function_ref specialized RandomAccessCollection<>.distance(from:to:)
  %47 = function_ref @$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE8distance4from2toSiAB_ABtFs18_CocoaArrayWrapperV_Tgq5 : $@convention(method) (Int, Int, @guaranteed _CocoaArrayWrapper) -> Int, scope 119 // user: %48
  %48 = apply %47(%42, %46, %1) : $@convention(method) (Int, Int, @guaranteed _CocoaArrayWrapper) -> Int, scope 119 // users: %53, %50
  strong_release %44 : $AnyObject, scope 119      // id: %49
  %50 = struct_extract %48 : $Int, #Int._value, scope 119 // user: %51
  %51 = builtin "cmp_slt_Int64"(%4 : $Builtin.Int64, %50 : $Builtin.Int64) : $Builtin.Int1, scope 119 // user: %52
  cond_br %51, bb8, bb7, scope 119                // id: %52

bb7:                                              // Preds: bb6
  br bb9(%48 : $Int), scope 119                   // id: %53

bb8:                                              // Preds: bb6
  br bb9(%2 : $Int), scope 119                    // id: %54

// %55                                            // users: %88, %87, %83, %56
bb9(%55 : $Int):                                  // Preds: bb8 bb7
  %56 = struct_extract %55 : $Int, #Int._value, scope 119 // users: %78, %75
  %57 = string_literal utf8 "Range requires lowerBound <= upperBound", scope 119 // user: %59
  %58 = integer_literal $Builtin.Word, 39, scope 119 // users: %64, %61
  %59 = builtin "ptrtoint_Word"(%57 : $Builtin.RawPointer) : $Builtin.Word, scope 119 // user: %61
  %60 = integer_literal $Builtin.Int8, 2, scope 119 // users: %96, %64, %61
  %61 = struct $StaticString (%59 : $Builtin.Word, %58 : $Builtin.Word, %60 : $Builtin.Int8), scope 119 // user: %100
  %62 = string_literal utf8 "Swift/arm64e-apple-macos.swiftinterface", scope 119 // user: %63
  %63 = builtin "ptrtoint_Word"(%62 : $Builtin.RawPointer) : $Builtin.Word, scope 119 // user: %64
  %64 = struct $StaticString (%63 : $Builtin.Word, %58 : $Builtin.Word, %60 : $Builtin.Int8), scope 119 // user: %100
  %65 = integer_literal $Builtin.Int64, 16122, scope 119 // user: %66
  %66 = struct $UInt (%65 : $Builtin.Int64), scope 119 // user: %100
  %67 = builtin "assert_configuration"() : $Builtin.Int32, scope 119 // users: %72, %69
  %68 = integer_literal $Builtin.Int32, 0, scope 119 // user: %69
  %69 = builtin "cmp_eq_Int32"(%67 : $Builtin.Int32, %68 : $Builtin.Int32) : $Builtin.Int1, scope 119 // user: %70
  cond_br %69, bb13, bb10, scope 119              // id: %70

bb10:                                             // Preds: bb9
  %71 = integer_literal $Builtin.Int32, 1, scope 119 // user: %72
  %72 = builtin "cmp_eq_Int32"(%67 : $Builtin.Int32, %71 : $Builtin.Int32) : $Builtin.Int1, scope 119 // user: %73
  cond_br %72, bb12, bb11, scope 119              // id: %73

bb11:                                             // Preds: bb10
  br bb15, scope 119                              // id: %74

bb12:                                             // Preds: bb10
  %75 = builtin "cmp_slt_Int64"(%56 : $Builtin.Int64, %3 : $Builtin.Int64) : $Builtin.Int1, scope 119 // user: %76
  cond_fail %75 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 119 // id: %76
  br bb15, scope 119                              // id: %77

bb13:                                             // Preds: bb9
  %78 = builtin "cmp_slt_Int64"(%56 : $Builtin.Int64, %3 : $Builtin.Int64) : $Builtin.Int1, scope 119 // user: %80
  %79 = integer_literal $Builtin.Int1, 0, scope 119 // user: %80
  %80 = builtin "int_expect_Int1"(%78 : $Builtin.Int1, %79 : $Builtin.Int1) : $Builtin.Int1, scope 119 // user: %81
  cond_br %80, bb17, bb14, scope 119              // id: %81

bb14:                                             // Preds: bb13
  br bb15, scope 119                              // id: %82

bb15:                                             // Preds: bb14 bb12 bb11
  %83 = struct $Range<Int> (%42 : $Int, %55 : $Int), scope 119 // user: %86
  // function_ref _CocoaArrayWrapper._copyContents(subRange:initializing:)
  %84 = function_ref @$ss18_CocoaArrayWrapperV13_copyContents8subRange12initializingSpyyXlGSnySiG_AFtF : $@convention(method) (Range<Int>, UnsafeMutablePointer<AnyObject>, @owned _CocoaArrayWrapper) -> UnsafeMutablePointer<AnyObject>, scope 119 // user: %86
  strong_retain %44 : $AnyObject, scope 119       // id: %85
  %86 = apply %84(%83, %41, %1) : $@convention(method) (Range<Int>, UnsafeMutablePointer<AnyObject>, @owned _CocoaArrayWrapper) -> UnsafeMutablePointer<AnyObject>, scope 119
  %87 = struct $IndexingIterator<_CocoaArrayWrapper> (%1 : $_CocoaArrayWrapper, %55 : $Int), scope 119 // user: %88
  br bb16(%87 : $IndexingIterator<_CocoaArrayWrapper>, %55 : $Int), scope 119 // id: %88

// %89                                            // user: %91
// %90                                            // user: %91
bb16(%89 : $IndexingIterator<_CocoaArrayWrapper>, %90 : $Int): // Preds: bb15 bb1
  %91 = tuple (%89 : $IndexingIterator<_CocoaArrayWrapper>, %90 : $Int), scope 119 // user: %92
  return %91 : $(IndexingIterator<_CocoaArrayWrapper>, Int), scope 119 // id: %92

bb17:                                             // Preds: bb13
  %93 = string_literal utf8 "Fatal error", scope 119 // user: %95
  %94 = integer_literal $Builtin.Word, 11, scope 119 // user: %96
  %95 = builtin "ptrtoint_Word"(%93 : $Builtin.RawPointer) : $Builtin.Word, scope 119 // user: %96
  %96 = struct $StaticString (%95 : $Builtin.Word, %94 : $Builtin.Word, %60 : $Builtin.Int8), scope 119 // user: %100
  %97 = integer_literal $Builtin.Int32, 1, scope 119 // user: %98
  %98 = struct $UInt32 (%97 : $Builtin.Int32), scope 119 // user: %100
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %99 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 119 // user: %100
  %100 = apply %99(%96, %61, %64, %66, %98) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 119
  unreachable , scope 119                         // id: %101
} // end sil function '$ss18_CocoaArrayWrapperV13_copyContents12initializings16IndexingIteratorVyABG_SitSryyXlG_tF'

sil_scope 120 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV13_copyContents12initializings16IndexingIteratorVyAByxGG_SitSryxG_tF : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>, @owned _ContiguousArrayBuffer<τ_0_0>) -> (@owned IndexingIterator<_ContiguousArrayBuffer<τ_0_0>>, Int) }

// _ContiguousArrayBuffer._copyContents(initializing:), loc * "<compiler-generated>":0:0, scope 120
sil public_external [serialized] @$ss22_ContiguousArrayBufferV13_copyContents12initializings16IndexingIteratorVyAByxGG_SitSryxG_tF : $@convention(method) <Element> (UnsafeMutableBufferPointer<Element>, @owned _ContiguousArrayBuffer<Element>) -> (@owned IndexingIterator<_ContiguousArrayBuffer<Element>>, Int) {
[%1: escape v** => %r.0.s0.v**]
// %0                                             // users: %21, %2
// %1                                             // users: %63, %60, %54, %13, %9, %8
bb0(%0 : $UnsafeMutableBufferPointer<Element>, %1 : $_ContiguousArrayBuffer<Element>):
  %2 = struct_extract %0 : $UnsafeMutableBufferPointer<Element>, #UnsafeMutableBufferPointer.count, scope 120 // users: %18, %4
  %3 = integer_literal $Builtin.Int64, 0, scope 120 // users: %10, %5
  %4 = struct_extract %2 : $Int, #Int._value, scope 120 // users: %15, %5
  %5 = builtin "cmp_slt_Int64"(%3 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1, scope 120 // user: %6
  cond_br %5, bb2, bb1, scope 120                 // id: %6

bb1:                                              // Preds: bb0
  // function_ref _ContiguousArrayBuffer.startIndex.getter
  %7 = function_ref @$ss22_ContiguousArrayBufferV10startIndexSivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 120 // user: %8
  %8 = apply %7<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 120 // user: %9
  %9 = struct $IndexingIterator<_ContiguousArrayBuffer<Element>> (%1 : $_ContiguousArrayBuffer<Element>, %8 : $Int), scope 120 // user: %11
  %10 = struct $Int (%3 : $Builtin.Int64), scope 120 // user: %11
  br bb10(%9 : $IndexingIterator<_ContiguousArrayBuffer<Element>>, %10 : $Int), scope 120 // id: %11

bb2:                                              // Preds: bb0
  // function_ref _ContiguousArrayBuffer.count.getter
  %12 = function_ref @$ss22_ContiguousArrayBufferV5countSivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 120 // user: %13
  %13 = apply %12<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 120 // users: %17, %14
  %14 = struct_extract %13 : $Int, #Int._value, scope 120 // user: %15
  %15 = builtin "cmp_slt_Int64"(%4 : $Builtin.Int64, %14 : $Builtin.Int64) : $Builtin.Int1, scope 120 // user: %16
  cond_br %15, bb4, bb3, scope 120                // id: %16

bb3:                                              // Preds: bb2
  br bb5(%13 : $Int), scope 120                   // id: %17

bb4:                                              // Preds: bb2
  br bb5(%2 : $Int), scope 120                    // id: %18

// %19                                            // users: %64, %63, %58
bb5(%19 : $Int):                                  // Preds: bb4 bb3
  // function_ref UnsafeMutableBufferPointer.baseAddress.getter
  %20 = function_ref @$sSr11baseAddressSpyxGSgvg : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>) -> Optional<UnsafeMutablePointer<τ_0_0>>, scope 120 // user: %21
  %21 = apply %20<Element>(%0) : $@convention(method) <τ_0_0> (UnsafeMutableBufferPointer<τ_0_0>) -> Optional<UnsafeMutablePointer<τ_0_0>>, scope 120 // user: %22
  switch_enum %21 : $Optional<UnsafeMutablePointer<Element>>, case #Optional.some!enumelt: bb9, case #Optional.none!enumelt: bb6, scope 120 // id: %22

bb6:                                              // Preds: bb5
  %23 = string_literal utf8 "Swift/arm64e-apple-macos.swiftinterface", scope 120 // user: %30
  %24 = integer_literal $Builtin.Word, 39, scope 120 // user: %31
  %25 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value", scope 120 // user: %27
  %26 = integer_literal $Builtin.Word, 57, scope 120 // user: %29
  %27 = builtin "ptrtoint_Word"(%25 : $Builtin.RawPointer) : $Builtin.Word, scope 120 // user: %29
  %28 = integer_literal $Builtin.Int8, 2, scope 120 // users: %46, %31, %29
  %29 = struct $StaticString (%27 : $Builtin.Word, %26 : $Builtin.Word, %28 : $Builtin.Int8), scope 120 // user: %50
  %30 = builtin "ptrtoint_Word"(%23 : $Builtin.RawPointer) : $Builtin.Word, scope 120 // user: %31
  %31 = struct $StaticString (%30 : $Builtin.Word, %24 : $Builtin.Word, %28 : $Builtin.Int8), scope 120 // user: %50
  %32 = integer_literal $Builtin.Int64, 6175, scope 120 // user: %33
  %33 = struct $UInt (%32 : $Builtin.Int64), scope 120 // user: %50
  %34 = builtin "assert_configuration"() : $Builtin.Int32, scope 120 // users: %39, %36
  %35 = integer_literal $Builtin.Int32, 0, scope 120 // user: %36
  %36 = builtin "cmp_eq_Int32"(%34 : $Builtin.Int32, %35 : $Builtin.Int32) : $Builtin.Int1, scope 120 // user: %37
  cond_br %36, bb8, bb7, scope 120                // id: %37

bb7:                                              // Preds: bb6
  %38 = integer_literal $Builtin.Int32, 1, scope 120 // user: %39
  %39 = builtin "cmp_eq_Int32"(%34 : $Builtin.Int32, %38 : $Builtin.Int32) : $Builtin.Int1, scope 120 // user: %40
  cond_fail %39 : $Builtin.Int1, "Unexpectedly found nil while unwrapping an Optional value", scope 120 // id: %40
  %41 = builtin "conditionallyUnreachable"() : $Never, scope 120
  unreachable , scope 120                         // id: %42

bb8:                                              // Preds: bb6
  %43 = string_literal utf8 "Fatal error", scope 120 // user: %45
  %44 = integer_literal $Builtin.Word, 11, scope 120 // user: %46
  %45 = builtin "ptrtoint_Word"(%43 : $Builtin.RawPointer) : $Builtin.Word, scope 120 // user: %46
  %46 = struct $StaticString (%45 : $Builtin.Word, %44 : $Builtin.Word, %28 : $Builtin.Int8), scope 120 // user: %50
  %47 = integer_literal $Builtin.Int32, 1, scope 120 // user: %48
  %48 = struct $UInt32 (%47 : $Builtin.Int32), scope 120 // user: %50
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %49 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 120 // user: %50
  %50 = apply %49(%46, %29, %31, %33, %48) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 120
  unreachable , scope 120                         // id: %51

// %52                                            // user: %58
bb9(%52 : $UnsafeMutablePointer<Element>):        // Preds: bb5
  // function_ref _ContiguousArrayBuffer.firstElementAddress.getter
  %53 = function_ref @$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 120 // user: %54
  %54 = apply %53<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 120 // user: %55
  %55 = struct_extract %54 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 120 // user: %56
  %56 = struct $UnsafePointer<Element> (%55 : $Builtin.RawPointer), scope 120 // user: %58
  // function_ref UnsafeMutablePointer.initialize(from:count:)
  %57 = function_ref @$sSp10initialize4from5countySPyxG_SitF : $@convention(method) <τ_0_0> (UnsafePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 120 // user: %58
  %58 = apply %57<Element>(%56, %19, %52) : $@convention(method) <τ_0_0> (UnsafePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 120
  // function_ref _ContiguousArrayBuffer.owner.getter
  %59 = function_ref @$ss22_ContiguousArrayBufferV5owneryXlvg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> @owned AnyObject, scope 120 // user: %60
  %60 = apply %59<Element>(%1) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> @owned AnyObject, scope 120 // users: %62, %61
  fix_lifetime %60 : $AnyObject, scope 120        // id: %61
  strong_release %60 : $AnyObject, scope 120      // id: %62
  %63 = struct $IndexingIterator<_ContiguousArrayBuffer<Element>> (%1 : $_ContiguousArrayBuffer<Element>, %19 : $Int), scope 120 // user: %64
  br bb10(%63 : $IndexingIterator<_ContiguousArrayBuffer<Element>>, %19 : $Int), scope 120 // id: %64

// %65                                            // user: %67
// %66                                            // user: %67
bb10(%65 : $IndexingIterator<_ContiguousArrayBuffer<Element>>, %66 : $Int): // Preds: bb9 bb1
  %67 = tuple (%65 : $IndexingIterator<_ContiguousArrayBuffer<Element>>, %66 : $Int), scope 120 // user: %68
  return %67 : $(IndexingIterator<_ContiguousArrayBuffer<Element>>, Int), scope 120 // id: %68
} // end sil function '$ss22_ContiguousArrayBufferV13_copyContents12initializings16IndexingIteratorVyAByxGG_SitSryxG_tF'

sil_scope 121 { loc * "<compiler-generated>":0:0 parent @$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE8distance4from2toSiAB_ABtFs18_CocoaArrayWrapperV_Tgq5 : $@convention(method) (Int, Int, @guaranteed _CocoaArrayWrapper) -> Int }

// specialized RandomAccessCollection<>.distance(from:to:), loc * "<compiler-generated>":0:0, scope 121
sil shared [serialized] @$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE8distance4from2toSiAB_ABtFs18_CocoaArrayWrapperV_Tgq5 : $@convention(method) (Int, Int, @guaranteed _CocoaArrayWrapper) -> Int {
[%2: read v**.c*.v**, write v**.c*.v**, copy v**.c*.v**, destroy v**.c*.v**]
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // user: %3
// %1                                             // user: %4
// %2                                             // users: %53, %7
bb0(%0 : $Int, %1 : $Int, %2 : $_CocoaArrayWrapper):
  %3 = struct_extract %0 : $Int, #Int._value, scope 121 // users: %78, %49, %47, %44, %42
  %4 = struct_extract %1 : $Int, #Int._value, scope 121 // users: %78, %73, %71, %68, %66
  %5 = integer_literal $Builtin.Int64, 0, scope 121 // users: %71, %66, %57, %47, %42, %27
  // function_ref _CocoaArrayWrapper.endIndex.getter
  %6 = function_ref @$ss18_CocoaArrayWrapperV8endIndexSivg : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 121 // users: %53, %7
  %7 = apply %6(%2) : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 121 // user: %8
  %8 = struct_extract %7 : $Int, #Int._value, scope 121 // users: %49, %44, %27
  %9 = string_literal utf8 "ClosedRange requires lowerBound <= upperBound", scope 121 // user: %11
  %10 = integer_literal $Builtin.Word, 45, scope 121 // user: %13
  %11 = builtin "ptrtoint_Word"(%9 : $Builtin.RawPointer) : $Builtin.Word, scope 121 // user: %13
  %12 = integer_literal $Builtin.Int8, 2, scope 121 // users: %118, %109, %98, %89, %34, %17, %13
  %13 = struct $StaticString (%11 : $Builtin.Word, %10 : $Builtin.Word, %12 : $Builtin.Int8), scope 121 // users: %122, %102
  %14 = string_literal utf8 "Swift/arm64e-apple-macos.swiftinterface", scope 121 // user: %16
  %15 = integer_literal $Builtin.Word, 39, scope 121 // user: %17
  %16 = builtin "ptrtoint_Word"(%14 : $Builtin.RawPointer) : $Builtin.Word, scope 121 // user: %17
  %17 = struct $StaticString (%16 : $Builtin.Word, %15 : $Builtin.Word, %12 : $Builtin.Int8), scope 121 // users: %122, %113, %102, %93
  %18 = integer_literal $Builtin.Int64, 5662, scope 121 // user: %19
  %19 = struct $UInt (%18 : $Builtin.Int64), scope 121 // users: %122, %102
  %20 = builtin "assert_configuration"() : $Builtin.Int32, scope 121 // users: %63, %39, %22
  %21 = integer_literal $Builtin.Int32, 0, scope 121 // user: %22
  %22 = builtin "cmp_eq_Int32"(%20 : $Builtin.Int32, %21 : $Builtin.Int32) : $Builtin.Int1, scope 121 // users: %61, %37, %24
  %23 = integer_literal $Builtin.Int1, 0, scope 121 // users: %74, %58, %50, %28, %24
  %24 = builtin "int_expect_Int1"(%22 : $Builtin.Int1, %23 : $Builtin.Int1) : $Builtin.Int1, scope 121 // users: %55, %25
  cond_br %24, bb2, bb1, scope 121                // id: %25

bb1:                                              // Preds: bb0
  br bb4, scope 121                               // id: %26

bb2:                                              // Preds: bb0
  %27 = builtin "cmp_slt_Int64"(%8 : $Builtin.Int64, %5 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %28
  %28 = builtin "int_expect_Int1"(%27 : $Builtin.Int1, %23 : $Builtin.Int1) : $Builtin.Int1, scope 121 // user: %29
  cond_br %28, bb30, bb3, scope 121               // id: %29

bb3:                                              // Preds: bb2
  br bb4, scope 121                               // id: %30

bb4:                                              // Preds: bb3 bb1
  %31 = string_literal utf8 "Index out of bounds", scope 121 // user: %33
  %32 = integer_literal $Builtin.Word, 19, scope 121 // user: %34
  %33 = builtin "ptrtoint_Word"(%31 : $Builtin.RawPointer) : $Builtin.Word, scope 121 // user: %34
  %34 = struct $StaticString (%33 : $Builtin.Word, %32 : $Builtin.Word, %12 : $Builtin.Int8), scope 121 // users: %113, %93
  %35 = integer_literal $Builtin.Int64, 4440, scope 121 // user: %36
  %36 = struct $UInt (%35 : $Builtin.Int64), scope 121 // users: %113, %93
  cond_br %22, bb8, bb5, scope 121                // id: %37

bb5:                                              // Preds: bb4
  %38 = integer_literal $Builtin.Int32, 1, scope 121 // user: %39
  %39 = builtin "cmp_eq_Int32"(%20 : $Builtin.Int32, %38 : $Builtin.Int32) : $Builtin.Int1, scope 121 // user: %40
  cond_br %39, bb7, bb6, scope 121                // id: %40

bb6:                                              // Preds: bb5
  br bb11, scope 121                              // id: %41

bb7:                                              // Preds: bb5
  %42 = builtin "cmp_slt_Int64"(%3 : $Builtin.Int64, %5 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %43
  cond_fail %42 : $Builtin.Int1, "Index out of bounds", scope 121 // id: %43
  %44 = builtin "cmp_slt_Int64"(%8 : $Builtin.Int64, %3 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %45
  cond_fail %44 : $Builtin.Int1, "Index out of bounds", scope 121 // id: %45
  br bb11, scope 121                              // id: %46

bb8:                                              // Preds: bb4
  %47 = builtin "cmp_slt_Int64"(%3 : $Builtin.Int64, %5 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %48
  cond_br %47, bb28, bb9, scope 121               // id: %48

bb9:                                              // Preds: bb8
  %49 = builtin "cmp_slt_Int64"(%8 : $Builtin.Int64, %3 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %50
  %50 = builtin "int_expect_Int1"(%49 : $Builtin.Int1, %23 : $Builtin.Int1) : $Builtin.Int1, scope 121 // user: %51
  cond_br %50, bb27, bb10, scope 121              // id: %51

bb10:                                             // Preds: bb9
  br bb11, scope 121                              // id: %52

bb11:                                             // Preds: bb10 bb7 bb6
  %53 = apply %6(%2) : $@convention(method) (@guaranteed _CocoaArrayWrapper) -> Int, scope 121 // user: %54
  %54 = struct_extract %53 : $Int, #Int._value, scope 121 // users: %73, %68, %57
  cond_br %24, bb13, bb12, scope 121              // id: %55

bb12:                                             // Preds: bb11
  br bb15, scope 121                              // id: %56

bb13:                                             // Preds: bb11
  %57 = builtin "cmp_slt_Int64"(%54 : $Builtin.Int64, %5 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %58
  %58 = builtin "int_expect_Int1"(%57 : $Builtin.Int1, %23 : $Builtin.Int1) : $Builtin.Int1, scope 121 // user: %59
  cond_br %58, bb26, bb14, scope 121              // id: %59

bb14:                                             // Preds: bb13
  br bb15, scope 121                              // id: %60

bb15:                                             // Preds: bb14 bb12
  cond_br %22, bb19, bb16, scope 121              // id: %61

bb16:                                             // Preds: bb15
  %62 = integer_literal $Builtin.Int32, 1, scope 121 // user: %63
  %63 = builtin "cmp_eq_Int32"(%20 : $Builtin.Int32, %62 : $Builtin.Int32) : $Builtin.Int1, scope 121 // user: %64
  cond_br %63, bb18, bb17, scope 121              // id: %64

bb17:                                             // Preds: bb16
  br bb22, scope 121                              // id: %65

bb18:                                             // Preds: bb16
  %66 = builtin "cmp_slt_Int64"(%4 : $Builtin.Int64, %5 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %67
  cond_fail %66 : $Builtin.Int1, "Index out of bounds", scope 121 // id: %67
  %68 = builtin "cmp_slt_Int64"(%54 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %69
  cond_fail %68 : $Builtin.Int1, "Index out of bounds", scope 121 // id: %69
  br bb22, scope 121                              // id: %70

bb19:                                             // Preds: bb15
  %71 = builtin "cmp_slt_Int64"(%4 : $Builtin.Int64, %5 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %72
  cond_br %71, bb24, bb20, scope 121              // id: %72

bb20:                                             // Preds: bb19
  %73 = builtin "cmp_slt_Int64"(%54 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1, scope 121 // user: %74
  %74 = builtin "int_expect_Int1"(%73 : $Builtin.Int1, %23 : $Builtin.Int1) : $Builtin.Int1, scope 121 // user: %75
  cond_br %74, bb23, bb21, scope 121              // id: %75

bb21:                                             // Preds: bb20
  br bb22, scope 121                              // id: %76

bb22:                                             // Preds: bb21 bb18 bb17
  %77 = integer_literal $Builtin.Int1, -1, scope 121 // user: %78
  %78 = builtin "ssub_with_overflow_Int64"(%4 : $Builtin.Int64, %3 : $Builtin.Int64, %77 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 121 // users: %80, %79
  %79 = tuple_extract %78 : $(Builtin.Int64, Builtin.Int1), 0, scope 121 // user: %82
  %80 = tuple_extract %78 : $(Builtin.Int64, Builtin.Int1), 1, scope 121 // user: %81
  cond_fail %80 : $Builtin.Int1, "arithmetic overflow", scope 121 // id: %81
  %82 = struct $Int (%79 : $Builtin.Int64), scope 121 // user: %83
  return %82 : $Int, scope 121                    // id: %83

bb23:                                             // Preds: bb20
  br bb25, scope 121                              // id: %84

bb24:                                             // Preds: bb19
  br bb25, scope 121                              // id: %85

bb25:                                             // Preds: bb24 bb23
  %86 = string_literal utf8 "Fatal error", scope 121 // user: %88
  %87 = integer_literal $Builtin.Word, 11, scope 121 // user: %89
  %88 = builtin "ptrtoint_Word"(%86 : $Builtin.RawPointer) : $Builtin.Word, scope 121 // user: %89
  %89 = struct $StaticString (%88 : $Builtin.Word, %87 : $Builtin.Word, %12 : $Builtin.Int8), scope 121 // user: %93
  %90 = integer_literal $Builtin.Int32, 1, scope 121 // user: %91
  %91 = struct $UInt32 (%90 : $Builtin.Int32), scope 121 // user: %93
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %92 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 121 // user: %93
  %93 = apply %92(%89, %34, %17, %36, %91) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 121
  unreachable , scope 121                         // id: %94

bb26:                                             // Preds: bb13
  %95 = string_literal utf8 "Fatal error", scope 121 // user: %97
  %96 = integer_literal $Builtin.Word, 11, scope 121 // user: %98
  %97 = builtin "ptrtoint_Word"(%95 : $Builtin.RawPointer) : $Builtin.Word, scope 121 // user: %98
  %98 = struct $StaticString (%97 : $Builtin.Word, %96 : $Builtin.Word, %12 : $Builtin.Int8), scope 121 // user: %102
  %99 = integer_literal $Builtin.Int32, 1, scope 121 // user: %100
  %100 = struct $UInt32 (%99 : $Builtin.Int32), scope 121 // user: %102
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %101 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 121 // user: %102
  %102 = apply %101(%98, %13, %17, %19, %100) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 121
  unreachable , scope 121                         // id: %103

bb27:                                             // Preds: bb9
  br bb29, scope 121                              // id: %104

bb28:                                             // Preds: bb8
  br bb29, scope 121                              // id: %105

bb29:                                             // Preds: bb28 bb27
  %106 = string_literal utf8 "Fatal error", scope 121 // user: %108
  %107 = integer_literal $Builtin.Word, 11, scope 121 // user: %109
  %108 = builtin "ptrtoint_Word"(%106 : $Builtin.RawPointer) : $Builtin.Word, scope 121 // user: %109
  %109 = struct $StaticString (%108 : $Builtin.Word, %107 : $Builtin.Word, %12 : $Builtin.Int8), scope 121 // user: %113
  %110 = integer_literal $Builtin.Int32, 1, scope 121 // user: %111
  %111 = struct $UInt32 (%110 : $Builtin.Int32), scope 121 // user: %113
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %112 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 121 // user: %113
  %113 = apply %112(%109, %34, %17, %36, %111) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 121
  unreachable , scope 121                         // id: %114

bb30:                                             // Preds: bb2
  %115 = string_literal utf8 "Fatal error", scope 121 // user: %117
  %116 = integer_literal $Builtin.Word, 11, scope 121 // user: %118
  %117 = builtin "ptrtoint_Word"(%115 : $Builtin.RawPointer) : $Builtin.Word, scope 121 // user: %118
  %118 = struct $StaticString (%117 : $Builtin.Word, %116 : $Builtin.Word, %12 : $Builtin.Int8), scope 121 // user: %122
  %119 = integer_literal $Builtin.Int32, 1, scope 121 // user: %120
  %120 = struct $UInt32 (%119 : $Builtin.Int32), scope 121 // user: %122
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %121 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 121 // user: %122
  %122 = apply %121(%118, %13, %17, %19, %120) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 121
  unreachable , scope 121                         // id: %123
} // end sil function '$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE8distance4from2toSiAB_ABtFs18_CocoaArrayWrapperV_Tgq5'

sil_scope 122 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV10startIndexSivg : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int }

// _ContiguousArrayBuffer.startIndex.getter, loc * "<compiler-generated>":0:0, scope 122
sil public_external [serialized] @$ss22_ContiguousArrayBufferV10startIndexSivg : $@convention(method) <Element> (@guaranteed _ContiguousArrayBuffer<Element>) -> Int {
[%0: noescape **]
bb0(%0 : $_ContiguousArrayBuffer<Element>):
  %1 = integer_literal $Builtin.Int64, 0, scope 122 // user: %2
  %2 = struct $Int (%1 : $Builtin.Int64), scope 122 // user: %3
  return %2 : $Int, scope 122                     // id: %3
} // end sil function '$ss22_ContiguousArrayBufferV10startIndexSivg'


// _CocoaArrayWrapper.subscript.getter, loc * "<compiler-generated>":0:0, scope 0
sil @$ss18_CocoaArrayWrapperVyyXlSicig : $@convention(method) (Int, @guaranteed _CocoaArrayWrapper) -> @owned AnyObject

sil_scope 123 { loc * "<compiler-generated>":0:0 parent @$sSS12_createEmpty19withInitialCapacitySSSi_tFZ : $@convention(method) (Int, @thin String.Type) -> @owned String }

// static String._createEmpty(withInitialCapacity:), loc * "<compiler-generated>":0:0, scope 123
sil shared [serialized] [_semantics "inline_late"] [_semantics "string.init_empty_with_capacity"] @$sSS12_createEmpty19withInitialCapacitySSSi_tFZ : $@convention(method) (Int, @thin String.Type) -> @owned String {
[global: read,write,copy,destroy,allocate,deinit_barrier]
// %0                                             // users: %18, %11
bb0(%0 : $Int, %1 : $@thin String.Type):
  %2 = alloc_stack $_StringGuts, scope 123        // users: %21, %20, %18, %9
  %3 = integer_literal $Builtin.Int64, 0, scope 123 // user: %6
  %4 = integer_literal $Builtin.Int64, -2305843009213693952, scope 123 // user: %5
  %5 = value_to_bridge_object %4 : $Builtin.Int64, scope 123 // user: %7
  %6 = struct $UInt64 (%3 : $Builtin.Int64), scope 123 // user: %7
  %7 = struct $_StringObject (%6 : $UInt64, %5 : $Builtin.BridgeObject), scope 123 // user: %8
  %8 = struct $_StringGuts (%7 : $_StringObject), scope 123 // user: %9
  store %8 to %2 : $*_StringGuts, scope 123       // id: %9
  %10 = integer_literal $Builtin.Int64, 15, scope 123 // user: %12
  %11 = struct_extract %0 : $Int, #Int._value, scope 123 // user: %12
  %12 = builtin "cmp_slt_Int64"(%10 : $Builtin.Int64, %11 : $Builtin.Int64) : $Builtin.Int1, scope 123 // user: %14
  %13 = integer_literal $Builtin.Int1, 0, scope 123 // user: %14
  %14 = builtin "int_expect_Int1"(%12 : $Builtin.Int1, %13 : $Builtin.Int1) : $Builtin.Int1, scope 123 // user: %15
  cond_br %14, bb2, bb1, scope 123                // id: %15

bb1:                                              // Preds: bb0
  br bb3, scope 123                               // id: %16

bb2:                                              // Preds: bb0
  // function_ref _StringGuts.grow(_:)
  %17 = function_ref @$ss11_StringGutsV4growyySiF : $@convention(method) (Int, @inout _StringGuts) -> (), scope 123 // user: %18
  %18 = apply %17(%0, %2) : $@convention(method) (Int, @inout _StringGuts) -> (), scope 123
  br bb3, scope 123                               // id: %19

bb3:                                              // Preds: bb2 bb1
  %20 = load %2 : $*_StringGuts, scope 123        // user: %22
  dealloc_stack %2 : $*_StringGuts, scope 123     // id: %21
  %22 = struct $String (%20 : $_StringGuts), scope 123 // user: %23
  return %22 : $String, scope 123                 // id: %23
} // end sil function '$sSS12_createEmpty19withInitialCapacitySSSi_tFZ'

sil_scope 124 { loc * "<compiler-generated>":0:0 parent @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String }

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:), loc * "<compiler-generated>":0:0, scope 124
sil public_external [serialized] [always_inline] [readonly] [_semantics "string.makeUTF8"] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String {
// %0                                             // users: %335, %186, %164, %139, %91, %83
// %1                                             // user: %4
// %2                                             // user: %326
bb0(%0 : $Builtin.RawPointer, %1 : $Builtin.Word, %2 : $Builtin.Int1, %3 : $@thin String.Type):
  %4 = builtin "sextOrBitCast_Word_Int64"(%1 : $Builtin.Word) : $Builtin.Int64, scope 124 // users: %27, %23
  %5 = string_literal utf8 "UnsafeBufferPointer with negative count", scope 124 // user: %7
  %6 = integer_literal $Builtin.Word, 39, scope 124 // users: %51, %39, %12, %9
  %7 = builtin "ptrtoint_Word"(%5 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %9
  %8 = integer_literal $Builtin.Int8, 2, scope 124 // users: %367, %320, %310, %301, %264, %254, %199, %104, %51, %39, %12, %9
  %9 = struct $StaticString (%7 : $Builtin.Word, %6 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %371
  %10 = string_literal utf8 "Swift/arm64e-apple-macos.swiftinterface", scope 124 // user: %11
  %11 = builtin "ptrtoint_Word"(%10 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %12
  %12 = struct $StaticString (%11 : $Builtin.Word, %6 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // users: %371, %324, %314, %305, %268, %258
  %13 = integer_literal $Builtin.Int64, 35331, scope 124 // user: %14
  %14 = struct $UInt (%13 : $Builtin.Int64), scope 124 // user: %371
  %15 = builtin "assert_configuration"() : $Builtin.Int32, scope 124 // users: %204, %160, %109, %79, %56, %44, %17
  %16 = integer_literal $Builtin.Int32, 0, scope 124 // user: %17
  %17 = builtin "cmp_eq_Int32"(%15 : $Builtin.Int32, %16 : $Builtin.Int32) : $Builtin.Int1, scope 124 // users: %158, %77, %54, %42, %19
  %18 = integer_literal $Builtin.Int1, 0, scope 124 // users: %338, %245, %224, %176, %156, %148, %129, %87, %75, %24, %19
  %19 = builtin "int_expect_Int1"(%17 : $Builtin.Int1, %18 : $Builtin.Int1) : $Builtin.Int1, scope 124 // users: %202, %107, %20
  cond_br %19, bb2, bb1, scope 124                // id: %20

bb1:                                              // Preds: bb0
  br bb4, scope 124                               // id: %21

bb2:                                              // Preds: bb0
  %22 = integer_literal $Builtin.Int64, 0, scope 124 // user: %23
  %23 = builtin "cmp_slt_Int64"(%4 : $Builtin.Int64, %22 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %24
  %24 = builtin "int_expect_Int1"(%23 : $Builtin.Int1, %18 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %25
  cond_br %24, bb90, bb3, scope 124               // id: %25

bb3:                                              // Preds: bb2
  br bb4, scope 124                               // id: %26

bb4:                                              // Preds: bb3 bb1
  %27 = builtin "assumeNonNegative_Int64"(%4 : $Builtin.Int64) : $Builtin.Int64, scope 124 // users: %329, %327, %289, %156, %75, %48, %47, %46, %35, %32, %29
  %28 = integer_literal $Builtin.Int64, 0, scope 124 // users: %349, %281, %270, %223, %216, %209, %207, %186, %186, %186, %184, %175, %172, %165, %164, %164, %164, %162, %155, %128, %121, %114, %112, %94, %94, %94, %92, %92, %91, %91, %91, %91, %89, %86, %85, %84, %84, %83, %83, %83, %83, %81, %74, %74, %72, %71, %71, %71, %69, %63, %58, %58, %58, %46, %46, %46, %29
  %29 = builtin "cmp_eq_Int64"(%27 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %30
  cond_br %29, bb87, bb5, scope 124               // id: %30

bb5:                                              // Preds: bb4
  %31 = integer_literal $Builtin.Int64, 15, scope 124 // user: %32
  %32 = builtin "cmp_slt_Int64"(%31 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %33
  cond_br %32, bb83, bb6, scope 124               // id: %33

bb6:                                              // Preds: bb5
  %34 = integer_literal $Builtin.Int64, 8, scope 124 // users: %245, %156, %148, %94, %75, %59, %58, %35
  %35 = builtin "cmp_slt_Int64"(%34 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int1, scope 124 // users: %154, %73, %36
  cond_br %35, bb12, bb7, scope 124               // id: %36

bb7:                                              // Preds: bb6
  %37 = string_literal utf8 "Range requires lowerBound <= upperBound", scope 124 // user: %38
  %38 = builtin "ptrtoint_Word"(%37 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %39
  %39 = struct $StaticString (%38 : $Builtin.Word, %6 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // users: %48, %47, %46
  %40 = integer_literal $Builtin.Int64, 16122, scope 124 // user: %41
  %41 = struct $UInt (%40 : $Builtin.Int64), scope 124 // users: %48, %47, %46
  cond_br %17, bb11, bb8, scope 124               // id: %42

bb8:                                              // Preds: bb7
  %43 = integer_literal $Builtin.Int32, 1, scope 124 // user: %44
  %44 = builtin "cmp_eq_Int32"(%15 : $Builtin.Int32, %43 : $Builtin.Int32) : $Builtin.Int1, scope 124 // user: %45
  cond_br %44, bb10, bb9, scope 124               // id: %45

bb9:                                              // Preds: bb8
  br bb33(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %27 : $Builtin.Int64, %39 : $StaticString, %41 : $UInt), scope 124 // id: %46

bb10:                                             // Preds: bb8
  br bb16(%27 : $Builtin.Int64, %39 : $StaticString, %41 : $UInt), scope 124 // id: %47

bb11:                                             // Preds: bb7
  br bb17(%27 : $Builtin.Int64, %39 : $StaticString, %41 : $UInt), scope 124 // id: %48

bb12:                                             // Preds: bb6
  %49 = string_literal utf8 "Range requires lowerBound <= upperBound", scope 124 // user: %50
  %50 = builtin "ptrtoint_Word"(%49 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %51
  %51 = struct $StaticString (%50 : $Builtin.Word, %6 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // users: %94, %59, %58
  %52 = integer_literal $Builtin.Int64, 16122, scope 124 // user: %53
  %53 = struct $UInt (%52 : $Builtin.Int64), scope 124 // users: %94, %59, %58
  cond_br %17, bb32, bb13, scope 124              // id: %54

bb13:                                             // Preds: bb12
  %55 = integer_literal $Builtin.Int32, 1, scope 124 // user: %56
  %56 = builtin "cmp_eq_Int32"(%15 : $Builtin.Int32, %55 : $Builtin.Int32) : $Builtin.Int1, scope 124 // user: %57
  cond_br %56, bb15, bb14, scope 124              // id: %57

bb14:                                             // Preds: bb13
  br bb33(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %34 : $Builtin.Int64, %51 : $StaticString, %53 : $UInt), scope 124 // id: %58

bb15:                                             // Preds: bb13
  br bb16(%34 : $Builtin.Int64, %51 : $StaticString, %53 : $UInt), scope 124 // id: %59

// %60                                            // users: %65, %63
// %61                                            // user: %65
// %62                                            // user: %65
bb16(%60 : $Builtin.Int64, %61 : $StaticString, %62 : $UInt): // Preds: bb15 bb10
  %63 = builtin "cmp_slt_Int64"(%60 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %64
  cond_fail %63 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 124 // id: %64
  br bb17(%60 : $Builtin.Int64, %61 : $StaticString, %62 : $UInt), scope 124 // id: %65

// %66                                            // users: %71, %69
// %67                                            // users: %93, %91, %85, %83, %71
// %68                                            // users: %93, %91, %85, %83, %71
bb17(%66 : $Builtin.Int64, %67 : $StaticString, %68 : $UInt): // Preds: bb16 bb11
  %69 = builtin "cmp_eq_Int64"(%66 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %70
  cond_br %69, bb19, bb18, scope 124              // id: %70

bb18:                                             // Preds: bb17
  br bb33(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %66 : $Builtin.Int64, %67 : $StaticString, %68 : $UInt), scope 124 // id: %71

bb19:                                             // Preds: bb17
  %72 = struct $UInt64 (%28 : $Builtin.Int64), scope 124 // users: %92, %91, %85, %84, %83, %74
  cond_br %35, bb21, bb20, scope 124              // id: %73

bb20:                                             // Preds: bb19
  br bb74(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %72 : $UInt64), scope 124 // id: %74

bb21:                                             // Preds: bb19
  %75 = builtin "ssub_with_overflow_Int64"(%27 : $Builtin.Int64, %34 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 124 // user: %76
  %76 = tuple_extract %75 : $(Builtin.Int64, Builtin.Int1), 0, scope 124 // users: %91, %89, %86, %85, %83, %81
  cond_br %17, bb27, bb22, scope 124              // id: %77

bb22:                                             // Preds: bb21
  %78 = integer_literal $Builtin.Int32, 1, scope 124 // user: %79
  %79 = builtin "cmp_eq_Int32"(%15 : $Builtin.Int32, %78 : $Builtin.Int32) : $Builtin.Int1, scope 124 // user: %80
  cond_br %79, bb26, bb23, scope 124              // id: %80

bb23:                                             // Preds: bb22
  %81 = builtin "cmp_eq_Int64"(%76 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %82
  cond_br %81, bb25, bb24, scope 124              // id: %82

bb24:                                             // Preds: bb23
  br bb57(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %72 : $UInt64, %0 : $Builtin.RawPointer, %76 : $Builtin.Int64, %67 : $StaticString, %68 : $UInt), scope 124 // id: %83

bb25:                                             // Preds: bb23
  br bb73(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %72 : $UInt64), scope 124 // id: %84

bb26:                                             // Preds: bb22
  br bb52(%28 : $Builtin.Int64, %72 : $UInt64, %76 : $Builtin.Int64, %67 : $StaticString, %68 : $UInt), scope 124 // id: %85

bb27:                                             // Preds: bb21
  %86 = builtin "cmp_slt_Int64"(%76 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %87
  %87 = builtin "int_expect_Int1"(%86 : $Builtin.Int1, %18 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %88
  cond_br %87, bb31, bb28, scope 124              // id: %88

bb28:                                             // Preds: bb27
  %89 = builtin "cmp_eq_Int64"(%76 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %90
  cond_br %89, bb30, bb29, scope 124              // id: %90

bb29:                                             // Preds: bb28
  br bb57(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %72 : $UInt64, %0 : $Builtin.RawPointer, %76 : $Builtin.Int64, %67 : $StaticString, %68 : $UInt), scope 124 // id: %91

bb30:                                             // Preds: bb28
  br bb73(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %72 : $UInt64), scope 124 // id: %92

bb31:                                             // Preds: bb27
  br bb79(%67 : $StaticString, %68 : $UInt), scope 124 // id: %93

bb32:                                             // Preds: bb12
  br bb33(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %34 : $Builtin.Int64, %51 : $StaticString, %53 : $UInt), scope 124 // id: %94

// %95                                            // users: %148, %145
// %96                                            // user: %147
// %97                                            // users: %138, %134, %123, %121, %116, %114
// %98                                            // users: %152, %150, %128, %123, %116, %112
// %99                                            // users: %314, %295, %178, %166, %164, %152
// %100                                           // users: %314, %295, %178, %166, %164, %152
bb33(%95 : $Builtin.Int64, %96 : $Builtin.Int64, %97 : $Builtin.Int64, %98 : $Builtin.Int64, %99 : $StaticString, %100 : $UInt): // Preds: bb43 bb32 bb18 bb14 bb9
  %101 = string_literal utf8 "Index out of range", scope 124 // user: %103
  %102 = integer_literal $Builtin.Word, 18, scope 124 // user: %104
  %103 = builtin "ptrtoint_Word"(%101 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %104
  %104 = struct $StaticString (%103 : $Builtin.Word, %102 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %324
  %105 = integer_literal $Builtin.Int64, 15982, scope 124 // user: %106
  %106 = struct $UInt (%105 : $Builtin.Int64), scope 124 // user: %324
  cond_br %19, bb37, bb34, scope 124              // id: %107

bb34:                                             // Preds: bb33
  %108 = integer_literal $Builtin.Int32, 1, scope 124 // user: %109
  %109 = builtin "cmp_eq_Int32"(%15 : $Builtin.Int32, %108 : $Builtin.Int32) : $Builtin.Int1, scope 124 // user: %110
  cond_br %109, bb36, bb35, scope 124             // id: %110

bb35:                                             // Preds: bb34
  br bb42, scope 124                              // id: %111

bb36:                                             // Preds: bb34
  %112 = builtin "cmp_slt_Int64"(%98 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %113
  cond_fail %112 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 124 // id: %113
  %114 = builtin "cmp_slt_Int64"(%97 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %115
  cond_fail %114 : $Builtin.Int1, "Index out of bounds", scope 124 // id: %115
  %116 = builtin "cmp_slt_Int64"(%97 : $Builtin.Int64, %98 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %118
  %117 = integer_literal $Builtin.Int1, -1, scope 124 // user: %118
  %118 = builtin "xor_Int1"(%116 : $Builtin.Int1, %117 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %119
  cond_fail %118 : $Builtin.Int1, "Index out of bounds", scope 124 // id: %119
  br bb42, scope 124                              // id: %120

bb37:                                             // Preds: bb33
  %121 = builtin "cmp_slt_Int64"(%97 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %122
  cond_br %121, bb81, bb38, scope 124             // id: %122

bb38:                                             // Preds: bb37
  %123 = builtin "cmp_slt_Int64"(%97 : $Builtin.Int64, %98 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %125
  %124 = integer_literal $Builtin.Int1, -1, scope 124 // user: %125
  %125 = builtin "int_expect_Int1"(%123 : $Builtin.Int1, %124 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %126
  cond_br %125, bb40, bb39, scope 124             // id: %126

bb39:                                             // Preds: bb38
  br bb82, scope 124                              // id: %127

bb40:                                             // Preds: bb38
  %128 = builtin "cmp_slt_Int64"(%98 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %129
  %129 = builtin "int_expect_Int1"(%128 : $Builtin.Int1, %18 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %130
  cond_br %129, bb80, bb41, scope 124             // id: %130

bb41:                                             // Preds: bb40
  br bb42, scope 124                              // id: %131

bb42:                                             // Preds: bb41 bb36 bb35
  %132 = integer_literal $Builtin.Int64, 1, scope 124 // user: %134
  %133 = integer_literal $Builtin.Int1, -1, scope 124 // user: %134
  %134 = builtin "sadd_with_overflow_Int64"(%97 : $Builtin.Int64, %132 : $Builtin.Int64, %133 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 124 // users: %136, %135
  %135 = tuple_extract %134 : $(Builtin.Int64, Builtin.Int1), 0, scope 124 // users: %152, %150
  %136 = tuple_extract %134 : $(Builtin.Int64, Builtin.Int1), 1, scope 124 // user: %137
  cond_fail %136 : $Builtin.Int1, "arithmetic overflow", scope 124 // id: %137
  %138 = builtin "truncOrBitCast_Int64_Word"(%97 : $Builtin.Int64) : $Builtin.Word, scope 124 // user: %140
  %139 = pointer_to_address %0 : $Builtin.RawPointer to [strict] $*UInt8, scope 124 // user: %140
  %140 = index_addr [stack_protection] %139 : $*UInt8, %138 : $Builtin.Word, scope 124 // user: %141
  %141 = struct_element_addr %140 : $*UInt8, #UInt8._value, scope 124 // user: %142
  %142 = load %141 : $*Builtin.Int8, scope 124    // user: %143
  %143 = builtin "zextOrBitCast_Int8_Int64"(%142 : $Builtin.Int8) : $Builtin.Int64, scope 124 // user: %146
  %144 = integer_literal $Builtin.Int64, 63, scope 124 // user: %145
  %145 = builtin "and_Int64"(%95 : $Builtin.Int64, %144 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %146
  %146 = builtin "shl_Int64"(%143 : $Builtin.Int64, %145 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %147
  %147 = builtin "or_Int64"(%96 : $Builtin.Int64, %146 : $Builtin.Int64) : $Builtin.Int64, scope 124 // users: %178, %166, %165, %164, %155, %153, %152
  %148 = builtin "sadd_with_overflow_Int64"(%95 : $Builtin.Int64, %34 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 124 // user: %149
  %149 = tuple_extract %148 : $(Builtin.Int64, Builtin.Int1), 0, scope 124 // user: %152
  %150 = builtin "cmp_eq_Int64"(%135 : $Builtin.Int64, %98 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %151
  cond_br %150, bb44, bb43, scope 124             // id: %151

bb43:                                             // Preds: bb42
  br bb33(%149 : $Builtin.Int64, %147 : $Builtin.Int64, %135 : $Builtin.Int64, %98 : $Builtin.Int64, %99 : $StaticString, %100 : $UInt), scope 124 // id: %152

bb44:                                             // Preds: bb42
  %153 = struct $UInt64 (%147 : $Builtin.Int64), scope 124 // users: %178, %166, %165, %164, %155
  cond_br %35, bb46, bb45, scope 124              // id: %154

bb45:                                             // Preds: bb44
  br bb74(%28 : $Builtin.Int64, %147 : $Builtin.Int64, %153 : $UInt64), scope 124 // id: %155

bb46:                                             // Preds: bb44
  %156 = builtin "ssub_with_overflow_Int64"(%27 : $Builtin.Int64, %34 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 124 // user: %157
  %157 = tuple_extract %156 : $(Builtin.Int64, Builtin.Int1), 0, scope 124 // users: %178, %175, %166, %164, %162
  cond_br %17, bb53, bb47, scope 124              // id: %158

bb47:                                             // Preds: bb46
  %159 = integer_literal $Builtin.Int32, 1, scope 124 // user: %160
  %160 = builtin "cmp_eq_Int32"(%15 : $Builtin.Int32, %159 : $Builtin.Int32) : $Builtin.Int1, scope 124 // user: %161
  cond_br %160, bb51, bb48, scope 124             // id: %161

bb48:                                             // Preds: bb47
  %162 = builtin "cmp_eq_Int64"(%157 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %163
  cond_br %162, bb50, bb49, scope 124             // id: %163

bb49:                                             // Preds: bb48
  br bb57(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %147 : $Builtin.Int64, %153 : $UInt64, %0 : $Builtin.RawPointer, %157 : $Builtin.Int64, %99 : $StaticString, %100 : $UInt), scope 124 // id: %164

bb50:                                             // Preds: bb48
  br bb73(%28 : $Builtin.Int64, %147 : $Builtin.Int64, %153 : $UInt64), scope 124 // id: %165

bb51:                                             // Preds: bb47
  br bb52(%147 : $Builtin.Int64, %153 : $UInt64, %157 : $Builtin.Int64, %99 : $StaticString, %100 : $UInt), scope 124 // id: %166

// %167                                           // user: %174
// %168                                           // user: %174
// %169                                           // users: %174, %172
// %170                                           // user: %174
// %171                                           // user: %174
bb52(%167 : $Builtin.Int64, %168 : $UInt64, %169 : $Builtin.Int64, %170 : $StaticString, %171 : $UInt): // Preds: bb51 bb26
  %172 = builtin "cmp_slt_Int64"(%169 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %173
  cond_fail %172 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 124 // id: %173
  br bb55(%167 : $Builtin.Int64, %168 : $UInt64, %169 : $Builtin.Int64, %170 : $StaticString, %171 : $UInt), scope 124 // id: %174

bb53:                                             // Preds: bb46
  %175 = builtin "cmp_slt_Int64"(%157 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %176
  %176 = builtin "int_expect_Int1"(%175 : $Builtin.Int1, %18 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %177
  cond_br %176, bb78, bb54, scope 124             // id: %177

bb54:                                             // Preds: bb53
  br bb55(%147 : $Builtin.Int64, %153 : $UInt64, %157 : $Builtin.Int64, %99 : $StaticString, %100 : $UInt), scope 124 // id: %178

// %179                                           // users: %270, %186
// %180                                           // users: %270, %186
// %181                                           // users: %186, %184
// %182                                           // user: %186
// %183                                           // user: %186
bb55(%179 : $Builtin.Int64, %180 : $UInt64, %181 : $Builtin.Int64, %182 : $StaticString, %183 : $UInt): // Preds: bb54 bb52
  %184 = builtin "cmp_eq_Int64"(%181 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %185
  cond_br %184, bb72, bb56, scope 124             // id: %185

bb56:                                             // Preds: bb55
  br bb57(%28 : $Builtin.Int64, %28 : $Builtin.Int64, %28 : $Builtin.Int64, %179 : $Builtin.Int64, %180 : $UInt64, %0 : $Builtin.RawPointer, %181 : $Builtin.Int64, %182 : $StaticString, %183 : $UInt), scope 124 // id: %186

// %187                                           // users: %245, %242
// %188                                           // user: %244
// %189                                           // users: %233, %229, %218, %216, %211, %209
// %190                                           // users: %250, %249
// %191                                           // users: %250, %249
// %192                                           // users: %249, %234
// %193                                           // users: %249, %247, %223, %218, %211, %207
// %194                                           // users: %258, %249
// %195                                           // users: %258, %249
bb57(%187 : $Builtin.Int64, %188 : $Builtin.Int64, %189 : $Builtin.Int64, %190 : $Builtin.Int64, %191 : $UInt64, %192 : $Builtin.RawPointer, %193 : $Builtin.Int64, %194 : $StaticString, %195 : $UInt): // Preds: bb67 bb56 bb49 bb29 bb24
  %196 = string_literal utf8 "Index out of range", scope 124 // user: %198
  %197 = integer_literal $Builtin.Word, 18, scope 124 // user: %199
  %198 = builtin "ptrtoint_Word"(%196 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %199
  %199 = struct $StaticString (%198 : $Builtin.Word, %197 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %268
  %200 = integer_literal $Builtin.Int64, 15982, scope 124 // user: %201
  %201 = struct $UInt (%200 : $Builtin.Int64), scope 124 // user: %268
  cond_br %19, bb61, bb58, scope 124              // id: %202

bb58:                                             // Preds: bb57
  %203 = integer_literal $Builtin.Int32, 1, scope 124 // user: %204
  %204 = builtin "cmp_eq_Int32"(%15 : $Builtin.Int32, %203 : $Builtin.Int32) : $Builtin.Int1, scope 124 // user: %205
  cond_br %204, bb60, bb59, scope 124             // id: %205

bb59:                                             // Preds: bb58
  br bb66, scope 124                              // id: %206

bb60:                                             // Preds: bb58
  %207 = builtin "cmp_slt_Int64"(%193 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %208
  cond_fail %207 : $Builtin.Int1, "Range requires lowerBound <= upperBound", scope 124 // id: %208
  %209 = builtin "cmp_slt_Int64"(%189 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %210
  cond_fail %209 : $Builtin.Int1, "Index out of bounds", scope 124 // id: %210
  %211 = builtin "cmp_slt_Int64"(%189 : $Builtin.Int64, %193 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %213
  %212 = integer_literal $Builtin.Int1, -1, scope 124 // user: %213
  %213 = builtin "xor_Int1"(%211 : $Builtin.Int1, %212 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %214
  cond_fail %213 : $Builtin.Int1, "Index out of bounds", scope 124 // id: %214
  br bb66, scope 124                              // id: %215

bb61:                                             // Preds: bb57
  %216 = builtin "cmp_slt_Int64"(%189 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %217
  cond_br %216, bb70, bb62, scope 124             // id: %217

bb62:                                             // Preds: bb61
  %218 = builtin "cmp_slt_Int64"(%189 : $Builtin.Int64, %193 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %220
  %219 = integer_literal $Builtin.Int1, -1, scope 124 // user: %220
  %220 = builtin "int_expect_Int1"(%218 : $Builtin.Int1, %219 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %221
  cond_br %220, bb64, bb63, scope 124             // id: %221

bb63:                                             // Preds: bb62
  br bb71, scope 124                              // id: %222

bb64:                                             // Preds: bb62
  %223 = builtin "cmp_slt_Int64"(%193 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %224
  %224 = builtin "int_expect_Int1"(%223 : $Builtin.Int1, %18 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %225
  cond_br %224, bb69, bb65, scope 124             // id: %225

bb65:                                             // Preds: bb64
  br bb66, scope 124                              // id: %226

bb66:                                             // Preds: bb65 bb60 bb59
  %227 = integer_literal $Builtin.Int64, 1, scope 124 // user: %229
  %228 = integer_literal $Builtin.Int1, -1, scope 124 // user: %229
  %229 = builtin "sadd_with_overflow_Int64"(%189 : $Builtin.Int64, %227 : $Builtin.Int64, %228 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 124 // users: %231, %230
  %230 = tuple_extract %229 : $(Builtin.Int64, Builtin.Int1), 0, scope 124 // users: %249, %247
  %231 = tuple_extract %229 : $(Builtin.Int64, Builtin.Int1), 1, scope 124 // user: %232
  cond_fail %231 : $Builtin.Int1, "arithmetic overflow", scope 124 // id: %232
  %233 = builtin "truncOrBitCast_Int64_Word"(%189 : $Builtin.Int64) : $Builtin.Word, scope 124 // user: %237
  %234 = pointer_to_address %192 : $Builtin.RawPointer to [strict] $*UInt8, scope 124 // user: %236
  %235 = integer_literal $Builtin.Word, 8, scope 124 // user: %236
  %236 = index_addr [stack_protection] %234 : $*UInt8, %235 : $Builtin.Word, scope 124 // user: %237
  %237 = index_addr [stack_protection] %236 : $*UInt8, %233 : $Builtin.Word, scope 124 // user: %238
  %238 = struct_element_addr %237 : $*UInt8, #UInt8._value, scope 124 // user: %239
  %239 = load %238 : $*Builtin.Int8, scope 124    // user: %240
  %240 = builtin "zextOrBitCast_Int8_Int64"(%239 : $Builtin.Int8) : $Builtin.Int64, scope 124 // user: %243
  %241 = integer_literal $Builtin.Int64, 63, scope 124 // user: %242
  %242 = builtin "and_Int64"(%187 : $Builtin.Int64, %241 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %243
  %243 = builtin "shl_Int64"(%240 : $Builtin.Int64, %242 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %244
  %244 = builtin "or_Int64"(%188 : $Builtin.Int64, %243 : $Builtin.Int64) : $Builtin.Int64, scope 124 // users: %250, %249
  %245 = builtin "sadd_with_overflow_Int64"(%187 : $Builtin.Int64, %34 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 124 // user: %246
  %246 = tuple_extract %245 : $(Builtin.Int64, Builtin.Int1), 0, scope 124 // user: %249
  %247 = builtin "cmp_eq_Int64"(%230 : $Builtin.Int64, %193 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %248
  cond_br %247, bb68, bb67, scope 124             // id: %248

bb67:                                             // Preds: bb66
  br bb57(%246 : $Builtin.Int64, %244 : $Builtin.Int64, %230 : $Builtin.Int64, %190 : $Builtin.Int64, %191 : $UInt64, %192 : $Builtin.RawPointer, %193 : $Builtin.Int64, %194 : $StaticString, %195 : $UInt), scope 124 // id: %249

bb68:                                             // Preds: bb66
  br bb73(%244 : $Builtin.Int64, %190 : $Builtin.Int64, %191 : $UInt64), scope 124 // id: %250

bb69:                                             // Preds: bb64
  %251 = string_literal utf8 "Fatal error", scope 124 // user: %253
  %252 = integer_literal $Builtin.Word, 11, scope 124 // user: %254
  %253 = builtin "ptrtoint_Word"(%251 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %254
  %254 = struct $StaticString (%253 : $Builtin.Word, %252 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %258
  %255 = integer_literal $Builtin.Int32, 1, scope 124 // user: %256
  %256 = struct $UInt32 (%255 : $Builtin.Int32), scope 124 // user: %258
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %257 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124 // user: %258
  %258 = apply %257(%254, %194, %12, %195, %256) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124
  unreachable , scope 124                         // id: %259

bb70:                                             // Preds: bb61
  br bb71, scope 124                              // id: %260

bb71:                                             // Preds: bb70 bb63
  %261 = string_literal utf8 "Fatal error", scope 124 // user: %263
  %262 = integer_literal $Builtin.Word, 11, scope 124 // user: %264
  %263 = builtin "ptrtoint_Word"(%261 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %264
  %264 = struct $StaticString (%263 : $Builtin.Word, %262 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %268
  %265 = integer_literal $Builtin.Int32, 1, scope 124 // user: %266
  %266 = struct $UInt32 (%265 : $Builtin.Int32), scope 124 // user: %268
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %267 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124 // user: %268
  %268 = apply %267(%264, %199, %12, %201, %266) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124
  unreachable , scope 124                         // id: %269

bb72:                                             // Preds: bb55
  br bb73(%28 : $Builtin.Int64, %179 : $Builtin.Int64, %180 : $UInt64), scope 124 // id: %270

// %271                                           // user: %274
// %272                                           // user: %274
// %273                                           // user: %274
bb73(%271 : $Builtin.Int64, %272 : $Builtin.Int64, %273 : $UInt64): // Preds: bb72 bb68 bb50 bb30 bb25
  br bb74(%271 : $Builtin.Int64, %272 : $Builtin.Int64, %273 : $UInt64), scope 124 // id: %274

// %275                                           // users: %291, %278
// %276                                           // user: %278
// %277                                           // user: %293
bb74(%275 : $Builtin.Int64, %276 : $Builtin.Int64, %277 : $UInt64): // Preds: bb73 bb45 bb20
  %278 = builtin "or_Int64"(%276 : $Builtin.Int64, %275 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %280
  %279 = integer_literal $Builtin.Int64, -9187201950435737472, scope 124 // user: %280
  %280 = builtin "and_Int64"(%278 : $Builtin.Int64, %279 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %281
  %281 = builtin "cmp_eq_Int64"(%280 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 124 // user: %282
  cond_br %281, bb76, bb75, scope 124             // id: %282

bb75:                                             // Preds: bb74
  %283 = integer_literal $Builtin.Int64, -6917529027641081856, scope 124 // user: %284
  br bb77(%283 : $Builtin.Int64), scope 124       // id: %284

bb76:                                             // Preds: bb74
  %285 = integer_literal $Builtin.Int64, -2305843009213693952, scope 124 // user: %286
  br bb77(%285 : $Builtin.Int64), scope 124       // id: %286

// %287                                           // user: %290
bb77(%287 : $Builtin.Int64):                      // Preds: bb76 bb75
  %288 = integer_literal $Builtin.Int64, 56, scope 124 // user: %289
  %289 = builtin "shl_Int64"(%27 : $Builtin.Int64, %288 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %290
  %290 = builtin "or_Int64"(%287 : $Builtin.Int64, %289 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %291
  %291 = builtin "or_Int64"(%275 : $Builtin.Int64, %290 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %292
  %292 = struct $UInt64 (%291 : $Builtin.Int64), scope 124 // user: %293
  %293 = tuple (%277 : $UInt64, %292 : $UInt64), scope 124 // user: %294
  br bb88(%293 : $(UInt64, UInt64)), scope 124    // id: %294

bb78:                                             // Preds: bb53
  br bb79(%99 : $StaticString, %100 : $UInt), scope 124 // id: %295

// %296                                           // user: %305
// %297                                           // user: %305
bb79(%296 : $StaticString, %297 : $UInt):         // Preds: bb78 bb31
  %298 = string_literal utf8 "Fatal error", scope 124 // user: %300
  %299 = integer_literal $Builtin.Word, 11, scope 124 // user: %301
  %300 = builtin "ptrtoint_Word"(%298 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %301
  %301 = struct $StaticString (%300 : $Builtin.Word, %299 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %305
  %302 = integer_literal $Builtin.Int32, 1, scope 124 // user: %303
  %303 = struct $UInt32 (%302 : $Builtin.Int32), scope 124 // user: %305
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %304 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124 // user: %305
  %305 = apply %304(%301, %296, %12, %297, %303) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124
  unreachable , scope 124                         // id: %306

bb80:                                             // Preds: bb40
  %307 = string_literal utf8 "Fatal error", scope 124 // user: %309
  %308 = integer_literal $Builtin.Word, 11, scope 124 // user: %310
  %309 = builtin "ptrtoint_Word"(%307 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %310
  %310 = struct $StaticString (%309 : $Builtin.Word, %308 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %314
  %311 = integer_literal $Builtin.Int32, 1, scope 124 // user: %312
  %312 = struct $UInt32 (%311 : $Builtin.Int32), scope 124 // user: %314
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %313 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124 // user: %314
  %314 = apply %313(%310, %99, %12, %100, %312) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124
  unreachable , scope 124                         // id: %315

bb81:                                             // Preds: bb37
  br bb82, scope 124                              // id: %316

bb82:                                             // Preds: bb81 bb39
  %317 = string_literal utf8 "Fatal error", scope 124 // user: %319
  %318 = integer_literal $Builtin.Word, 11, scope 124 // user: %320
  %319 = builtin "ptrtoint_Word"(%317 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %320
  %320 = struct $StaticString (%319 : $Builtin.Word, %318 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %324
  %321 = integer_literal $Builtin.Int32, 1, scope 124 // user: %322
  %322 = struct $UInt32 (%321 : $Builtin.Int32), scope 124 // user: %324
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %323 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124 // user: %324
  %324 = apply %323(%320, %104, %12, %106, %322) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124
  unreachable , scope 124                         // id: %325

bb83:                                             // Preds: bb5
  cond_br %2, bb85, bb84, scope 124               // id: %326

bb84:                                             // Preds: bb83
  br bb86(%27 : $Builtin.Int64), scope 124        // id: %327

bb85:                                             // Preds: bb83
  %328 = integer_literal $Builtin.Int64, -4611686018427387904, scope 124 // user: %329
  %329 = builtin "or_Int64"(%27 : $Builtin.Int64, %328 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %330
  br bb86(%329 : $Builtin.Int64), scope 124       // id: %330

// %331                                           // user: %333
bb86(%331 : $Builtin.Int64):                      // Preds: bb85 bb84
  %332 = integer_literal $Builtin.Int64, 1152921504606846976, scope 124 // user: %333
  %333 = builtin "or_Int64"(%331 : $Builtin.Int64, %332 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %334
  %334 = struct $UInt64 (%333 : $Builtin.Int64), scope 124 // user: %343
  %335 = builtin "ptrtoint_Word"(%0 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %336
  %336 = builtin "zextOrBitCast_Word_Int64"(%335 : $Builtin.Word) : $Builtin.Int64, scope 124 // user: %338
  %337 = integer_literal $Builtin.Int64, 32, scope 124 // user: %338
  %338 = builtin "usub_with_overflow_Int64"(%336 : $Builtin.Int64, %337 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 124 // user: %339
  %339 = tuple_extract %338 : $(Builtin.Int64, Builtin.Int1), 0, scope 124 // user: %341
  %340 = integer_literal $Builtin.Int64, -9223372036854775808, scope 124 // user: %341
  %341 = builtin "stringObjectOr_Int64"(%339 : $Builtin.Int64, %340 : $Builtin.Int64) : $Builtin.Int64, scope 124 // user: %342
  %342 = value_to_bridge_object %341 : $Builtin.Int64, scope 124 // user: %343
  %343 = struct $_StringObject (%334 : $UInt64, %342 : $Builtin.BridgeObject), scope 124 // user: %344
  %344 = struct $_StringGuts (%343 : $_StringObject), scope 124 // user: %345
  %345 = struct $String (%344 : $_StringGuts), scope 124 // user: %346
  br bb89(%345 : $String), scope 124              // id: %346

bb87:                                             // Preds: bb4
  %347 = integer_literal $Builtin.Int64, -2305843009213693952, scope 124 // user: %348
  %348 = value_to_bridge_object %347 : $Builtin.Int64, scope 124 // user: %350
  %349 = struct $UInt64 (%28 : $Builtin.Int64), scope 124 // user: %351
  %350 = unchecked_trivial_bit_cast %348 : $Builtin.BridgeObject to $UInt64, scope 124 // user: %351
  %351 = tuple (%349 : $UInt64, %350 : $UInt64), scope 124 // user: %352
  br bb88(%351 : $(UInt64, UInt64)), scope 124    // id: %352

// %353                                           // users: %355, %354
bb88(%353 : $(UInt64, UInt64)):                   // Preds: bb87 bb77
  %354 = tuple_extract %353 : $(UInt64, UInt64), 0, scope 124 // user: %358
  %355 = tuple_extract %353 : $(UInt64, UInt64), 1, scope 124 // user: %356
  %356 = struct_extract %355 : $UInt64, #UInt64._value, scope 124 // user: %357
  %357 = value_to_bridge_object %356 : $Builtin.Int64, scope 124 // user: %358
  %358 = struct $_StringObject (%354 : $UInt64, %357 : $Builtin.BridgeObject), scope 124 // user: %359
  %359 = struct $_StringGuts (%358 : $_StringObject), scope 124 // user: %360
  %360 = struct $String (%359 : $_StringGuts), scope 124 // user: %361
  br bb89(%360 : $String), scope 124              // id: %361

// %362                                           // user: %363
bb89(%362 : $String):                             // Preds: bb88 bb86
  return %362 : $String, scope 124                // id: %363

bb90:                                             // Preds: bb2
  %364 = string_literal utf8 "Fatal error", scope 124 // user: %366
  %365 = integer_literal $Builtin.Word, 11, scope 124 // user: %367
  %366 = builtin "ptrtoint_Word"(%364 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %367
  %367 = struct $StaticString (%366 : $Builtin.Word, %365 : $Builtin.Word, %8 : $Builtin.Int8), scope 124 // user: %371
  %368 = integer_literal $Builtin.Int32, 1, scope 124 // user: %369
  %369 = struct $UInt32 (%368 : $Builtin.Int32), scope 124 // user: %371
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %370 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124 // user: %371
  %371 = apply %370(%367, %9, %12, %14, %369) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 124
  unreachable , scope 124                         // id: %372
} // end sil function '$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC'


// String.append(_:), loc * "<compiler-generated>":0:0, scope 0
sil [_semantics "string.append"] @$sSS6appendyySSF : $@convention(method) (@guaranteed String, @inout String) -> ()


// _typeName(_:qualified:), loc * "<compiler-generated>":0:0, scope 0
sil [_semantics "typeName"] @$ss9_typeName_9qualifiedSSypXp_SbtF : $@convention(thin) (@thick any Any.Type, Bool) -> @owned String

sil_scope 125 { loc * "<compiler-generated>":0:0 parent @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String }

// String.init(stringInterpolation:), loc * "<compiler-generated>":0:0, scope 125
sil public_external [serialized] [readonly] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String {
[%0: escape v** => %r.v**, escape v**.c*.v** => %r.v**.c*.v**]
// %0                                             // user: %2
bb0(%0 : $DefaultStringInterpolation, %1 : $@thin String.Type):
  %2 = struct_extract %0 : $DefaultStringInterpolation, #DefaultStringInterpolation._storage, scope 125 // user: %3
  return %2 : $String, scope 125                  // id: %3
} // end sil function '$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC'


// _assertionFailure(_:_:flags:), loc * "<compiler-generated>":0:0, scope 0
sil [noinline] [_semantics "programtermination_point"] @$ss17_assertionFailure__5flagss5NeverOs12StaticStringV_SSs6UInt32VtF : $@convention(thin) (StaticString, @guaranteed String, UInt32) -> Never

sil_scope 126 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV4cast02toB2OfAByqd__Gqd__m_tlF : $@convention(method) <τ_0_0><τ_1_0> (@thick τ_1_0.Type, @owned _ArrayBuffer<τ_0_0>) -> @owned _ArrayBuffer<τ_1_0> }

// _ArrayBuffer.cast<A>(toBufferOf:), loc * "<compiler-generated>":0:0, scope 126
sil public_external [serialized] @$ss12_ArrayBufferV4cast02toB2OfAByqd__Gqd__m_tlF : $@convention(method) <Element><U> (@thick U.Type, @owned _ArrayBuffer<Element>) -> @owned _ArrayBuffer<U> {
[%1: escape v** => %r.s0.v**, escape v**.c*.v** => %r.s0.v**.c*.v**]
// %1                                             // user: %3
bb0(%0 : $@thick U.Type, %1 : $_ArrayBuffer<Element>):
  %2 = metatype $@thin _ArrayBuffer<U>.Type, scope 126 // user: %5
  %3 = struct_extract %1 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 126 // user: %5
  // function_ref _ArrayBuffer.init(storage:)
  %4 = function_ref @$ss12_ArrayBufferV7storageAByxGs14_BridgeStorageVys012__ContiguousaE4BaseCG_tcfC : $@convention(method) <τ_0_0> (@owned _BridgeStorage<__ContiguousArrayStorageBase>, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0>, scope 126 // user: %5
  %5 = apply %4<U>(%3, %2) : $@convention(method) <τ_0_0> (@owned _BridgeStorage<__ContiguousArrayStorageBase>, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0>, scope 126 // user: %6
  return %5 : $_ArrayBuffer<U>, scope 126         // id: %6
} // end sil function '$ss12_ArrayBufferV4cast02toB2OfAByqd__Gqd__m_tlF'


// _StringGuts.grow(_:), loc * "<compiler-generated>":0:0, scope 0
sil @$ss11_StringGutsV4growyySiF : $@convention(method) (Int, @inout _StringGuts) -> ()

sil_scope 127 { loc * "<compiler-generated>":0:0 parent @$ss12_ArrayBufferV7storageAByxGs14_BridgeStorageVys012__ContiguousaE4BaseCG_tcfC : $@convention(method) <τ_0_0> (@owned _BridgeStorage<__ContiguousArrayStorageBase>, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0> }

// _ArrayBuffer.init(storage:), loc * "<compiler-generated>":0:0, scope 127
sil public_external [serialized] @$ss12_ArrayBufferV7storageAByxGs14_BridgeStorageVys012__ContiguousaE4BaseCG_tcfC : $@convention(method) <Element> (@owned _BridgeStorage<__ContiguousArrayStorageBase>, @thin _ArrayBuffer<Element>.Type) -> @owned _ArrayBuffer<Element> {
[%0: escape v** => %r.s0.v**, escape v**.c*.v** => %r.s0.v**.c*.v**]
// %0                                             // user: %2
bb0(%0 : $_BridgeStorage<__ContiguousArrayStorageBase>, %1 : $@thin _ArrayBuffer<Element>.Type):
  %2 = struct $_ArrayBuffer<Element> (%0 : $_BridgeStorage<__ContiguousArrayStorageBase>), scope 127 // user: %3
  return %2 : $_ArrayBuffer<Element>, scope 127   // id: %3
} // end sil function '$ss12_ArrayBufferV7storageAByxGs14_BridgeStorageVys012__ContiguousaE4BaseCG_tcfC'

sil_scope 128 { loc * "<compiler-generated>":0:0 parent @$ss22_ContiguousArrayBufferV16beginCOWMutationSbyF : $@convention(method) <τ_0_0> (@inout _ContiguousArrayBuffer<τ_0_0>) -> Bool }

// _ContiguousArrayBuffer.beginCOWMutation(), loc * "<compiler-generated>":0:0, scope 128
sil shared [serialized] @$ss22_ContiguousArrayBufferV16beginCOWMutationSbyF : $@convention(method) <Element> (@inout _ContiguousArrayBuffer<Element>) -> Bool {
[%0: escape v** -> %0.s0.v**, escape v**.c*.v** -> %0.s0.v**.c*.v**, read s0.v**, write v**, destroy v**]
[global: destroy]
// %0                                             // users: %6, %1
bb0(%0 : $*_ContiguousArrayBuffer<Element>):
  %1 = struct_element_addr %0 : $*_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 128 // user: %2
  %2 = load %1 : $*__ContiguousArrayStorageBase, scope 128 // user: %3
  (%3, %4) = begin_cow_mutation %2 : $__ContiguousArrayStorageBase, scope 128 // users: %7, %5
  %5 = struct $_ContiguousArrayBuffer<Element> (%4 : $__ContiguousArrayStorageBase), scope 128 // user: %6
  store %5 to %0 : $*_ContiguousArrayBuffer<Element>, scope 128 // id: %6
  cond_br %3, bb2, bb1, scope 128                 // id: %7

bb1:                                              // Preds: bb0
  %8 = integer_literal $Builtin.Int1, 0, scope 128 // user: %9
  br bb3(%8 : $Builtin.Int1), scope 128           // id: %9

bb2:                                              // Preds: bb0
  %10 = integer_literal $Builtin.Int1, -1, scope 128 // user: %11
  br bb3(%10 : $Builtin.Int1), scope 128          // id: %11

// %12                                            // user: %13
bb3(%12 : $Builtin.Int1):                         // Preds: bb2 bb1
  %13 = struct $Bool (%12 : $Builtin.Int1), scope 128 // user: %14
  return %13 : $Bool, scope 128                   // id: %14
} // end sil function '$ss22_ContiguousArrayBufferV16beginCOWMutationSbyF'

sil_scope 129 { loc * "<compiler-generated>":0:0 parent @$ss15ContiguousArrayV5countSivg : $@convention(method) <τ_0_0> (@guaranteed ContiguousArray<τ_0_0>) -> Int }

// ContiguousArray.count.getter, loc * "<compiler-generated>":0:0, scope 129
sil public_external [serialized] @$ss15ContiguousArrayV5countSivg : $@convention(method) <Element> (@guaranteed ContiguousArray<Element>) -> Int {
[%0: noescape **]
// %0                                             // user: %2
bb0(%0 : $ContiguousArray<Element>):
  // function_ref ContiguousArray._getCount()
  %1 = function_ref @$ss15ContiguousArrayV9_getCountSiyF : $@convention(method) <τ_0_0> (@guaranteed ContiguousArray<τ_0_0>) -> Int, scope 129 // user: %2
  %2 = apply %1<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed ContiguousArray<τ_0_0>) -> Int, scope 129 // user: %3
  return %2 : $Int, scope 129                     // id: %3
} // end sil function '$ss15ContiguousArrayV5countSivg'

sil_scope 130 { loc * "<compiler-generated>":0:0 parent @$ss15ContiguousArrayV9_getCountSiyF : $@convention(method) <τ_0_0> (@guaranteed ContiguousArray<τ_0_0>) -> Int }

// ContiguousArray._getCount(), loc * "<compiler-generated>":0:0, scope 130
sil public_external [serialized] [_semantics "array.get_count"] @$ss15ContiguousArrayV9_getCountSiyF : $@convention(method) <Element> (@guaranteed ContiguousArray<Element>) -> Int {
[%0: noescape **]
// %0                                             // user: %1
bb0(%0 : $ContiguousArray<Element>):
  %1 = struct_extract %0 : $ContiguousArray<Element>, #ContiguousArray._buffer, scope 130 // user: %2
  %2 = struct_extract %1 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage, scope 130 // user: %3
  %3 = ref_element_addr [immutable] %2 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity, scope 130 // user: %4
  %4 = struct_element_addr %3 : $*_ArrayBody, #_ArrayBody._storage, scope 130 // user: %5
  %5 = struct_element_addr %4 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 130 // user: %6
  %6 = struct_element_addr %5 : $*Int, #Int._value, scope 130 // user: %7
  %7 = load %6 : $*Builtin.Int64, scope 130       // user: %8
  %8 = builtin "assumeNonNegative_Int64"(%7 : $Builtin.Int64) : $Builtin.Int64, scope 130 // user: %9
  %9 = struct $Int (%8 : $Builtin.Int64), scope 130 // user: %10
  return %9 : $Int, scope 130                     // id: %10
} // end sil function '$ss15ContiguousArrayV9_getCountSiyF'

sil_vtable ViewController {
  #ViewController.deinit!deallocator: @$s8TestSwan14ViewControllerCfD	// ViewController.__deallocating_deinit
}

sil_vtable AppDelegate {
  #AppDelegate.deinit!deallocator: @$s8TestSwan11AppDelegateCfD	// AppDelegate.__deallocating_deinit
}

sil_vtable ResourceBundleClass {
  #ResourceBundleClass.deinit!deallocator: @$s8TestSwan19ResourceBundleClass33_7E57A1E4A3086DE18043CF46058E5058LLCfD	// ResourceBundleClass.__deallocating_deinit
}

sil_vtable [serialized] _ContiguousArrayStorage {
  #__SwiftNativeNSArray.init!allocator: (__SwiftNativeNSArray.Type) -> () -> __SwiftNativeNSArray : @$ss41__SwiftNativeNSArrayWithContiguousStorageCABycfC [inherited]	// __SwiftNativeNSArrayWithContiguousStorage.__allocating_init()
  #__ContiguousArrayStorageBase.init!allocator: (__ContiguousArrayStorageBase.Type) -> (()) -> __ContiguousArrayStorageBase : @$ss23_ContiguousArrayStorageC16_doNotCallMeBaseAByxGyt_tcfC [override]	// _ContiguousArrayStorage.__allocating_init(_doNotCallMeBase:)
  #__ContiguousArrayStorageBase.canStoreElements: (__ContiguousArrayStorageBase) -> (any Any.Type) -> Bool : @$ss23_ContiguousArrayStorageC16canStoreElements13ofDynamicTypeSbypXp_tF [override]	// _ContiguousArrayStorage.canStoreElements(ofDynamicType:)
  #__ContiguousArrayStorageBase.staticElementType!getter: (__ContiguousArrayStorageBase) -> () -> any Any.Type : @$ss23_ContiguousArrayStorageC17staticElementTypeypXpvg [override]	// _ContiguousArrayStorage.staticElementType.getter
  #_ContiguousArrayStorage.deinit!deallocator: @$ss23_ContiguousArrayStorageCfD	// _ContiguousArrayStorage.__deallocating_deinit
}

sil_vtable [serialized] __SwiftNativeNSArrayWithContiguousStorage {
  #__SwiftNativeNSArray.init!allocator: (__SwiftNativeNSArray.Type) -> () -> __SwiftNativeNSArray : @$ss41__SwiftNativeNSArrayWithContiguousStorageCABycfC [override]	// __SwiftNativeNSArrayWithContiguousStorage.__allocating_init()
  #__SwiftNativeNSArrayWithContiguousStorage.deinit!deallocator: @$ss41__SwiftNativeNSArrayWithContiguousStorageCfD	// __SwiftNativeNSArrayWithContiguousStorage.__deallocating_deinit
}




CompileSwift normal arm64 (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -c /Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift /Users/v/Developer/TestSwan/TestSwan/ViewController.swift /Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/GeneratedAssetSymbols.swift -supplementary-output-file-map /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/supplementaryOutputs-1 -emit-localized-strings -emit-localized-strings-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64 -target arm64-apple-macos14.0 -Xllvm -aarch64-use-tbi -enable-objc-interop -stack-check -sdk /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk -I /Users/v/Developer/TestSwan/build/Release -F /Users/v/Developer/TestSwan/build/Release -no-color-diagnostics -g -swift-version 5 -enforce-exclusivity\=checked -O -sil-based-debuginfo -serialize-debugging-options -const-gather-protocols-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan_const_extract_protocols.json -enable-bare-slash-regex -empty-abi-descriptor -validate-clang-modules-once -clang-build-session-file /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/org.llvm.clang/ModuleCache.noindex/Session.modulevalidation -Xcc -working-directory -Xcc /Users/v/Developer/TestSwan -resource-dir /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -Xllvm -sil-print-debuginfo -Xllvm -sil-print-before\=SerializeSILPass -Xcc -ivfsstatcache -Xcc /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/com.apple.DeveloperTools/15.0.1-15A507/Xcode/SDKStatCaches.noindex/macosx14.0-23A334-a6d624f38f346a2334bec600b7c81604.sdkstatcache -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-generated-files.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-own-target-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-all-target-headers.hmap -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-project-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/Release/include -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources-normal/arm64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/arm64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources -module-name TestSwan -frontend-parseable-output -disable-clang-spi -target-sdk-version 14.0 -target-sdk-name macosx14.0 -external-plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/lib/swift/host/plugins\#/Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/local/lib/swift/host/plugins\#/Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins\#/Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins\#/Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -enable-default-cmo -num-threads 12 -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/NSTextField+Extension.o -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/ViewController.o -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/AppDelegate.o -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/GeneratedAssetSymbols.o -index-unit-output-path /TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/NSTextField+Extension.o -index-unit-output-path /TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/ViewController.o -index-unit-output-path /TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/AppDelegate.o -index-unit-output-path /TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/GeneratedAssetSymbols.o

SwiftDriverJobDiscovery normal arm64 Compiling NSTextField+Extension.swift, ViewController.swift, AppDelegate.swift, GeneratedAssetSymbols.swift (in target 'TestSwan' from project 'TestSwan')

SwiftDriver\ Compilation\ Requirements TestSwan normal arm64 com.apple.xcode.tools.swift.compiler (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-Swift-Compilation-Requirements -- /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name TestSwan -O -whole-module-optimization -enforce-exclusivity\=checked @/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.SwiftFileList -Xfrontend -sil-based-debuginfo -Xllvm -sil-print-debuginfo -Xllvm -sil-print-before\=SerializeSILPass -sdk /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk -target arm64-apple-macos14.0 -enable-bare-slash-regex -g -Xfrontend -serialize-debugging-options -swift-version 5 -I /Users/v/Developer/TestSwan/build/Release -F /Users/v/Developer/TestSwan/build/Release -emit-localized-strings -emit-localized-strings-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64 -c -num-threads 12 -Xcc -ivfsstatcache -Xcc /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/com.apple.DeveloperTools/15.0.1-15A507/Xcode/SDKStatCaches.noindex/macosx14.0-23A334-a6d624f38f346a2334bec600b7c81604.sdkstatcache -output-file-map /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan-OutputFileMap.json -use-frontend-parseable-output -save-temps -no-color-diagnostics -serialize-diagnostics -emit-dependencies -emit-module -emit-module-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.swiftmodule -validate-clang-modules-once -clang-build-session-file /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/org.llvm.clang/ModuleCache.noindex/Session.modulevalidation -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/swift-overrides.hmap -emit-const-values -Xfrontend -const-gather-protocols-file -Xfrontend /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan_const_extract_protocols.json -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-generated-files.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-own-target-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-all-target-headers.hmap -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-project-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/Release/include -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources-normal/arm64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/arm64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources -emit-objc-header -emit-objc-header-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan-Swift.h -working-directory /Users/v/Developer/TestSwan -no-emit-module-separately-wmo

Copy /Users/v/Developer/TestSwan/build/Release/TestSwan.swiftmodule/arm64-apple-macos.swiftdoc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.swiftdoc (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks -rename /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.swiftdoc /Users/v/Developer/TestSwan/build/Release/TestSwan.swiftmodule/arm64-apple-macos.swiftdoc

Copy /Users/v/Developer/TestSwan/build/Release/TestSwan.swiftmodule/arm64-apple-macos.swiftmodule /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.swiftmodule (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks -rename /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.swiftmodule /Users/v/Developer/TestSwan/build/Release/TestSwan.swiftmodule/arm64-apple-macos.swiftmodule

Copy /Users/v/Developer/TestSwan/build/Release/TestSwan.swiftmodule/arm64-apple-macos.abi.json /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.abi.json (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks -rename /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.abi.json /Users/v/Developer/TestSwan/build/Release/TestSwan.swiftmodule/arm64-apple-macos.abi.json

Copy /Users/v/Developer/TestSwan/build/Release/TestSwan.swiftmodule/Project/arm64-apple-macos.swiftsourceinfo /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.swiftsourceinfo (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks -rename /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.swiftsourceinfo /Users/v/Developer/TestSwan/build/Release/TestSwan.swiftmodule/Project/arm64-apple-macos.swiftsourceinfo

SwiftDriverJobDiscovery normal x86_64 Compiling NSTextField+Extension.swift, ViewController.swift, AppDelegate.swift, GeneratedAssetSymbols.swift (in target 'TestSwan' from project 'TestSwan')

SwiftDriver\ Compilation\ Requirements TestSwan normal x86_64 com.apple.xcode.tools.swift.compiler (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-Swift-Compilation-Requirements -- /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name TestSwan -O -whole-module-optimization -enforce-exclusivity\=checked @/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.SwiftFileList -Xfrontend -sil-based-debuginfo -Xllvm -sil-print-debuginfo -Xllvm -sil-print-before\=SerializeSILPass -sdk /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk -target x86_64-apple-macos14.0 -enable-bare-slash-regex -g -Xfrontend -serialize-debugging-options -swift-version 5 -I /Users/v/Developer/TestSwan/build/Release -F /Users/v/Developer/TestSwan/build/Release -emit-localized-strings -emit-localized-strings-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64 -c -num-threads 12 -Xcc -ivfsstatcache -Xcc /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/com.apple.DeveloperTools/15.0.1-15A507/Xcode/SDKStatCaches.noindex/macosx14.0-23A334-a6d624f38f346a2334bec600b7c81604.sdkstatcache -output-file-map /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan-OutputFileMap.json -use-frontend-parseable-output -save-temps -no-color-diagnostics -serialize-diagnostics -emit-dependencies -emit-module -emit-module-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.swiftmodule -validate-clang-modules-once -clang-build-session-file /var/folders/wq/rqclh20s7f56_89m8rrw_d540000gn/C/org.llvm.clang/ModuleCache.noindex/Session.modulevalidation -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/swift-overrides.hmap -emit-const-values -Xfrontend -const-gather-protocols-file -Xfrontend /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan_const_extract_protocols.json -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-generated-files.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-own-target-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-all-target-headers.hmap -Xcc -iquote -Xcc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/TestSwan-project-headers.hmap -Xcc -I/Users/v/Developer/TestSwan/build/Release/include -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources-normal/x86_64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/x86_64 -Xcc -I/Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources -emit-objc-header -emit-objc-header-path /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan-Swift.h -working-directory /Users/v/Developer/TestSwan -no-emit-module-separately-wmo

SwiftMergeGeneratedHeaders /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/TestSwan-Swift.h /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan-Swift.h /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan-Swift.h (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-swiftHeaderTool -arch arm64 /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan-Swift.h -arch x86_64 /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan-Swift.h -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/DerivedSources/TestSwan-Swift.h

Copy /Users/v/Developer/TestSwan/build/Release/TestSwan.swiftmodule/x86_64-apple-macos.swiftmodule /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.swiftmodule (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks -rename /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.swiftmodule /Users/v/Developer/TestSwan/build/Release/TestSwan.swiftmodule/x86_64-apple-macos.swiftmodule

Copy /Users/v/Developer/TestSwan/build/Release/TestSwan.swiftmodule/x86_64-apple-macos.swiftdoc /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.swiftdoc (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks -rename /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.swiftdoc /Users/v/Developer/TestSwan/build/Release/TestSwan.swiftmodule/x86_64-apple-macos.swiftdoc

Copy /Users/v/Developer/TestSwan/build/Release/TestSwan.swiftmodule/x86_64-apple-macos.abi.json /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.abi.json (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks -rename /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.abi.json /Users/v/Developer/TestSwan/build/Release/TestSwan.swiftmodule/x86_64-apple-macos.abi.json

Copy /Users/v/Developer/TestSwan/build/Release/TestSwan.swiftmodule/Project/x86_64-apple-macos.swiftsourceinfo /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.swiftsourceinfo (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks -rename /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.swiftsourceinfo /Users/v/Developer/TestSwan/build/Release/TestSwan.swiftmodule/Project/x86_64-apple-macos.swiftsourceinfo

Ld /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/Binary/TestSwan normal x86_64 (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -Xlinker -reproducible -target x86_64-apple-macos14.0 -isysroot /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk -Os -L/Users/v/Developer/TestSwan/build/EagerLinkingTBDs/Release -L/Users/v/Developer/TestSwan/build/Release -F/Users/v/Developer/TestSwan/build/EagerLinkingTBDs/Release -F/Users/v/Developer/TestSwan/build/Release -filelist /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.LinkFileList -Xlinker -rpath -Xlinker @executable_path/../Frameworks -Xlinker -object_path_lto -Xlinker /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan_lto.o -fobjc-link-runtime -L/Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx -L/usr/lib/swift -Xlinker -add_ast_path -Xlinker /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan.swiftmodule -Xlinker -dependency_info -Xlinker /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan_dependency_info.dat -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/Binary/TestSwan

Ld /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/Binary/TestSwan normal arm64 (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -Xlinker -reproducible -target arm64-apple-macos14.0 -isysroot /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk -Os -L/Users/v/Developer/TestSwan/build/EagerLinkingTBDs/Release -L/Users/v/Developer/TestSwan/build/Release -F/Users/v/Developer/TestSwan/build/EagerLinkingTBDs/Release -F/Users/v/Developer/TestSwan/build/Release -filelist /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.LinkFileList -Xlinker -rpath -Xlinker @executable_path/../Frameworks -Xlinker -object_path_lto -Xlinker /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan_lto.o -fobjc-link-runtime -L/Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx -L/usr/lib/swift -Xlinker -add_ast_path -Xlinker /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan.swiftmodule -Xlinker -dependency_info -Xlinker /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan_dependency_info.dat -o /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/Binary/TestSwan

CreateUniversalBinary /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/MacOS/TestSwan normal arm64\ x86_64 (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo -create /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/Binary/TestSwan /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/Binary/TestSwan -output /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/MacOS/TestSwan

ProcessInfoPlistFile /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/Info.plist /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/empty-TestSwan.plist (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-infoPlistUtility /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/empty-TestSwan.plist -producttype com.apple.product-type.application -genpkginfo /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/PkgInfo -expandbuildsettings -platform macosx -additionalcontentfile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/assetcatalog_generated_info.plist -additionalcontentfile /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Base.lproj/Main-SBPartialInfo.plist -o /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/Info.plist

LinkStoryboards (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /Applications/Xcode-15.0.1.app/Contents/Developer/usr/bin/ibtool --errors --warnings --notices --module TestSwan --target-device mac --minimum-deployment-target 14.0 --output-format human-readable-text --link /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/Resources /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Base.lproj/Main.storyboardc

GenerateDSYMFile /Users/v/Developer/TestSwan/build/Release/TestSwan.app.dSYM /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/MacOS/TestSwan (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/dsymutil /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/MacOS/TestSwan -o /Users/v/Developer/TestSwan/build/Release/TestSwan.app.dSYM

CopySwiftLibs /Users/v/Developer/TestSwan/build/Release/TestSwan.app (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-swiftStdLibTool --copy --verbose --scan-executable /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/MacOS/TestSwan --scan-folder /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/Frameworks --scan-folder /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/PlugIns --scan-folder /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/Library/SystemExtensions --scan-folder /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/Extensions --platform macosx --toolchain /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain --destination /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/Frameworks --strip-bitcode --strip-bitcode-tool /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/bitcode_strip --emit-dependency-info /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/SwiftStdLibToolInputDependencies.dep --filter-for-swift-os
Ignoring --strip-bitcode because --sign was not passed

ExtractAppIntentsMetadata (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/appintentsmetadataprocessor --output /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/Resources --toolchain-dir /Applications/Xcode-15.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain --module-name TestSwan --sdk-root /Applications/Xcode-15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk --target-triple arm64-apple-macos14.0 --target-triple x86_64-apple-macos14.0 --source-files /Users/v/Developer/TestSwan/TestSwan/NSTextField+Extension.swift --source-files /Users/v/Developer/TestSwan/TestSwan/ViewController.swift --source-files /Users/v/Developer/TestSwan/TestSwan/AppDelegate.swift --binary-file /Users/v/Developer/TestSwan/build/Release/TestSwan.app/Contents/MacOS/TestSwan --dependency-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan_dependency_info.dat --dependency-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/TestSwan_dependency_info.dat --swift-const-vals /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/TestSwan-master.swiftconstvalues --stringsdata-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/arm64/ExtractedAppShortcutsMetadata.stringsdata --stringsdata-file /Users/v/Developer/TestSwan/build/TestSwan.build/Release/TestSwan.build/Objects-normal/x86_64/ExtractedAppShortcutsMetadata.stringsdata --compile-time-extraction
note: Metadata extraction skipped. No AppIntents.framework dependency found. (in target 'TestSwan' from project 'TestSwan')

RegisterExecutionPolicyException /Users/v/Developer/TestSwan/build/Release/TestSwan.app (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-RegisterExecutionPolicyException /Users/v/Developer/TestSwan/build/Release/TestSwan.app

Validate /Users/v/Developer/TestSwan/build/Release/TestSwan.app (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    builtin-validationUtility /Users/v/Developer/TestSwan/build/Release/TestSwan.app -no-validate-extension

Touch /Users/v/Developer/TestSwan/build/Release/TestSwan.app (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /usr/bin/touch -c /Users/v/Developer/TestSwan/build/Release/TestSwan.app

RegisterWithLaunchServices /Users/v/Developer/TestSwan/build/Release/TestSwan.app (in target 'TestSwan' from project 'TestSwan')
    cd /Users/v/Developer/TestSwan
    /System/Library/Frameworks/CoreServices.framework/Versions/Current/Frameworks/LaunchServices.framework/Versions/Current/Support/lsregister -f -R -trusted /Users/v/Developer/TestSwan/build/Release/TestSwan.app

** BUILD SUCCEEDED **

